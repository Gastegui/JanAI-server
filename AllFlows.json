[
    {
        "id": "375e32b86ebbfc9f",
        "type": "tab",
        "label": "User services w/dashboard",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "de65a14eb0239352",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "User created",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "user",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 7100,
        "y": 40,
        "wires": [
            [
                "536cfc69069d0b44"
            ]
        ]
    },
    {
        "id": "3d35f002d67f2537",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "user selection",
        "func": "var userGender = flow.get('user.gender') || 0;\nvar activityLevel = flow.get('user.activityLevel') || 0;\nvar premium = flow.get('user.premium') || 0;\nvar userObjective = flow.get('user.objective') || 0;\n\n\nvar user = {uname: msg.payload.uname,\n            secondName: msg.payload.secondName,\n            gender: userGender,\n            age: msg.payload.age,\n            height: msg.payload.height,\n            username: msg.payload.username,\n            email: msg.payload.email,\n            userPass: msg.payload.userPass,\n            activityLevel: activityLevel,\n            premium: premium,\n            objective: userObjective,\n            neck: msg.payload.neck,\n            waist: msg.payload.waist,\n            hips: msg.payload.hips\n            };\n\nmsg.payload = user;\nflow.set('user', user);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 400,
        "wires": [
            [
                "b72b020b327dad10"
            ]
        ]
    },
    {
        "id": "33e71e4314afee63",
        "type": "http request",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/register",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 650,
        "y": 400,
        "wires": [
            [
                "ccbd64c7992a165a",
                "1b35d3779a2ade65"
            ]
        ]
    },
    {
        "id": "b72b020b327dad10",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 400,
        "wires": [
            [
                "33e71e4314afee63"
            ]
        ]
    },
    {
        "id": "ccbd64c7992a165a",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "mypost",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 560,
        "wires": []
    },
    {
        "id": "d7ad34deb9f59360",
        "type": "switch",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "201",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1730,
        "y": 720,
        "wires": [
            [
                "a1b723236490e438",
                "0850a592361febee"
            ],
            [
                "5346617127dd1d8f"
            ],
            [
                "2bcb1f0bda41ce19"
            ]
        ]
    },
    {
        "id": "5346617127dd1d8f",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "Username exists error",
        "func": "msg.payload = 'The username does exist: ' + msg.user;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2040,
        "y": 720,
        "wires": [
            [
                "09830c3d198e97b4"
            ]
        ]
    },
    {
        "id": "359740e76de60a43",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "mysitepost",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1318.0000305175781,
        "y": 2620.0000257492065,
        "wires": []
    },
    {
        "id": "a1b723236490e438",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "username",
                "pt": "msg",
                "to": "user.username",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Login",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1993,
        "y": 655,
        "wires": [
            [
                "213b7df293c84a2f"
            ]
        ]
    },
    {
        "id": "09830c3d198e97b4",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Cannot create user",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2320,
        "y": 720,
        "wires": [
            [
                "c121905283a20064"
            ]
        ]
    },
    {
        "id": "2bcb1f0bda41ce19",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Error",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "It has been an error",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2020,
        "y": 780,
        "wires": [
            [
                "fa918e519df2d9c5"
            ]
        ]
    },
    {
        "id": "2e155831e81848fc",
        "type": "comment",
        "z": "375e32b86ebbfc9f",
        "name": "Create user (POST)",
        "info": "",
        "x": 150,
        "y": 520,
        "wires": []
    },
    {
        "id": "466136e14da9dc79",
        "type": "http request",
        "z": "375e32b86ebbfc9f",
        "name": "Get all ",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "body",
        "url": "http://localhost:8080/user/show",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 610,
        "y": 5700,
        "wires": [
            [
                "0c2e3eacfe356659"
            ]
        ]
    },
    {
        "id": "dc18376bd6866984",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "debug 11",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 5700,
        "wires": []
    },
    {
        "id": "0c2e3eacfe356659",
        "type": "json",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": true,
        "x": 770,
        "y": 5700,
        "wires": [
            [
                "dc18376bd6866984",
                "5a21887d03981077"
            ]
        ]
    },
    {
        "id": "a7df0bf7d9321649",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 5700,
        "wires": [
            [
                "466136e14da9dc79"
            ]
        ]
    },
    {
        "id": "1891af658c83ae09",
        "type": "comment",
        "z": "375e32b86ebbfc9f",
        "name": "Get users (GET)",
        "info": "",
        "x": 300,
        "y": 5640,
        "wires": []
    },
    {
        "id": "86f1cb3a60317b93",
        "type": "http response",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1410,
        "y": 5820,
        "wires": []
    },
    {
        "id": "3263e4c81d234b30",
        "type": "http request",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "method": "DELETE",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/user/delete/{{{id}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1240,
        "y": 5820,
        "wires": [
            [
                "86f1cb3a60317b93"
            ]
        ]
    },
    {
        "id": "ba516e807b49e22c",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "mydelete",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1220,
        "y": 5860,
        "wires": []
    },
    {
        "id": "6a57d369b4b60ec6",
        "type": "comment",
        "z": "375e32b86ebbfc9f",
        "name": "Delete current user (DELETE)",
        "info": "",
        "x": 320,
        "y": 5780,
        "wires": []
    },
    {
        "id": "19f6b908bcfe509c",
        "type": "http request",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/user/usersByUsername?username={{{username}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 670,
        "y": 5860,
        "wires": [
            [
                "87429041ed603789"
            ]
        ]
    },
    {
        "id": "ff2922c9480afdee",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "username",
                "pt": "msg",
                "to": "username",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 5860,
        "wires": [
            [
                "19f6b908bcfe509c"
            ]
        ]
    },
    {
        "id": "87429041ed603789",
        "type": "json",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 810,
        "y": 5860,
        "wires": [
            [
                "6ddc5577eecce4c1"
            ]
        ]
    },
    {
        "id": "6ddc5577eecce4c1",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "id",
                "pt": "msg",
                "to": "payload.userID",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "user.id",
                "pt": "flow",
                "to": "payload.userID",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 5860,
        "wires": [
            [
                "3263e4c81d234b30",
                "ba516e807b49e22c",
                "a1ef9eff7db03192"
            ]
        ]
    },
    {
        "id": "4ba93c3aef55df1b",
        "type": "http response",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2130,
        "y": 5980,
        "wires": []
    },
    {
        "id": "cd581f02163324e9",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "change username",
        "func": "msg.payload.username = msg.newUsername;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 6040,
        "wires": [
            [
                "89aca7f9b5be6b0e"
            ]
        ]
    },
    {
        "id": "53b5edacc71c0df0",
        "type": "http request",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/user/modify/{{{id}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1930,
        "y": 6040,
        "wires": [
            [
                "4ba93c3aef55df1b",
                "a4650359e6032875"
            ]
        ]
    },
    {
        "id": "89aca7f9b5be6b0e",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 6040,
        "wires": [
            [
                "53b5edacc71c0df0"
            ]
        ]
    },
    {
        "id": "18a54e3f7625f897",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "id",
                "pt": "msg",
                "to": "payload.userID",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "user.id",
                "pt": "flow",
                "to": "payload.userID",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1340,
        "y": 6040,
        "wires": [
            [
                "cd581f02163324e9"
            ]
        ]
    },
    {
        "id": "e1ca6bb807ee9aa9",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "mypost",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1320,
        "y": 6120,
        "wires": []
    },
    {
        "id": "2a16831000976d96",
        "type": "http request",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/user/usersByUsername?username={{{username}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1030,
        "y": 6080,
        "wires": [
            [
                "bde64d0ae60adc10",
                "c89bcec79252131c"
            ]
        ]
    },
    {
        "id": "04ace150edcc0717",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "newUsername",
                "pt": "msg",
                "to": "payload.username",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "username",
                "pt": "msg",
                "to": "user.username",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "username",
                "pt": "flow",
                "to": "newUsername",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 6080,
        "wires": [
            [
                "2a16831000976d96",
                "bd78c6e1b6f4e642"
            ]
        ]
    },
    {
        "id": "bde64d0ae60adc10",
        "type": "json",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1170,
        "y": 6080,
        "wires": [
            [
                "18a54e3f7625f897",
                "e1ca6bb807ee9aa9"
            ]
        ]
    },
    {
        "id": "9f79c5d639a6e377",
        "type": "comment",
        "z": "375e32b86ebbfc9f",
        "name": "Change Username",
        "info": "",
        "x": 530,
        "y": 5980,
        "wires": []
    },
    {
        "id": "8718934dceb9603b",
        "type": "comment",
        "z": "375e32b86ebbfc9f",
        "name": "Modify current user (PUT)",
        "info": "",
        "x": 310,
        "y": 5980,
        "wires": []
    },
    {
        "id": "8bd4cd9ea98faa6e",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "user selection",
        "func": "var user = {uname: msg.payload.uname,\n            secondName: msg.payload.secondName,\n            userPass: msg.payload.userPass\n            };\n\nmsg.payload = user;\nmsg.user=user;\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 6080,
        "wires": [
            [
                "04ace150edcc0717"
            ]
        ]
    },
    {
        "id": "63be18d221edbb91",
        "type": "comment",
        "z": "375e32b86ebbfc9f",
        "name": "\"No response object\"",
        "info": "",
        "x": 1460,
        "y": 5780,
        "wires": []
    },
    {
        "id": "0850a592361febee",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "User counter",
        "func": "let contador = global.get(\"userCount\") || 0;\n\n//contador = 0;\ncontador += 1;\n\nglobal.set(\"userCount\", contador);\n\n/*msg.counter = {\n    userCount: contador\n};*/\nmsg.payload = contador;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1990,
        "y": 600,
        "wires": [
            [
                "e1dca7d63c3b5c6d"
            ]
        ]
    },
    {
        "id": "a1ef9eff7db03192",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "User deleted",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "user",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 5920,
        "wires": [
            [
                "04e6e2fd156f4515"
            ]
        ]
    },
    {
        "id": "a4650359e6032875",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "User modified",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "user",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2120,
        "y": 6080,
        "wires": [
            [
                "de41857308f52fd7"
            ]
        ]
    },
    {
        "id": "36989b3f030e2233",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "user.gender",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "190630c2ae649cbf",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "user.activityLevel",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "ad7fd0b579f49d10",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "user.premium",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "e4a926ebfb43586d",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "user.objective",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "b66cae292e8cf676",
        "type": "comment",
        "z": "375e32b86ebbfc9f",
        "name": "Main page",
        "info": "",
        "x": 200,
        "y": 4460,
        "wires": []
    },
    {
        "id": "9ccabc4a07dec5e8",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "User created",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "user",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1480,
        "y": 5120,
        "wires": [
            [
                "ebf3b0cc594254fb"
            ]
        ]
    },
    {
        "id": "9e595d14ba1e6673",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "food selection",
        "func": "var food = {foodName: msg.payload.foodName,\n            proteins: msg.payload.proteins,\n            carbs: msg.payload.carbs,\n            fats: msg.payload.fats,\n            fiber: msg.payload.fiber\n            };\n\nmsg.payload = food;\nmsg.user = food;\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 5220,
        "wires": [
            [
                "4d098cc7e5321f17",
                "93f25ba04554458c"
            ]
        ]
    },
    {
        "id": "4d098cc7e5321f17",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "Food to send",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 5160,
        "wires": []
    },
    {
        "id": "8f155ce80954bc61",
        "type": "http request",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/food/add",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 830,
        "y": 5280,
        "wires": [
            [
                "81f6d103a7dfbc12",
                "dfaffb74c4ba9524"
            ]
        ]
    },
    {
        "id": "16163e64b6472a4e",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 5280,
        "wires": [
            [
                "8f155ce80954bc61"
            ]
        ]
    },
    {
        "id": "81f6d103a7dfbc12",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "foodPost",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 5360,
        "wires": []
    },
    {
        "id": "dfaffb74c4ba9524",
        "type": "switch",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "201",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1010,
        "y": 5280,
        "wires": [
            [
                "a2ac1581fefbf4ef"
            ],
            [
                "3225c7953dfb7202"
            ],
            [
                "6216427fd6bcb1bd"
            ]
        ]
    },
    {
        "id": "135875ff2586778f",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1430,
        "y": 5260,
        "wires": []
    },
    {
        "id": "3225c7953dfb7202",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "Food exists error",
        "func": "msg.payload = 'The food does exist: ' + msg.user;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 5300,
        "wires": [
            [
                "135875ff2586778f",
                "8833fbe01b33b3b8"
            ]
        ]
    },
    {
        "id": "18a6c101614c938d",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "mysitepost",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1470,
        "y": 5200,
        "wires": []
    },
    {
        "id": "a2ac1581fefbf4ef",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "username",
                "pt": "flow",
                "to": "user.username",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 5160,
        "wires": [
            [
                "18a6c101614c938d",
                "9ccabc4a07dec5e8"
            ]
        ]
    },
    {
        "id": "8833fbe01b33b3b8",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Cannot create user",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1450,
        "y": 5340,
        "wires": [
            [
                "aa714da79ee21685"
            ]
        ]
    },
    {
        "id": "6216427fd6bcb1bd",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Error",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "It has been an error",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 5400,
        "wires": [
            [
                "9a7ce1ac53cfe3f7"
            ]
        ]
    },
    {
        "id": "f9a5314f39d17ea4",
        "type": "comment",
        "z": "375e32b86ebbfc9f",
        "name": "Create food (POST)",
        "info": "",
        "x": 250,
        "y": 5160,
        "wires": []
    },
    {
        "id": "e252b7aeb9caf845",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "dynamic max and min",
        "func": "var max = msg.proteins;\nvar min = 0;\nvar curPayload = Math.round(msg.payload.totalProteins);\nmsg = {\n    ui_control:{min:min,max:max},\n    payload: curPayload\n    };\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 4540,
        "wires": [
            [
                "b867094ea99c61c4"
            ]
        ]
    },
    {
        "id": "da1dbdc64c43b7c1",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "User logged",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "user",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2180,
        "y": 1080,
        "wires": [
            [
                "33bc6335129c819b"
            ]
        ]
    },
    {
        "id": "e723a5028a804001",
        "type": "http request",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/login/auth",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 810,
        "y": 1260,
        "wires": [
            [
                "c0a353d64e6794c8",
                "783f38355b8728a8",
                "cb38075b0a56550a"
            ]
        ]
    },
    {
        "id": "ac9bb49ce0cf5bfe",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1260,
        "wires": [
            [
                "e723a5028a804001"
            ]
        ]
    },
    {
        "id": "cb38075b0a56550a",
        "type": "switch",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1070,
        "y": 1259,
        "wires": [
            [
                "703fb9e4b4ce9132"
            ],
            [
                "839562e8f4fdba2b"
            ],
            [
                "b2ba2f3cde950f0c"
            ]
        ]
    },
    {
        "id": "0db1e21b2259f631",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1750,
        "y": 1300,
        "wires": []
    },
    {
        "id": "839562e8f4fdba2b",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "Username exists error",
        "func": "msg.payload = 'The username does exist: ' + msg.user;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 1320,
        "wires": [
            [
                "0db1e21b2259f631",
                "14c8d7d3a63cba37"
            ]
        ]
    },
    {
        "id": "14c8d7d3a63cba37",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Cannot create user",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1770,
        "y": 1340,
        "wires": [
            [
                "bc995d2f55a03493"
            ]
        ]
    },
    {
        "id": "b2ba2f3cde950f0c",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Error",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "It has been an error",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1520,
        "y": 1400,
        "wires": [
            [
                "976ed52e1cc48f68"
            ]
        ]
    },
    {
        "id": "0519cae99e5e7e36",
        "type": "comment",
        "z": "375e32b86ebbfc9f",
        "name": "Login",
        "info": "",
        "x": 150,
        "y": 1120,
        "wires": []
    },
    {
        "id": "50cbb914bd263843",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "user",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "username",
                "pt": "msg",
                "to": "payload.username",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "userPass",
                "pt": "msg",
                "to": "payload.userPass",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 1260,
        "wires": [
            [
                "a9ed40802d02c3dc"
            ]
        ]
    },
    {
        "id": "cb696d874143f22a",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "mypost",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 1300,
        "wires": []
    },
    {
        "id": "46b23358529d98c2",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "user selection",
        "func": "\nvar user = flow.get('user')||0;\nmsg.user = user;\n\n\nmsg.payload.registerDate = msg.payload.registerDate.split('T')[0];\n\nvar newGoal = {userData: user,\n            weight: msg.payload.weigth,\n            goalWeight: msg.payload.goalWeight,\n            durationToAchieveGoalWeight: msg.payload.durationToAchieveGoalWeight,\n            registerDate: msg.payload.registerDate,\n            };\nmsg.username = msg.user.username;\n\nmsg.payload = newGoal;\nmsg.newGoal = newGoal;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 3800,
        "wires": [
            [
                "575a2c1f2084a5f3",
                "ec61aa973e63cd13",
                "499b3f97723ff2f0"
            ]
        ]
    },
    {
        "id": "c08c7f4ab1bdbe63",
        "type": "http request",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/weight/weightList?username={{{username}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1570,
        "y": 3800,
        "wires": [
            [
                "8d238b0a3573b7c9"
            ]
        ]
    },
    {
        "id": "10dbd8f9dee022b6",
        "type": "http request",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/weight/addWeight?username={{{username}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1230,
        "y": 3800,
        "wires": [
            [
                "9e462d15d777c810",
                "50e91e4331d7acde",
                "43f295a6547e45ae"
            ]
        ]
    },
    {
        "id": "499b3f97723ff2f0",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\n\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 3800,
        "wires": [
            [
                "a86a951371555748",
                "10dbd8f9dee022b6"
            ]
        ]
    },
    {
        "id": "575a2c1f2084a5f3",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "goal form",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 3740,
        "wires": []
    },
    {
        "id": "c8a694fde6ef461e",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "goal form",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 3760,
        "wires": []
    },
    {
        "id": "237b20b8a7a41df0",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "goal form",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 3860,
        "wires": []
    },
    {
        "id": "8d238b0a3573b7c9",
        "type": "json",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1730,
        "y": 3800,
        "wires": [
            [
                "be092acadbe88ad4",
                "df6fc6370d76522a",
                "26d2224f397db93b"
            ]
        ]
    },
    {
        "id": "be092acadbe88ad4",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "get goals",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1860,
        "y": 3920,
        "wires": []
    },
    {
        "id": "690cdacd50374a97",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "Append to weight",
        "func": "const inp = msg.payload;\n\nvar outObj = [{\n    series: [\"Current Weight\"],\n    data: [[]],\n    labels: [\"\"]\n}]\n\nfor (let item of inp) {\n    outObj[0].data[0].push({\n        x: item.registerDate,\n        y: item.weight\n    })\n}\n\nmsg.payload = outObj;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1470,
        "y": 4200,
        "wires": [
            [
                "19fd85239b77f391",
                "0b52b6fa605314de"
            ]
        ]
    },
    {
        "id": "fce16b5211eeb79a",
        "type": "http request",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/weight/weightList?username={{{username}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1010,
        "y": 4220,
        "wires": [
            [
                "a275a2ea9e4fd3a4",
                "bd21bb3bb39799a3"
            ]
        ]
    },
    {
        "id": "a275a2ea9e4fd3a4",
        "type": "json",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1190,
        "y": 4220,
        "wires": [
            [
                "690cdacd50374a97",
                "81dc6911947a7843",
                "3023a47def272324",
                "50e91e4331d7acde"
            ]
        ]
    },
    {
        "id": "bd21bb3bb39799a3",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "get goals",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 4160,
        "wires": []
    },
    {
        "id": "81dc6911947a7843",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "get goals",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1440,
        "y": 4160,
        "wires": []
    },
    {
        "id": "19fd85239b77f391",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "get goals",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1660,
        "y": 4140,
        "wires": []
    },
    {
        "id": "391256caead0652e",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "function 34",
        "func": "var user = flow.get('user') || 0;\nmsg.payload = user;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 4320,
        "wires": [
            [
                "ce269e7f2264d42e"
            ]
        ]
    },
    {
        "id": "ce269e7f2264d42e",
        "type": "json",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 510,
        "y": 4220,
        "wires": [
            [
                "f8cb5acce2c86d40"
            ]
        ]
    },
    {
        "id": "f8cb5acce2c86d40",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "Set username",
        "func": "msg.username = msg.payload.username;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 4220,
        "wires": [
            [
                "b7f11a024f5e0349"
            ]
        ]
    },
    {
        "id": "3023a47def272324",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "Append to goalWeight",
        "func": "const inp = msg.payload;\n\nvar outObj = [{\n    series: [\"Goal Weight\"],\n    data: [[]],\n    labels: [\"\"]\n}]\n\nlet registerDate = 0;\nlet durationInMs = 0\n\nfor (let item of inp) {\n    registerDate = new Date(item.registerDate);\n    durationInMs = item.durationToAchieveGoalWeight * 24 * 60 * 60 * 1000;\n\n    let newDate = new Date(registerDate.getTime() + durationInMs);\n\n    outObj[0].data[0].push({\n        x: newDate.toISOString(),\n        y: item.goalWeight\n    });\n}\n\nmsg.payload = outObj;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1480,
        "y": 4260,
        "wires": [
            [
                "2d975bd04be5945a"
            ]
        ]
    },
    {
        "id": "8ea35d60715b2c61",
        "type": "comment",
        "z": "375e32b86ebbfc9f",
        "name": "Admin or User",
        "info": "",
        "x": 1570,
        "y": 1080,
        "wires": []
    },
    {
        "id": "b74040a252316a76",
        "type": "ui_upload",
        "z": "375e32b86ebbfc9f",
        "group": "90723e692323a8c9",
        "title": "upload",
        "accept": "",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "chunk": 256,
        "transfer": "binary",
        "x": 3610,
        "y": 2560,
        "wires": [
            [
                "9dc5be4e9cb93c27"
            ]
        ]
    },
    {
        "id": "9dc5be4e9cb93c27",
        "type": "join",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "mode": "custom",
        "build": "buffer",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "",
        "joinerType": "str",
        "useparts": false,
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3750,
        "y": 2560,
        "wires": [
            [
                "4b22391bb9e83830"
            ]
        ]
    },
    {
        "id": "4b22391bb9e83830",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "toBase64",
        "func": "msg.payload = msg.payload.toString(\"base64\")\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3900,
        "y": 2560,
        "wires": [
            [
                "10d6e61b67498a64",
                "66ca83947caeb78e"
            ]
        ]
    },
    {
        "id": "10d6e61b67498a64",
        "type": "file",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "filename": "C:\\Users\\Anje\\Proba.txt",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4130,
        "y": 2560,
        "wires": [
            []
        ]
    },
    {
        "id": "66ca83947caeb78e",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "debug 13",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 4080,
        "y": 2500,
        "wires": []
    },
    {
        "id": "c8949164fcbcf5f6",
        "type": "file in",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "filename": "C:\\Users\\Anje\\Proba.txt",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 3750,
        "y": 2640,
        "wires": [
            [
                "44efdf2d7315785c"
            ]
        ]
    },
    {
        "id": "44efdf2d7315785c",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "toBase64",
        "func": "msg.payload = Buffer.from(msg.payload, \"base64\")\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3960,
        "y": 2640,
        "wires": [
            [
                "abad7f3d41d67a09"
            ]
        ]
    },
    {
        "id": "43f3e931ed0beb6f",
        "type": "file",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "filename": "C:\\Users\\Anje\\Proba.jpeg",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 4170,
        "y": 2700,
        "wires": [
            [
                "388a827d17af9e73"
            ]
        ]
    },
    {
        "id": "7f73b17432850ae6",
        "type": "inject",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3540,
        "y": 2640,
        "wires": [
            [
                "c8949164fcbcf5f6"
            ]
        ]
    },
    {
        "id": "abad7f3d41d67a09",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "C:\\Users\\Anje\\Proba.jpeg",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4400,
        "y": 2640,
        "wires": [
            [
                "995bc818bf89b8d3"
            ]
        ]
    },
    {
        "id": "c1869cbb6fc4b9ac",
        "type": "jimp-image",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "ret": "b64",
        "parameter1": "500",
        "parameter1Type": "num",
        "parameter2": "",
        "parameter2Type": "auto",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "sendPropertyType": "msg",
        "parameterCount": 3,
        "jimpFunction": "resize",
        "selectedJimpFunction": {
            "name": "resize",
            "fn": "resize",
            "description": "resize the image. One of the w or h parameters can be set to automatic (\"Jimp.AUTO\" or -1).",
            "parameters": [
                {
                    "name": "w",
                    "type": "num|auto",
                    "required": true,
                    "hint": "the width to resize the image to (or \"Jimp.AUTO\" or -1)"
                },
                {
                    "name": "h",
                    "type": "num|auto",
                    "required": true,
                    "hint": "the height to resize the image to (or \"Jimp.AUTO\" or -1)"
                },
                {
                    "name": "mode",
                    "type": "resizeMode",
                    "required": false,
                    "hint": "a scaling method (e.g. Jimp.RESIZE_BEZIER)"
                }
            ]
        },
        "x": 4730,
        "y": 2640,
        "wires": [
            [
                "38e4e4142f91cb38"
            ]
        ]
    },
    {
        "id": "c7a1b709be11087d",
        "type": "comment",
        "z": "375e32b86ebbfc9f",
        "name": "Image upload",
        "info": "",
        "x": 3530,
        "y": 2460,
        "wires": []
    },
    {
        "id": "388a827d17af9e73",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "debug 15",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4380,
        "y": 2720,
        "wires": []
    },
    {
        "id": "995bc818bf89b8d3",
        "type": "jimp-image",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "ret": "b64",
        "parameter1": "",
        "parameter1Type": "msg",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "sendPropertyType": "msg",
        "parameterCount": 0,
        "jimpFunction": "none",
        "selectedJimpFunction": {
            "name": "none",
            "fn": "none",
            "description": "Just loads the image.",
            "parameters": []
        },
        "x": 4570,
        "y": 2640,
        "wires": [
            [
                "c1869cbb6fc4b9ac"
            ]
        ]
    },
    {
        "id": "99afb7b100897f32",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "dynamic max and min",
        "func": "var max = msg.carbs;\nvar min = 0;\nvar curPayload = Math.round(msg.payload.totalCarbs);\nmsg = {\n    ui_control:{min:min,max:max},\n    payload: curPayload\n    };\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 4580,
        "wires": [
            [
                "2be86aa7c1d0520f"
            ]
        ]
    },
    {
        "id": "0195ed3fde554ebd",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "dynamic max and min",
        "func": "var max = msg.fats;\nvar min = 0;\nvar curPayload = Math.round(msg.payload.totalFats);\nmsg = {\n    ui_control:{min:min,max:max},\n    payload: curPayload\n    };\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 4620,
        "wires": [
            [
                "9f682895c9545c87"
            ]
        ]
    },
    {
        "id": "76bba5fe5ca1276f",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "dynamic max and min",
        "func": "var max = msg.fibers;\nvar min = 0;\nvar curPayload = Math.round(msg.payload.totalFiber);\nmsg = {\n    ui_control:{min:min,max:max},\n    payload: curPayload\n    };\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 4660,
        "wires": [
            [
                "01eadf649a969de4"
            ]
        ]
    },
    {
        "id": "a9ed40802d02c3dc",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "user login",
        "func": "var loggedUser = {username: msg.username,\n            userpass: msg.userPass,\n            };\n\nmsg.payload = loggedUser;\nmsg.loggedUser = loggedUser;\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 1260,
        "wires": [
            [
                "ac9bb49ce0cf5bfe",
                "cb696d874143f22a"
            ]
        ]
    },
    {
        "id": "c0a353d64e6794c8",
        "type": "json",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 970,
        "y": 1179,
        "wires": [
            [
                "cb38075b0a56550a"
            ]
        ]
    },
    {
        "id": "c6b9aec045f1a95c",
        "type": "switch",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "property": "payload.role",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "USER",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1310,
        "y": 1200,
        "wires": [
            [
                "75a19ec400d91526",
                "8d702ea406db0aa1",
                "8056b031c3b677f3"
            ],
            [
                "3df19e5a1b9195ae"
            ]
        ]
    },
    {
        "id": "75a19ec400d91526",
        "type": "template",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\"tabs\": {\"hide\": \"Get users and delete user\", \"disable\": \"Get users and delete user\"}}",
        "output": "json",
        "x": 1460,
        "y": 1000,
        "wires": [
            [
                "8a164cb99f23d5eb"
            ]
        ]
    },
    {
        "id": "8056b031c3b677f3",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "Token timeout",
        "func": "// Target date and time (ISO 8601 format)\nconst targetTime = new Date(msg.payload.timeout);\n\n// Current time\nconst now = new Date();\n\n// Calculate the delay in milliseconds\nconst delay = targetTime.getTime() - now.getTime(); // Use .getTime() to get the numeric timestamp\n\nif (delay > 0) {\n    msg.delay = delay; // Set the delay for the next node\n    return msg;\n} else {\n    // If the target time has already passed\n    node.warn(\"The target date and time has already passed.\");\n    return null; // Stop the flow\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1440,
        "y": 940,
        "wires": [
            [
                "274c2620b7d2387c",
                "820dc5490f3385f7"
            ]
        ]
    },
    {
        "id": "274c2620b7d2387c",
        "type": "delay",
        "z": "375e32b86ebbfc9f",
        "name": "Wait until token timeout",
        "pauseType": "delayv",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1670,
        "y": 940,
        "wires": [
            [
                "ea493fbaa11de2de"
            ]
        ]
    },
    {
        "id": "820dc5490f3385f7",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "TIMEOUT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1440,
        "y": 880,
        "wires": []
    },
    {
        "id": "ea493fbaa11de2de",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "Back to login",
        "func": "msg.payload = \"Login\";\nflow.set('token', null)\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1890,
        "y": 940,
        "wires": [
            [
                "c4d69e734be5188b"
            ]
        ]
    },
    {
        "id": "9cf6d54ac88d0d95",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "Go to initialize user",
        "func": "msg.payload = \"Initialize user\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1180,
        "wires": [
            [
                "feb684a268fcfa5f"
            ]
        ]
    },
    {
        "id": "1408a6fe11c9f728",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "Debug 16",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 300,
        "y": 1300,
        "wires": []
    },
    {
        "id": "9e462d15d777c810",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\n\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 3800,
        "wires": [
            [
                "c08c7f4ab1bdbe63"
            ]
        ]
    },
    {
        "id": "8d702ea406db0aa1",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nmsg.headers['Authorization'] = `Bearer ${msg.payload.token}`;\nflow.set('token', msg.payload.token);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 1140,
        "wires": [
            [
                "4bb8df75d58ba829"
            ]
        ]
    },
    {
        "id": "3df19e5a1b9195ae",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nmsg.headers['Authorization'] = `Bearer ${msg.payload.token}`;\nflow.set('token', msg.payload.token);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 1240,
        "wires": [
            [
                "464fae3d37eba481"
            ]
        ]
    },
    {
        "id": "4bb8df75d58ba829",
        "type": "http request",
        "z": "375e32b86ebbfc9f",
        "name": "Get user",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "body",
        "url": "http://localhost:8080/user/usersByUsername?username={{{username}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1660,
        "y": 1140,
        "wires": [
            [
                "2087dcc48029c108",
                "ae0eb3d4067c42c0"
            ]
        ]
    },
    {
        "id": "2087dcc48029c108",
        "type": "json",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": true,
        "x": 1810,
        "y": 1140,
        "wires": [
            [
                "0960c0aa42f44239"
            ]
        ]
    },
    {
        "id": "0960c0aa42f44239",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "user.username",
                "pt": "flow",
                "to": "username",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "user",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "user",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1980,
        "y": 1140,
        "wires": [
            [
                "da1dbdc64c43b7c1",
                "4115bbd4c2a76901",
                "ee1e1d11bc830d51"
            ]
        ]
    },
    {
        "id": "b79e168333663224",
        "type": "json",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": true,
        "x": 1850,
        "y": 1240,
        "wires": [
            [
                "769d63da0aae2eec"
            ]
        ]
    },
    {
        "id": "464fae3d37eba481",
        "type": "http request",
        "z": "375e32b86ebbfc9f",
        "name": "Get admin",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "body",
        "url": "http://localhost:8080/user/adminByName?username={{{username}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1690,
        "y": 1240,
        "wires": [
            [
                "b79e168333663224"
            ]
        ]
    },
    {
        "id": "769d63da0aae2eec",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "admin.username",
                "pt": "flow",
                "to": "username",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "admin",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "admin",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2020,
        "y": 1240,
        "wires": [
            [
                "7a20fb2848014f8b",
                "34afc8ecb994297b"
            ]
        ]
    },
    {
        "id": "7a20fb2848014f8b",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "Go to admin tab",
        "func": "msg.payload = {\n    tab: \"Campaign\" // Cambia a la pestaña donde está el segundo formulario\n};\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2220,
        "y": 1240,
        "wires": [
            [
                "9b1a370153747829",
                "e04916e8980d8ed2"
            ]
        ]
    },
    {
        "id": "4115bbd4c2a76901",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "To second form",
        "func": "msg.payload = {\n    tab: \"Weigth\" // Cambia a la pestaña donde está el segundo formulario\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2180,
        "y": 1139,
        "wires": [
            [
                "9b1a370153747829",
                "ae5e84cb908758bb",
                "e04916e8980d8ed2"
            ]
        ]
    },
    {
        "id": "e04916e8980d8ed2",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "function eta gero",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2830,
        "y": 1199,
        "wires": []
    },
    {
        "id": "ae5e84cb908758bb",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "Empty msg.payload",
        "func": "msg.payload = [];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2930,
        "y": 1359,
        "wires": [
            [
                "95d80e5db9f7225b"
            ]
        ]
    },
    {
        "id": "b7f11a024f5e0349",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\n\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 4220,
        "wires": [
            [
                "fce16b5211eeb79a"
            ]
        ]
    },
    {
        "id": "b0bcd860e4e6399f",
        "type": "http request",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/email/typedCode?writtenCode={{{writtenCode}}}&verifyMail={{{verifyMail}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1470,
        "y": 720,
        "wires": [
            [
                "d7ad34deb9f59360",
                "0574571ff4ffd361"
            ]
        ]
    },
    {
        "id": "4ce0d2af2acf1fce",
        "type": "json",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": true,
        "x": 430,
        "y": 720,
        "wires": [
            [
                "5753688d29f192fe"
            ]
        ]
    },
    {
        "id": "5753688d29f192fe",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "function 50",
        "func": "var code = msg.payload.verificationCode;\ncode = code.toString();\nmsg.verifyMail = code;\nvar user = flow.get('user')||0;\nmsg.payload = user;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 720,
        "wires": [
            [
                "94692ce35afe26b6"
            ]
        ]
    },
    {
        "id": "94692ce35afe26b6",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 720,
        "wires": [
            [
                "62bd138df5d38cb6"
            ]
        ]
    },
    {
        "id": "9c3b372df96e3503",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Cannot create user",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 460,
        "wires": [
            [
                "6418a3e515b10f95"
            ]
        ]
    },
    {
        "id": "40ee90b9d2932dea",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Error",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "It has been an error",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1200,
        "y": 540,
        "wires": [
            [
                "902266b528883233"
            ]
        ]
    },
    {
        "id": "d86bdc55ab569f78",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "function 52",
        "func": "msg.payload = 'The username does exist: ' + msg.user;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 420,
        "wires": [
            [
                "b6c6b3da8dd59caf",
                "9c3b372df96e3503"
            ]
        ]
    },
    {
        "id": "b6c6b3da8dd59caf",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 380,
        "wires": []
    },
    {
        "id": "fc2f1578770989d1",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "function 53",
        "func": "msg.emailVerification = msg.payload;\nmsg.payload =\n{\n    tab: \"Email verification\"\n};\n\nflow.set('emailVerification', msg.emailVerification);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 320,
        "wires": [
            [
                "afbda9f94638f112"
            ]
        ]
    },
    {
        "id": "1b35d3779a2ade65",
        "type": "switch",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 890,
        "y": 400,
        "wires": [
            [
                "fc2f1578770989d1"
            ],
            [
                "d86bdc55ab569f78"
            ],
            [
                "40ee90b9d2932dea"
            ]
        ]
    },
    {
        "id": "6f28f950092c9672",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "writtenCode",
                "pt": "msg",
                "to": "payload.writtenCode",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "emailVerification",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 720,
        "wires": [
            [
                "4ce0d2af2acf1fce"
            ]
        ]
    },
    {
        "id": "86ad4c729301d709",
        "type": "comment",
        "z": "375e32b86ebbfc9f",
        "name": "Initalize user (POST)",
        "info": "",
        "x": 190,
        "y": 40,
        "wires": []
    },
    {
        "id": "df6fc6370d76522a",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "Append to weight",
        "func": "const inp = msg.payload;\n\nvar outObj = [{\n    series: [\"Current Weight\"],\n    data: [[]],\n    labels: [\"\"]\n}]\n\nfor (let item of inp) {\n    outObj[0].data[0].push({\n        x: item.registerDate,\n        y: item.weight\n    })\n}\n\nmsg.payload = outObj;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1950,
        "y": 3760,
        "wires": [
            [
                "0b52b6fa605314de"
            ]
        ]
    },
    {
        "id": "26d2224f397db93b",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "Append to goalWeight",
        "func": "const inp = msg.payload;\n\nvar outObj = [{\n    series: [\"Goal Weight\"],\n    data: [[]],\n    labels: [\"\"]\n}]\n\nlet registerDate = 0;\nlet durationInMs = 0\n\nfor (let item of inp) {\n    registerDate = new Date(item.registerDate); // Convert to Date object\n    durationInMs = item.durationToAchieveGoalWeight * 24 * 60 * 60 * 1000;\n\n    let newDate = new Date(registerDate.getTime() + durationInMs);\n\n    outObj[0].data[0].push({\n        x: newDate,\n        y: item.goalWeight\n    });\n}\n\nmsg.payload = outObj;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1960,
        "y": 3820,
        "wires": [
            [
                "2d975bd04be5945a"
            ]
        ]
    },
    {
        "id": "62bd138df5d38cb6",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "Schema creator",
        "func": "\nvar user = flow.get('user')||0;\nif(user.premium==\"true\")\n{\n    user.premium = true;\n}\nelse{\n    user.premium = false;\n}\n\nmsg.payload = user;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 720,
        "wires": [
            [
                "d88a1e183c4ca6f8",
                "b0bcd860e4e6399f",
                "9cf9337a5fb4164a"
            ]
        ]
    },
    {
        "id": "d88a1e183c4ca6f8",
        "type": "json-schema-validator",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "User Validator",
        "func": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n        \"title\": \"UserData\",\n            \"description\": \"User's information\",\n                \"type\": \"object\",\n                    \"properties\": {\n        \"uname\": {\n            \"description\": \"user's name\",\n                \"type\": \"string\"\n        },\n        \"secondName\": {\n            \"description\": \"user's second name\",\n                \"type\": \"string\"\n        },\n        \"gender\": {\n            \"description\": \"user's gender\",\n                \"type\": \"string\",\n                    \"enum\": [\"M\", \"F\"]\n        },\n        \"age\": {\n            \"description\": \"user's age\",\n                \"type\": \"integer\"\n        },\n        \"height\": {\n            \"description\": \"user's height\",\n                \"type\": \"integer\"\n        },\n        \"username\": {\n            \"description\": \"user's username\",\n                \"type\": \"string\"\n        },\n        \"email\": {\n            \"description\": \"user's email\",\n                \"type\": \"string\"\n        },\n        \"userPass\": {\n            \"description\": \"user's password\",\n                \"type\": \"string\"\n        },\n        \"activityLevel\": {\n            \"description\": \"how much activity the user does\",\n                \"type\": \"string\",\n                    \"enum\": [\"Sedentary\", \"Light\", \"Moderate\", \"Active\", \"Very Active\"]\n        },\n        \"premium\": {\n            \"description\": \"if the user is a premium user or not\",\n                \"type\": \"boolean\"\n        },\n        \"objective\": {\n            \"description\": \"the user's objective\",\n                \"type\": \"string\",\n                    \"enum\": [\"Lose weight\", \"Gain weight\", \"Keep fit\"]\n        },\n        \"neck\": {\n            \"description\": \"user's neck size in cm\",\n                \"type\": \"number\"\n        },\n        \"waist\": {\n            \"description\": \"user's waist size in cm\",\n                \"type\": \"number\"\n        },\n        \"hips\": {\n            \"description\": \"user's hips size in cm\",\n                \"type\": \"number\"\n        }\n    },\n    \"required\": [\n        \"uname\",\n        \"secondName\",\n        \"gender\",\n        \"age\",\n        \"height\",\n        \"username\",\n        \"email\",\n        \"userPass\",\n        \"activityLevel\",\n        \"premium\",\n        \"objective\",\n        \"neck\",\n        \"waist\",\n        \"hips\"\n    ]\n}",
        "x": 1220,
        "y": 660,
        "wires": [
            [
                "b0bcd860e4e6399f"
            ]
        ]
    },
    {
        "id": "401de7b97a70da8e",
        "type": "catch",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "scope": [
            "d88a1e183c4ca6f8",
            "78bb2dcde6946962",
            "ec61aa973e63cd13",
            "93f25ba04554458c",
            "e0a9468dbcbe31c4"
        ],
        "uncaught": false,
        "x": 2140,
        "y": 440,
        "wires": [
            [
                "cc996a9ab577d99d",
                "d1e150cc1cbdf1f0"
            ]
        ]
    },
    {
        "id": "cc996a9ab577d99d",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "mypost",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2520,
        "y": 540,
        "wires": []
    },
    {
        "id": "d1e150cc1cbdf1f0",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Error",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Not allowed information",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2380,
        "y": 440,
        "wires": [
            [
                "61a62505e040530f"
            ]
        ]
    },
    {
        "id": "93f25ba04554458c",
        "type": "json-schema-validator",
        "z": "375e32b86ebbfc9f",
        "name": "Food validator",
        "func": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"title\": \"Food\",\n    \"description\": \"Food information\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"foodName\": {\n            \"description\": \"the name of the food\",\n            \"type\": \"string\"\n        },\n        \"proteins\": {\n            \"description\": \"proteins of the food\",\n            \"type\": \"number\"\n        },\n        \"carbs\": {\n            \"description\": \"carbs of the food\",\n            \"type\": \"number\"\n        },\n        \"fats\" : {\n            \"description\": \"fats of the food\",\n            \"type\": \"number\"\n        },\n        \"fiber\": {\n            \"description\": \"fiber of the food\",\n            \"type\": \"number\"\n        }\n        \n    },\n    \"required\": [\n    \"foodName\",\n    \"proteins\",\n    \"carbs\",\n    \"fats\", \n    \"fiber\"\n    ]\n} \n\n",
        "x": 500,
        "y": 5280,
        "wires": [
            [
                "16163e64b6472a4e"
            ]
        ]
    },
    {
        "id": "8e1cd7d2f9cea691",
        "type": "catch",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "scope": [
            "93f25ba04554458c"
        ],
        "uncaught": false,
        "x": 440,
        "y": 5380,
        "wires": [
            [
                "c1dfbc531ec0225e",
                "f41a8e0905a77137"
            ]
        ]
    },
    {
        "id": "c1dfbc531ec0225e",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "mypost",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 5460,
        "wires": []
    },
    {
        "id": "f41a8e0905a77137",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Error",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Not allowed information",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 5380,
        "wires": [
            [
                "cdde329a315d9087"
            ]
        ]
    },
    {
        "id": "ec61aa973e63cd13",
        "type": "json-schema-validator",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "",
        "func": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n        \"title\": \"Weight Goals\",\n            \"description\": \"Weight goals information\",\n                \"type\": \"object\",\n                    \"properties\": {\n        \"userID\": {\n            \"description\": \"the weight of the user\",\n                \"type\": \"integer\"\n        },\n        \"weight\": {\n            \"description\": \"the weight of the user\",\n                \"type\": \"number\"\n        },\n        \"goalWeight\": {\n            \"description\": \"the goal weight of the user\",\n                \"type\": \"number\"\n        },\n        \"durationToAchieveGoalWeight\": {\n            \"description\": \"the duration to achieve goal weight\",\n                \"type\": \"integer\"\n        },\n        \"registerDate\" : {\n            \"description\": \"when the user registers the weight\",\n                \"type\": \"string\"\n        }\n\n    },\n    \"required\": [\n        \"userID\",\n        \"weight\",\n        \"goalWeight\",\n        \"durationToAchieveGoalWeight\",\n        \"registerDate\"\n    ]\n}",
        "x": 910,
        "y": 3860,
        "wires": [
            [
                "499b3f97723ff2f0"
            ]
        ]
    },
    {
        "id": "3be888bb586de4b5",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "info",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 6810,
        "y": 20,
        "wires": [
            [
                "de65a14eb0239352",
                "359740e76de60a43"
            ]
        ]
    },
    {
        "id": "b1668201fc208162",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "type",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1628.0000305175781,
        "y": 2560.0000257492065,
        "wires": [
            []
        ]
    },
    {
        "id": "f53f09c70bd25d0f",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "class",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1393.0000305175781,
        "y": 2050.0000400543213,
        "wires": [
            []
        ]
    },
    {
        "id": "c4e5f226bfd03310",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "group",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1438.0000305175781,
        "y": 2980.0000257492065,
        "wires": [
            []
        ]
    },
    {
        "id": "87e0eda7096c712e",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "function 54",
        "func": "//var restrictedName = flow.get('restrictedName') || null;\nvar classObj = flow.get('class') || null;\nvar typeObj = flow.get('type') || null;\nvar groupObj = flow.get('group') || null;\nvar ingredientObj = flow.get('ingredient') || null;\n\n/*msg.groupID = groupID;\nmsg.typeID = typeID;\nmsg.ingredientID = ingredientID;\nif(typeID == \"null\" || typeID == null)\n{\n    typeID=0;\n}\nif(groupID == \"null\" || groupID == null){\n    groupID=0;\n}\nif(ingredientID == \"null\" || ingredientID == null){\n    ingredientID = 0;\n}*/\nvar userObj = flow.get('user')||0;\n\n\n/*var restriction = {\n    //restrictedName : restrictedName,\n    userID: user.userID,\n    groupID: groupID,\n    typeID: typeID,\n    classID: classID,\n    ingredientID: ingredientID\n}\nmsg.payload = restriction;*/\nvar restrictionComplete = {\n  //restrictedName: restrictedName,\n    userData: userObj,\n    foodGroup: groupObj,\n    ingredient: ingredientObj,\n    foodType: typeObj,\n    foodClass: classObj\n}\nmsg.restriction = restrictionComplete;\nmsg.payload = restrictionComplete;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 588.0000305175781,
        "y": 3360.0000257492065,
        "wires": [
            [
                "78bb2dcde6946962",
                "cf985a923711bf46",
                "a92ce7610c383f47"
            ]
        ]
    },
    {
        "id": "f628cba4337119fe",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ingredient",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1478.0000305175781,
        "y": 3160.0000257492065,
        "wires": [
            []
        ]
    },
    {
        "id": "67b40c1e69f41312",
        "type": "catch",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "scope": [
            "d88a1e183c4ca6f8",
            "ec61aa973e63cd13"
        ],
        "uncaught": false,
        "x": 5490,
        "y": 720,
        "wires": [
            [
                "bc94b45761c81c75",
                "9d5219a45e26cb51"
            ]
        ]
    },
    {
        "id": "bc94b45761c81c75",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "mypost",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 5700,
        "y": 760,
        "wires": []
    },
    {
        "id": "9d5219a45e26cb51",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Error",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Not allowed information",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 5750,
        "y": 720,
        "wires": [
            [
                "8669f7fc4761239b"
            ]
        ]
    },
    {
        "id": "78bb2dcde6946962",
        "type": "json-schema-validator",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "Restriction validator",
        "func": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",        \"title\": \"Restrictions\",\n        \"type\": \"object\",\n        \"properties\": {\n            \"userID\": {\n                \"type\": \"integer\",\n                \"description\": \"Foreign key referencing userData(userID)\"\n            },\n            \"groupID\": {\n                \"type\": [\"integer\", \"null\"],\n                    \"description\": \"Foreign key referencing foodGroup(groupID); can be null\"\n            },\n            \"typeID\": {\n                \"type\": [\"integer\", \"null\"],\n                \"description\": \"Foreign key referencing foodType(typeID); can be null\"\n            },\n            \"classID\": {\n                \"type\": \"integer\",\n                \"description\": \"Foreign key referencing foodClass(classID)\"\n            },\n            \"ingredientID\": {\n                \"type\": [\"integer\", \"null\"],\n                \"description\": \"Foreign key referencing ingredients(ingredientID); can be null\"\n            }\n        },\n    \"required\": [\"userID\", \"classID\"],\n    \"additionalProperties\": false\n}",
        "x": 708.0000305175781,
        "y": 3300.0000257492065,
        "wires": [
            [
                "a92ce7610c383f47"
            ]
        ]
    },
    {
        "id": "4762811d400e1791",
        "type": "http request",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/restrictions/addRestriction?userID={{userID}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1287.9999237060547,
        "y": 3364.0000162124634,
        "wires": [
            [
                "0d5b0e2cb61a198e",
                "47c5b923227d8946"
            ]
        ]
    },
    {
        "id": "ddf66ec23f642e41",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 445.66739654541016,
        "y": 2756.6667337417603,
        "wires": []
    },
    {
        "id": "c248ce491bec449c",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "username",
                "pt": "msg",
                "to": "user.username",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 1800,
        "wires": [
            [
                "a7af98d0a49070ca",
                "bb377f643e742380"
            ]
        ]
    },
    {
        "id": "ae0eb3d4067c42c0",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1823,
        "y": 1073,
        "wires": []
    },
    {
        "id": "8631551589cb5cee",
        "type": "http request",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/restrictions/restrictionsByClass?userID={{userID}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1410,
        "y": 1800,
        "wires": [
            [
                "fdca6ebcb6462f0d",
                "d48573f59ab24d05"
            ]
        ]
    },
    {
        "id": "ef8577d9fe969409",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "userID",
                "pt": "msg",
                "to": "user.userID",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 1800,
        "wires": [
            [
                "5226e9025f7a6db7",
                "2bc8bd9fbe3dca01"
            ]
        ]
    },
    {
        "id": "5226e9025f7a6db7",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "function 58",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 1800,
        "wires": [
            [
                "8631551589cb5cee",
                "d42aebbd91284dcf"
            ]
        ]
    },
    {
        "id": "a5a4bc676dd1c453",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "function 59",
        "func": "let sensors = [];\n//let classIDs = [];\n\nif(msg.payload.length == 0)\n{\n    msg.options = null;\n}else{\n    for (var i = 0; i < msg.payload.length; i++){\n        sensors[i] = msg.payload[i].className;\n    // classIDs[i] = msg.payload[i].classID;\n    }\n    \n    msg.options = sensors;\n}\n\n\n//flow.set('classIDs', classIDs);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1750,
        "y": 1800,
        "wires": [
            [
                "d9f37123864c1f07"
            ]
        ]
    },
    {
        "id": "fdca6ebcb6462f0d",
        "type": "json",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1570,
        "y": 1800,
        "wires": [
            [
                "a5a4bc676dd1c453"
            ]
        ]
    },
    {
        "id": "d42aebbd91284dcf",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "debug 32",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1440,
        "y": 1920,
        "wires": []
    },
    {
        "id": "2bc8bd9fbe3dca01",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "debug 33",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 1920,
        "wires": []
    },
    {
        "id": "d48573f59ab24d05",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "debug 34",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1660,
        "y": 1940,
        "wires": []
    },
    {
        "id": "57e3966499b427ab",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Restriction information",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1453.0000305175781,
        "y": 2190.0000400543213,
        "wires": [
            [
                "a5c27af174c5ad38"
            ]
        ]
    },
    {
        "id": "b752264a3a8cab77",
        "type": "http request",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/restrictions/restrictionsByType?userID={{userID}}&className={{className}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 903.0000305175781,
        "y": 2230.0000400543213,
        "wires": [
            [
                "85f6bc18b1b8bcfe"
            ]
        ]
    },
    {
        "id": "28da5d2ec8018283",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "userID",
                "pt": "msg",
                "to": "user.userID",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "className",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 473.0000305175781,
        "y": 2190.0000400543213,
        "wires": [
            [
                "1a69f285916a2541"
            ]
        ]
    },
    {
        "id": "1a69f285916a2541",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "function 60",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\n\n/*let classIDs = [];\nlet classIDList = flow.get('classIDs')||0;\n/*for (var i = 0; i < classIDList.length; i++)\n{\n    classIDs[]\n}*/\n\n//classIDs = classIDList.join(\",\");\n//msg.classIDs = classIDs;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 723.0000305175781,
        "y": 2230.0000400543213,
        "wires": [
            [
                "b752264a3a8cab77"
            ]
        ]
    },
    {
        "id": "a32b24cd9474b682",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "function 61",
        "func": "let sensors = [];\nsensors[0] = \"All types\";\n//let typeIDs = [];\nfor (var i = 0; i < msg.payload.length; i++){\n    sensors[i+1] = msg.payload[i].typeName;\n    //typeIDs[i] = msg.payload[0].typeId;\n}\n//typeIDs[0] = msg.payload[0].typeId;\n//msg.typeIDs = typeIDs;\nmsg.options = sensors;\n\n//flow.set('typeIDs', typeIDs);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1308.0000305175781,
        "y": 2200.0000257492065,
        "wires": [
            [
                "57e3966499b427ab",
                "a7a32c71e7cc5467"
            ]
        ]
    },
    {
        "id": "85f6bc18b1b8bcfe",
        "type": "json",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1063.0000305175781,
        "y": 2230.0000400543213,
        "wires": [
            [
                "a32b24cd9474b682"
            ]
        ]
    },
    {
        "id": "6090e7366650e004",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Restriction information",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1762.0000305175781,
        "y": 2430.0000400543213,
        "wires": [
            [
                "ab2bce407617cf33"
            ]
        ]
    },
    {
        "id": "c6f90f9ea1a58227",
        "type": "http request",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/restrictions/restrictionsByGroup?userID={{userID}}&typeName={{typeName}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1128.0000305175781,
        "y": 2440.0000257492065,
        "wires": [
            [
                "ec8ddf13f4ce6547",
                "f257c1255efe2aa1"
            ]
        ]
    },
    {
        "id": "cfa7f67a114e050c",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "userID",
                "pt": "msg",
                "to": "user.userID",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "typeName",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 698.0000305175781,
        "y": 2420.0000257492065,
        "wires": [
            [
                "b8027cf84addbedd",
                "8993a126ece9136d"
            ]
        ]
    },
    {
        "id": "b8027cf84addbedd",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "function 62",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\n\n/*let typeIDs = [];\nlet typeIDList = flow.get('typeIDs')||0;\n\ntypeIDs = typeIDList.join(\",\");\nmsg.typesIDs = typeIDs;*/\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 928.0000305175781,
        "y": 2440.0000257492065,
        "wires": [
            [
                "c6f90f9ea1a58227",
                "ca387e7fc482bc92"
            ]
        ]
    },
    {
        "id": "17a65c6ab7257d22",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "function 63",
        "func": "let sensors = [];\nsensors[0] = \"All groups\";\n//let groupIDs = [];\nfor (var i = 0; i < msg.payload.length; i++){\n    sensors[i+1] = msg.payload[i].groupName;\n    ///groupIDs[i] = msg.payload[i].groupID;\n}\n//msg.groupIDs=groupIDs\nmsg.options = sensors;\n\n//flow.set('groupIDs', groupIDs);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1612.0000305175781,
        "y": 2430.0000400543213,
        "wires": [
            [
                "6090e7366650e004",
                "eead35a4004ed06a",
                "bd3facbba834a88e"
            ]
        ]
    },
    {
        "id": "ca387e7fc482bc92",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "debug 38",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1118.0000305175781,
        "y": 2380.0000257492065,
        "wires": []
    },
    {
        "id": "8993a126ece9136d",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "debug 39",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 918.0000305175781,
        "y": 2340.0000257492065,
        "wires": []
    },
    {
        "id": "ec8ddf13f4ce6547",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "debug 40",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1278.0000305175781,
        "y": 2400.0000257492065,
        "wires": []
    },
    {
        "id": "f257c1255efe2aa1",
        "type": "json",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1452.0000305175781,
        "y": 2430.0000400543213,
        "wires": [
            [
                "17a65c6ab7257d22",
                "4c4eb8746fe7c69b"
            ]
        ]
    },
    {
        "id": "4c4eb8746fe7c69b",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "debug 43",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1338.0000305175781,
        "y": 2480.0000257492065,
        "wires": []
    },
    {
        "id": "eead35a4004ed06a",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "debug 44",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1738.0000305175781,
        "y": 2500.0000257492065,
        "wires": []
    },
    {
        "id": "e7589af0954e9479",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Restrictions",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1678.0000305175781,
        "y": 2680.0000257492065,
        "wires": [
            [
                "b7db9e8c988cce09"
            ]
        ]
    },
    {
        "id": "5a6dc372fdf67205",
        "type": "http request",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/restrictions/restrictionsByIngredients?userID={{userID}}&groupName={{groupName}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1168.0000305175781,
        "y": 2800.0000257492065,
        "wires": [
            [
                "c5f8ae32e5d5b563",
                "823a65dadec1e502"
            ]
        ]
    },
    {
        "id": "e97b456020418308",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "userID",
                "pt": "msg",
                "to": "user.userID",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "groupName",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 798.0000305175781,
        "y": 2800.0000257492065,
        "wires": [
            [
                "2e10ea737979756a",
                "1d0802f5ec53322e"
            ]
        ]
    },
    {
        "id": "2e10ea737979756a",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "function 64",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\n\n/*let typeIDs = [];\nlet typeIDList = flow.get('typeIDs')||0;\n\ntypeIDs = typeIDList.join(\",\");\nmsg.typesIDs = typeIDs;*/\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 988.0000305175781,
        "y": 2800.0000257492065,
        "wires": [
            [
                "5a6dc372fdf67205",
                "70b0d11ac1a0a264"
            ]
        ]
    },
    {
        "id": "24aa1e9d32047d4f",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "function 65",
        "func": "let sensors = [];\nsensors[0] = \"All ingredients\";\n//let ingredientsIDs = [];\nfor (var i = 0; i < msg.payload.length; i++){\n    sensors[i + 1] = msg.payload[i].ingName;\n    //ingredientsIDs[i] = msg.payload[i].ingredientID;\n}\n//msg.ingredientIDs=ingredientsIDs\nmsg.options = sensors;\n\n//flow.set('ingredientsIDs', ingredientsIDs);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1488.0000305175781,
        "y": 2800.0000257492065,
        "wires": [
            [
                "e7589af0954e9479",
                "9e5050cdad2b10c9"
            ]
        ]
    },
    {
        "id": "70b0d11ac1a0a264",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "debug 45",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1218.0000305175781,
        "y": 2860.0000257492065,
        "wires": []
    },
    {
        "id": "1d0802f5ec53322e",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "debug 46",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 928.0000305175781,
        "y": 2840.0000257492065,
        "wires": []
    },
    {
        "id": "c5f8ae32e5d5b563",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "debug 47",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1398.0000305175781,
        "y": 2860.0000257492065,
        "wires": []
    },
    {
        "id": "823a65dadec1e502",
        "type": "json",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1328.0000305175781,
        "y": 2800.0000257492065,
        "wires": [
            [
                "24aa1e9d32047d4f",
                "00cf5a9e0068f694"
            ]
        ]
    },
    {
        "id": "00cf5a9e0068f694",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "debug 48",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1398.0000305175781,
        "y": 2920.0000257492065,
        "wires": []
    },
    {
        "id": "128e1cf5e7553dbf",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "restriction",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "userID",
                "pt": "msg",
                "to": "user.userID",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1057.9999237060547,
        "y": 3364.0000162124634,
        "wires": [
            [
                "4762811d400e1791",
                "f02ae97a9ba06990"
            ]
        ]
    },
    {
        "id": "0d5b0e2cb61a198e",
        "type": "switch",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "201",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1528.0000305175781,
        "y": 3360.0000257492065,
        "wires": [
            [
                "4ae5b955ecfec1c8",
                "07cbad0abf29453e"
            ],
            [
                "1d3c8117f256e361"
            ],
            [
                "c4ef7df22c48f93e"
            ]
        ]
    },
    {
        "id": "92555778c14e7f92",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "Username exists error",
        "func": "msg.payload = 'The is some error in the restriction information';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2000,
        "y": 3400,
        "wires": [
            [
                "06f94a35f4058662"
            ]
        ]
    },
    {
        "id": "4ae5b955ecfec1c8",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "class",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "type",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "group",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "ingredient",
                "pt": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1797.9999237060547,
        "y": 3304.0000162124634,
        "wires": [
            [
                "44065e41d02f3a1e",
                "9c0b14a9ac09b649"
            ]
        ]
    },
    {
        "id": "06f94a35f4058662",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Cannot create the restriction",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2260,
        "y": 3400,
        "wires": [
            []
        ]
    },
    {
        "id": "c4ef7df22c48f93e",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Error",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "It has been an error",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1812.0000305175781,
        "y": 3442.0000257492065,
        "wires": [
            [
                "957bb2e89b9157b5"
            ]
        ]
    },
    {
        "id": "47c5b923227d8946",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "debug 49",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1412.0000305175781,
        "y": 3462.0000257492065,
        "wires": []
    },
    {
        "id": "cf985a923711bf46",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "debug 50",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 832.0000305175781,
        "y": 3442.0000257492065,
        "wires": []
    },
    {
        "id": "f02ae97a9ba06990",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "debug 51",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1172.0000305175781,
        "y": 3502.0000257492065,
        "wires": []
    },
    {
        "id": "07cbad0abf29453e",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Restrictions created",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "user",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1737.9999237060547,
        "y": 3164.0000162124634,
        "wires": [
            [
                "83854b2c14e5cd8c"
            ]
        ]
    },
    {
        "id": "c8d5b80b86733bcf",
        "type": "http request",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/foodclass/selectByClassName?className={{className}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 903.0000305175781,
        "y": 2050.0000400543213,
        "wires": [
            [
                "78631d33f8c6e109"
            ]
        ]
    },
    {
        "id": "250918630c2a6e27",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "function 66",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 723.0000305175781,
        "y": 2050.0000400543213,
        "wires": [
            [
                "c8d5b80b86733bcf"
            ]
        ]
    },
    {
        "id": "f7697c12f5d8fe55",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "className",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 503.0000305175781,
        "y": 2050.0000400543213,
        "wires": [
            [
                "250918630c2a6e27"
            ]
        ]
    },
    {
        "id": "2bf8c6949e65cbd7",
        "type": "http request",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/foodtype/selectByTypeName?typeName={{typeName}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1188.0000305175781,
        "y": 2520.0000257492065,
        "wires": [
            [
                "697610cb1fabd530"
            ]
        ]
    },
    {
        "id": "8fa9ba0c56162a10",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "function 67",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 988.0000305175781,
        "y": 2540.0000257492065,
        "wires": [
            [
                "2bf8c6949e65cbd7"
            ]
        ]
    },
    {
        "id": "f107b0209b05f355",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "typeName",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 648.0000305175781,
        "y": 2480.0000257492065,
        "wires": [
            [
                "8fa9ba0c56162a10"
            ]
        ]
    },
    {
        "id": "79416b2e3c2b246e",
        "type": "http request",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/foodgroup/selectByGroupName?groupName={{groupName}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1108.0000305175781,
        "y": 2900.0000257492065,
        "wires": [
            [
                "44d0832e24f2aa80"
            ]
        ]
    },
    {
        "id": "0c135151e070d115",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "function 68",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 928.0000305175781,
        "y": 2900.0000257492065,
        "wires": [
            [
                "79416b2e3c2b246e"
            ]
        ]
    },
    {
        "id": "6a6e68d0911485c1",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "groupName",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 698.0000305175781,
        "y": 2880.0000257492065,
        "wires": [
            [
                "0c135151e070d115"
            ]
        ]
    },
    {
        "id": "f0917907b18f15b9",
        "type": "http request",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/ingredient/searchIngredientByName?ingName={{ingName}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1098.0000305175781,
        "y": 3160.0000257492065,
        "wires": [
            [
                "093a50296c094efe"
            ]
        ]
    },
    {
        "id": "68f2b0a9853caa4d",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "function 69",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 898.0000305175781,
        "y": 3160.0000257492065,
        "wires": [
            [
                "f0917907b18f15b9"
            ]
        ]
    },
    {
        "id": "8f3562207dc6b153",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ingName",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 698.0000305175781,
        "y": 3160.0000257492065,
        "wires": [
            [
                "68f2b0a9853caa4d"
            ]
        ]
    },
    {
        "id": "a2a7ed0730cade11",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "debug 54",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 328.0000305175781,
        "y": 3140.0000257492065,
        "wires": []
    },
    {
        "id": "1627e766348ed1fe",
        "type": "switch",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "All ingredients",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 498.0000305175781,
        "y": 3080.0000257492065,
        "wires": [
            [
                "dbd105cd1eca790d"
            ],
            [
                "8f3562207dc6b153"
            ]
        ]
    },
    {
        "id": "dbd105cd1eca790d",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ingredient.ingredientID",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 778.0000305175781,
        "y": 3080.0000257492065,
        "wires": [
            [
                "16883e38c598a006"
            ]
        ]
    },
    {
        "id": "0574571ff4ffd361",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "debug 55",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1670,
        "y": 660,
        "wires": []
    },
    {
        "id": "a92ce7610c383f47",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "function 70",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 847.9999237060547,
        "y": 3364.0000162124634,
        "wires": [
            [
                "128e1cf5e7553dbf"
            ]
        ]
    },
    {
        "id": "78631d33f8c6e109",
        "type": "json",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1103.0000305175781,
        "y": 2050.0000400543213,
        "wires": [
            [
                "f53f09c70bd25d0f"
            ]
        ]
    },
    {
        "id": "697610cb1fabd530",
        "type": "json",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1428.0000305175781,
        "y": 2560.0000257492065,
        "wires": [
            [
                "b1668201fc208162",
                "2bccab7185dc815c"
            ]
        ]
    },
    {
        "id": "44d0832e24f2aa80",
        "type": "json",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1228.0000305175781,
        "y": 2960.0000257492065,
        "wires": [
            [
                "c4e5f226bfd03310"
            ]
        ]
    },
    {
        "id": "093a50296c094efe",
        "type": "json",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1278.0000305175781,
        "y": 3160.0000257492065,
        "wires": [
            [
                "f628cba4337119fe"
            ]
        ]
    },
    {
        "id": "2bccab7185dc815c",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "debug 57",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1618.0000305175781,
        "y": 2600.0000257492065,
        "wires": []
    },
    {
        "id": "e51120594a896310",
        "type": "switch",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "All types",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 372.0000305175781,
        "y": 2410.0000400543213,
        "wires": [
            [
                "bc3f870fc0fc8737",
                "e2554b487986d03c"
            ],
            [
                "f107b0209b05f355",
                "cfa7f67a114e050c"
            ]
        ]
    },
    {
        "id": "3f0d8b2210978d09",
        "type": "comment",
        "z": "375e32b86ebbfc9f",
        "name": "ONDO EPINIIIIII TABBB",
        "info": "",
        "x": 1873.7999801635742,
        "y": 3184.9999380111694,
        "wires": []
    },
    {
        "id": "bc3f870fc0fc8737",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "type.typeID",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1232.0000305175781,
        "y": 2290.0000400543213,
        "wires": [
            []
        ]
    },
    {
        "id": "e2554b487986d03c",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "function 71",
        "func": "let sensors = [];\nsensors[0] = \"All groups\";\nmsg.options = sensors;\n\nreturn msg; ",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1448.0000305175781,
        "y": 2320.0000257492065,
        "wires": [
            [
                "bd3facbba834a88e"
            ]
        ]
    },
    {
        "id": "4a7f3aa55617fddf",
        "type": "switch",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "All groups",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 528.0000305175781,
        "y": 2700.0000257492065,
        "wires": [
            [
                "fdc4eefd30a5ee36",
                "b671a0696c6f3509"
            ],
            [
                "6a6e68d0911485c1",
                "e97b456020418308"
            ]
        ]
    },
    {
        "id": "b671a0696c6f3509",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "group.groupID",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 878.0000305175781,
        "y": 2700.0000257492065,
        "wires": [
            [
                "45f95e596c0b6022"
            ]
        ]
    },
    {
        "id": "fdc4eefd30a5ee36",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "function 72",
        "func": "let sensors = [];\nsensors[0] = \"All ingredients\";\nmsg.options = sensors;\n\nreturn msg; ",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 828.0000305175781,
        "y": 2640.0000257492065,
        "wires": [
            [
                "e7589af0954e9479",
                "9e5050cdad2b10c9"
            ]
        ]
    },
    {
        "id": "b288cf019af7b3b1",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "debug 59",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1338.0000305175781,
        "y": 2720.0000257492065,
        "wires": []
    },
    {
        "id": "45f95e596c0b6022",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "groupID",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1118.0000305175781,
        "y": 2700.0000257492065,
        "wires": [
            [
                "b288cf019af7b3b1"
            ]
        ]
    },
    {
        "id": "c6d004cba094a390",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "debug 60",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1380,
        "y": 3080,
        "wires": []
    },
    {
        "id": "16883e38c598a006",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ingredientID",
                "pt": "msg",
                "to": "ingredientID",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1120,
        "y": 3080,
        "wires": [
            [
                "c6d004cba094a390"
            ]
        ]
    },
    {
        "id": "4382f926b508b1d8",
        "type": "http request",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/user/usersByUsername?username={{username}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 670,
        "y": 1800,
        "wires": [
            [
                "ddb64803d0e286a6",
                "9a78664ea14f536c"
            ]
        ]
    },
    {
        "id": "ddb64803d0e286a6",
        "type": "json",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 830,
        "y": 1800,
        "wires": [
            [
                "ef8577d9fe969409"
            ]
        ]
    },
    {
        "id": "a7af98d0a49070ca",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "function 73",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1800,
        "wires": [
            [
                "4382f926b508b1d8"
            ]
        ]
    },
    {
        "id": "bb377f643e742380",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "debug 61",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 1900,
        "wires": []
    },
    {
        "id": "9a78664ea14f536c",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "debug 62",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 1840,
        "wires": []
    },
    {
        "id": "e110e0dfbe394615",
        "type": "ui_button",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "group": "a183720441c2ef16",
        "order": 3,
        "width": 13,
        "height": 1,
        "passthru": false,
        "label": "See all users",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 290,
        "y": 5700,
        "wires": [
            [
                "a7df0bf7d9321649"
            ]
        ]
    },
    {
        "id": "9e413df66f0d85da",
        "type": "ui_button",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "group": "a183720441c2ef16",
        "order": 7,
        "width": 13,
        "height": 1,
        "passthru": false,
        "label": "Delete user",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 270,
        "y": 5860,
        "wires": [
            [
                "ff2922c9480afdee"
            ]
        ]
    },
    {
        "id": "da1d61dd30b79b91",
        "type": "ui_button",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "group": "c6cd645fd4877ad7",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Create user",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Create user",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 170,
        "y": 260,
        "wires": [
            [
                "8fdc27215cfd9d71"
            ]
        ]
    },
    {
        "id": "b72d99148cfe6ed4",
        "type": "ui_button",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "group": "bbfc23942af32973",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "One more glass of water",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 190,
        "y": 4940,
        "wires": [
            [
                "ec2408bd9c17b2ac"
            ]
        ]
    },
    {
        "id": "d8c6de404b36bc6f",
        "type": "ui_button",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "",
        "group": "fbcef1f4da0267ba",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Weight button",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 4320,
        "wires": [
            [
                "391256caead0652e"
            ]
        ]
    },
    {
        "id": "a10e5ca8b623d0a9",
        "type": "ui_button",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "group": "0efaaecc7e2e0e44",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Create account",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 180,
        "y": 1180,
        "wires": [
            [
                "9cf6d54ac88d0d95"
            ]
        ]
    },
    {
        "id": "cf1693d3106c0692",
        "type": "ui_button",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "",
        "group": "c05c0b31021a06c7",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "button",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Restriction information",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 648.0000305175781,
        "y": 1720.0000257492065,
        "wires": [
            [
                "d1529a0bcb8dbfbd"
            ]
        ]
    },
    {
        "id": "c8dd8df107be3c8b",
        "type": "ui_button",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "group": "0a5b59bc61df2e50",
        "order": 5,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Add Restriction",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Restriction name",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 298.0000305175781,
        "y": 3360.0000257492065,
        "wires": [
            [
                "20cbb8e2d9f84c40",
                "87e0eda7096c712e"
            ]
        ]
    },
    {
        "id": "78ab161a82faed75",
        "type": "ui_button",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "group": "0a5b59bc61df2e50",
        "order": 7,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Finish",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "Login",
        "icon": "",
        "payload": "Main page",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 428.0000305175781,
        "y": 1640.0000257492065,
        "wires": [
            [
                "376ebc91919caa39"
            ]
        ]
    },
    {
        "id": "54c22b06b99ee35d",
        "type": "ui_dropdown",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "label": "Gender",
        "tooltip": "",
        "place": "Select option",
        "group": "c6cd645fd4877ad7",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Male",
                "value": "M",
                "type": "str"
            },
            {
                "label": "Female",
                "value": "F",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 180,
        "y": 100,
        "wires": [
            [
                "36989b3f030e2233"
            ]
        ]
    },
    {
        "id": "4df90037a893b8db",
        "type": "ui_dropdown",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "label": "How active are you?",
        "tooltip": "",
        "place": "Select option",
        "group": "c6cd645fd4877ad7",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Sedentary",
                "value": "Sedentary",
                "type": "str"
            },
            {
                "label": "Light",
                "value": "Light",
                "type": "str"
            },
            {
                "label": "Moderate",
                "value": "Moderate",
                "type": "str"
            },
            {
                "label": "Active",
                "value": "Active",
                "type": "str"
            },
            {
                "label": "Very active",
                "value": "Very active",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 140,
        "y": 140,
        "wires": [
            [
                "190630c2ae649cbf"
            ]
        ]
    },
    {
        "id": "a0b0e0ce6bd73405",
        "type": "ui_dropdown",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "label": "Premium",
        "tooltip": "",
        "place": "Select option",
        "group": "c6cd645fd4877ad7",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Yes",
                "value": "true",
                "type": "str"
            },
            {
                "label": "No",
                "value": "false",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 180,
        "y": 180,
        "wires": [
            [
                "ad7fd0b579f49d10"
            ]
        ]
    },
    {
        "id": "b650a4fbed81b1fc",
        "type": "ui_dropdown",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "label": "Objective",
        "tooltip": "",
        "place": "Select option",
        "group": "c6cd645fd4877ad7",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Keep fit",
                "value": "Keep fit",
                "type": "str"
            },
            {
                "label": "Lose weight",
                "value": "Lose weight",
                "type": "str"
            },
            {
                "label": "Gain weight",
                "value": "Gain weight",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 180,
        "y": 220,
        "wires": [
            [
                "e4a926ebfb43586d"
            ]
        ]
    },
    {
        "id": "279559c88bbc1dda",
        "type": "ui_dropdown",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "label": "Food group",
        "tooltip": "",
        "place": "Select option",
        "group": "0a5b59bc61df2e50",
        "order": 3,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 348.0000305175781,
        "y": 2700.0000257492065,
        "wires": [
            [
                "ddf66ec23f642e41",
                "4a7f3aa55617fddf"
            ]
        ]
    },
    {
        "id": "1fbba7a48fdb4699",
        "type": "ui_dropdown",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "label": "Group Class",
        "tooltip": "",
        "place": "Select option",
        "group": "0a5b59bc61df2e50",
        "order": 1,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 243.00003051757812,
        "y": 2130.0000400543213,
        "wires": [
            [
                "28da5d2ec8018283",
                "f7697c12f5d8fe55"
            ]
        ]
    },
    {
        "id": "6af20188d0b7a97e",
        "type": "ui_dropdown",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "label": "Food type",
        "tooltip": "",
        "place": "Select option",
        "group": "0a5b59bc61df2e50",
        "order": 2,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 182.00003051757812,
        "y": 2410.0000400543213,
        "wires": [
            [
                "e51120594a896310"
            ]
        ]
    },
    {
        "id": "11d0df81c9dfe19d",
        "type": "ui_dropdown",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "label": "Ingredients",
        "tooltip": "",
        "place": "Select option",
        "group": "0a5b59bc61df2e50",
        "order": 4,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 278.0000305175781,
        "y": 3080.0000257492065,
        "wires": [
            [
                "a2a7ed0730cade11",
                "1627e766348ed1fe"
            ]
        ]
    },
    {
        "id": "3bce8cf48b572d04",
        "type": "ui_text_input",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "",
        "label": "Restricted food name",
        "tooltip": "",
        "group": "c05c0b31021a06c7",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 158.00003051757812,
        "y": 1660.0000257492065,
        "wires": [
            [
                "c248ce491bec449c"
            ]
        ]
    },
    {
        "id": "c7ef6f90592ee69f",
        "type": "ui_form",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "label": "",
        "group": "ab4e89ea65e8afe2",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Name",
                "value": "uname",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Second Name",
                "value": "secondName",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Age",
                "value": "age",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Height",
                "value": "height",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Username",
                "value": "username",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "email",
                "value": "email",
                "type": "email",
                "required": true,
                "rows": null
            },
            {
                "label": "user Password",
                "value": "userPass",
                "type": "password",
                "required": true,
                "rows": null
            },
            {
                "label": "neck",
                "value": "neck",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "waist",
                "value": "waist",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "hips",
                "value": "hips",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "uname": "",
            "secondName": "",
            "age": "",
            "height": "",
            "username": "",
            "email": "",
            "userPass": "",
            "neck": "",
            "waist": "",
            "hips": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 90,
        "y": 400,
        "wires": [
            [
                "3d35f002d67f2537"
            ]
        ]
    },
    {
        "id": "ce9d3ee73f02d8b8",
        "type": "ui_form",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "label": "",
        "group": "da9f3525a03c70c2",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Uname",
                "value": "uname",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Second Name",
                "value": "secondName",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "UserPass",
                "value": "userPass",
                "type": "password",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "uname": "",
            "secondName": "",
            "userPass": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 490,
        "y": 6080,
        "wires": [
            [
                "8bd4cd9ea98faa6e"
            ]
        ]
    },
    {
        "id": "41e7574c23f7f0f9",
        "type": "ui_form",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "label": "",
        "group": "d40f0e8b58a25673",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Name",
                "value": "foodName",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Proteins",
                "value": "proteins",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Carbs",
                "value": "carbs",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Fats",
                "value": "fats",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Fiber",
                "value": "fiber",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "foodName": "",
            "proteins": "",
            "carbs": "",
            "fats": "",
            "fiber": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 210,
        "y": 5220,
        "wires": [
            [
                "9e595d14ba1e6673"
            ]
        ]
    },
    {
        "id": "4c66dde12657d721",
        "type": "ui_form",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "label": "",
        "group": "0efaaecc7e2e0e44",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Username",
                "value": "username",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "user Password",
                "value": "userPass",
                "type": "password",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "username": "",
            "userPass": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 150,
        "y": 1260,
        "wires": [
            [
                "50cbb914bd263843",
                "1408a6fe11c9f728"
            ]
        ]
    },
    {
        "id": "6f41498e32a8302e",
        "type": "ui_form",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "",
        "label": "",
        "group": "ef2b28373168e3bf",
        "order": 3,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Weigth",
                "value": "weigth",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Goal Weigth",
                "value": "goalWeight",
                "type": "number",
                "required": false,
                "rows": null
            },
            {
                "label": "Weeks To Achieve Goal Weight",
                "value": "durationToAchieveGoalWeight",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Register Date",
                "value": "registerDate",
                "type": "date",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "weigth": "",
            "goalWeight": "",
            "durationToAchieveGoalWeight": "",
            "registerDate": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 290,
        "y": 3800,
        "wires": [
            [
                "c8a694fde6ef461e",
                "46b23358529d98c2",
                "237b20b8a7a41df0"
            ]
        ]
    },
    {
        "id": "96d4e66ebd8acdd3",
        "type": "ui_form",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "label": "",
        "group": "97c37c0a574d34dc",
        "order": 0,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Code",
                "value": "writtenCode",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "writtenCode": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 110,
        "y": 720,
        "wires": [
            [
                "6f28f950092c9672"
            ]
        ]
    },
    {
        "id": "5a21887d03981077",
        "type": "ui_text",
        "z": "375e32b86ebbfc9f",
        "group": "a183720441c2ef16",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Current users",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 940,
        "y": 5760,
        "wires": []
    },
    {
        "id": "c327c9f037d370f6",
        "type": "ui_text",
        "z": "375e32b86ebbfc9f",
        "group": "bbfc23942af32973",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Glasses of water today:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1090,
        "y": 4720,
        "wires": []
    },
    {
        "id": "e1dca7d63c3b5c6d",
        "type": "ui_gauge",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "group": "a183720441c2ef16",
        "order": 8,
        "width": 13,
        "height": 8,
        "gtype": "donut",
        "title": "",
        "label": "users",
        "format": "{{value}}",
        "min": 0,
        "max": "50",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 2170,
        "y": 600,
        "wires": []
    },
    {
        "id": "b867094ea99c61c4",
        "type": "ui_gauge",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "group": "e46c2e252591103a",
        "order": 2,
        "width": 6,
        "height": 4,
        "gtype": "gage",
        "title": "Protein",
        "label": "g",
        "format": "{{payload.totalProteins}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1580,
        "y": 4540,
        "wires": []
    },
    {
        "id": "2be86aa7c1d0520f",
        "type": "ui_gauge",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "group": "e46c2e252591103a",
        "order": 6,
        "width": 6,
        "height": 4,
        "gtype": "gage",
        "title": "Carbs",
        "label": "g",
        "format": "{{payload.totalCarbs}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1570,
        "y": 4580,
        "wires": []
    },
    {
        "id": "9f682895c9545c87",
        "type": "ui_gauge",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "group": "e46c2e252591103a",
        "order": 3,
        "width": 6,
        "height": 4,
        "gtype": "gage",
        "title": "Fats",
        "label": "g",
        "format": "{{payload.totalFats}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1570,
        "y": 4620,
        "wires": []
    },
    {
        "id": "01eadf649a969de4",
        "type": "ui_gauge",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "group": "e46c2e252591103a",
        "order": 7,
        "width": 6,
        "height": 4,
        "gtype": "gage",
        "title": "Fiber",
        "label": "g",
        "format": "{{payload.totalFiber}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1570,
        "y": 4660,
        "wires": []
    },
    {
        "id": "d7a2382b1d34d05a",
        "type": "ui_gauge",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "group": "bbfc23942af32973",
        "order": 3,
        "width": 0,
        "height": 0,
        "gtype": "wave",
        "title": "gauge",
        "label": "Glasses",
        "format": "{{value}}",
        "min": 0,
        "max": "10",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1190,
        "y": 4840,
        "wires": []
    },
    {
        "id": "0b52b6fa605314de",
        "type": "ui_chart",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "",
        "group": "fbcef1f4da0267ba",
        "order": 6,
        "width": 0,
        "height": 0,
        "label": "Weight chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "D/M",
        "interpolate": "linear",
        "nodata": "No data available",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2510,
        "y": 3759,
        "wires": [
            []
        ]
    },
    {
        "id": "2d975bd04be5945a",
        "type": "ui_chart",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "",
        "group": "fbcef1f4da0267ba",
        "order": 6,
        "width": 0,
        "height": 0,
        "label": "Goal weight chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "D/M",
        "interpolate": "linear",
        "nodata": "No Data Available",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2390,
        "y": 4119,
        "wires": [
            []
        ]
    },
    {
        "id": "536cfc69069d0b44",
        "type": "ui_toast",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 7310,
        "y": 40,
        "wires": []
    },
    {
        "id": "c121905283a20064",
        "type": "ui_toast",
        "z": "375e32b86ebbfc9f",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 2570,
        "y": 720,
        "wires": []
    },
    {
        "id": "fa918e519df2d9c5",
        "type": "ui_toast",
        "z": "375e32b86ebbfc9f",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 2310,
        "y": 780,
        "wires": []
    },
    {
        "id": "04e6e2fd156f4515",
        "type": "ui_toast",
        "z": "375e32b86ebbfc9f",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1460,
        "y": 5920,
        "wires": []
    },
    {
        "id": "de41857308f52fd7",
        "type": "ui_toast",
        "z": "375e32b86ebbfc9f",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 2320,
        "y": 6080,
        "wires": []
    },
    {
        "id": "ebf3b0cc594254fb",
        "type": "ui_toast",
        "z": "375e32b86ebbfc9f",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1700,
        "y": 5120,
        "wires": []
    },
    {
        "id": "aa714da79ee21685",
        "type": "ui_toast",
        "z": "375e32b86ebbfc9f",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1660,
        "y": 5340,
        "wires": []
    },
    {
        "id": "9a7ce1ac53cfe3f7",
        "type": "ui_toast",
        "z": "375e32b86ebbfc9f",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1470,
        "y": 5400,
        "wires": []
    },
    {
        "id": "33bc6335129c819b",
        "type": "ui_toast",
        "z": "375e32b86ebbfc9f",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 2650,
        "y": 1139,
        "wires": []
    },
    {
        "id": "bc995d2f55a03493",
        "type": "ui_toast",
        "z": "375e32b86ebbfc9f",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1960,
        "y": 1340,
        "wires": []
    },
    {
        "id": "976ed52e1cc48f68",
        "type": "ui_toast",
        "z": "375e32b86ebbfc9f",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1730,
        "y": 1400,
        "wires": []
    },
    {
        "id": "6418a3e515b10f95",
        "type": "ui_toast",
        "z": "375e32b86ebbfc9f",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1590,
        "y": 460,
        "wires": []
    },
    {
        "id": "902266b528883233",
        "type": "ui_toast",
        "z": "375e32b86ebbfc9f",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1420,
        "y": 540,
        "wires": []
    },
    {
        "id": "61a62505e040530f",
        "type": "ui_toast",
        "z": "375e32b86ebbfc9f",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 2630,
        "y": 440,
        "wires": []
    },
    {
        "id": "cdde329a315d9087",
        "type": "ui_toast",
        "z": "375e32b86ebbfc9f",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 830,
        "y": 5380,
        "wires": []
    },
    {
        "id": "8669f7fc4761239b",
        "type": "ui_toast",
        "z": "375e32b86ebbfc9f",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 6010,
        "y": 720,
        "wires": []
    },
    {
        "id": "72bfd3e07180dc75",
        "type": "ui_toast",
        "z": "375e32b86ebbfc9f",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 2536,
        "y": 3378,
        "wires": []
    },
    {
        "id": "957bb2e89b9157b5",
        "type": "ui_toast",
        "z": "375e32b86ebbfc9f",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 2072.000030517578,
        "y": 3442.0000257492065,
        "wires": []
    },
    {
        "id": "83854b2c14e5cd8c",
        "type": "ui_toast",
        "z": "375e32b86ebbfc9f",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1987.9999237060547,
        "y": 3164.0000162124634,
        "wires": []
    },
    {
        "id": "8fdc27215cfd9d71",
        "type": "ui_ui_control",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "events": "all",
        "x": 340,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "8a164cb99f23d5eb",
        "type": "ui_ui_control",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "events": "all",
        "x": 1640,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "c4d69e734be5188b",
        "type": "ui_ui_control",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "events": "all",
        "x": 2060,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "feb684a268fcfa5f",
        "type": "ui_ui_control",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "events": "all",
        "x": 540,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "9b1a370153747829",
        "type": "ui_ui_control",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "x": 2800,
        "y": 1299,
        "wires": [
            []
        ]
    },
    {
        "id": "afbda9f94638f112",
        "type": "ui_ui_control",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "events": "all",
        "x": 1330,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "213b7df293c84a2f",
        "type": "ui_ui_control",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "events": "all",
        "x": 2173,
        "y": 655,
        "wires": [
            []
        ]
    },
    {
        "id": "d1529a0bcb8dbfbd",
        "type": "ui_ui_control",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "",
        "events": "all",
        "x": 798.0000305175781,
        "y": 1720.0000257492065,
        "wires": [
            []
        ]
    },
    {
        "id": "a5c27af174c5ad38",
        "type": "ui_ui_control",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "",
        "events": "all",
        "x": 1633.0000305175781,
        "y": 2190.0000400543213,
        "wires": [
            []
        ]
    },
    {
        "id": "ab2bce407617cf33",
        "type": "ui_ui_control",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "",
        "events": "all",
        "x": 5804,
        "y": 510.00001430511475,
        "wires": [
            []
        ]
    },
    {
        "id": "b7db9e8c988cce09",
        "type": "ui_ui_control",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "",
        "events": "all",
        "x": 6340,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "2dc818b3662908a9",
        "type": "ui_ui_control",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "",
        "events": "all",
        "x": 7540,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "20cbb8e2d9f84c40",
        "type": "ui_ui_control",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "",
        "events": "all",
        "x": 617.9999237060547,
        "y": 3444.0000162124634,
        "wires": [
            []
        ]
    },
    {
        "id": "44065e41d02f3a1e",
        "type": "ui_ui_control",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "",
        "events": "all",
        "x": 2118.000030517578,
        "y": 3300.0000257492065,
        "wires": [
            []
        ]
    },
    {
        "id": "376ebc91919caa39",
        "type": "ui_ui_control",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "events": "all",
        "x": 600,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "38e4e4142f91cb38",
        "type": "ui_template",
        "z": "375e32b86ebbfc9f",
        "group": "90723e692323a8c9",
        "name": "",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<div>\n    <img src={{msg.payload}}>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 4880,
        "y": 2640,
        "wires": [
            []
        ]
    },
    {
        "id": "6017353586e7e23b",
        "type": "ui_gauge",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "group": "e46c2e252591103a",
        "order": 5,
        "width": 6,
        "height": 4,
        "gtype": "gage",
        "title": "Calories",
        "label": "cal",
        "format": "{{payload.totalCalories}}",
        "min": 0,
        "max": 10,
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1580,
        "y": 4700,
        "wires": []
    },
    {
        "id": "324ae5a63697be6a",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "dynamic max and min",
        "func": "var max = msg.finalDailyCalorieIntake;\nvar min = 0;\nvar curPayload = Math.round(msg.payload.totalCalories);\nmsg = {\n    ui_control:{min:min,max:max},\n    payload: curPayload\n    };\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 4700,
        "wires": [
            [
                "6017353586e7e23b"
            ]
        ]
    },
    {
        "id": "5a89222ffcc8b21a",
        "type": "http request",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://127.0.0.1:5000/intake_prediction",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 2150,
        "y": 4240,
        "wires": [
            [
                "84c124f1ae684726"
            ]
        ]
    },
    {
        "id": "84c124f1ae684726",
        "type": "json",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2330,
        "y": 4239,
        "wires": [
            [
                "f2dd3c5108bfa25c"
            ]
        ]
    },
    {
        "id": "89184639d5acb455",
        "type": "ui_template",
        "z": "375e32b86ebbfc9f",
        "group": "bbfc23942af32973",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<a href=\"https://t.me/Janai_chatBot\" target=\"_blank\">\n    <button style=\"padding: 10px; font-size: 16px; background-color: #0088cc; color: white; border: none; border-radius: 5px; width: 100%;\">\n        NUTRITIONAL CHAT\n    </button>\n</a>\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 140,
        "y": 4800,
        "wires": [
            []
        ]
    },
    {
        "id": "d1a0f8758e685372",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "function 80",
        "func": "var userId = flow.get(\"user.userID\");\nvar username = flow.get(\"user.username\");\nmsg.topic = \"SELECT SUM(f.carbs) as sumCarbs, SUM(f.proteins) as sumProteins, SUM(f.fats) as sumFats, SUM(f.fiber) as sumFibers, SUM(f.calories) as sumCalories FROM foodlist fl JOIN food f ON fl.foodID=f.foodID WHERE fl.userID='\"+userId+\"' GROUP BY f.foodId; SELECT finalDailyCalorieIntake FROM userData WHERE username='\"+username+\"'\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 4680,
        "wires": [
            []
        ]
    },
    {
        "id": "8d75192b7b3b4402",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "function 79",
        "func": "msg.max = msg.payload;\nmsg.carbs = Math.round((msg.max * 0.45) / 4);\nmsg.fats = Math.round((msg.max * 0.25) / 9);\nmsg.proteins = Math.round((msg.max * 0.30) / 4); \nmsg.finalDailyCalorieIntake = Math.round(msg.max);\nif (flow.get(\"user.gender\")==\"M\"){\n    msg.fibers = 30;\n}\nelse {\n    msg.fibers = 25;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 4560,
        "wires": [
            [
                "324ae5a63697be6a",
                "e252b7aeb9caf845",
                "99afb7b100897f32",
                "76bba5fe5ca1276f",
                "0195ed3fde554ebd",
                "dcf5bf4a716676f0"
            ]
        ]
    },
    {
        "id": "d9f37123864c1f07",
        "type": "switch",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "property": "options",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1950,
        "y": 1800,
        "wires": [
            [
                "bd24111b04dae84f",
                "ed29a77a62914934"
            ],
            [
                "9fe76a8c508b652c"
            ]
        ]
    },
    {
        "id": "bd24111b04dae84f",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "There is not more restrictions",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2180,
        "y": 1780,
        "wires": [
            [
                "12f32300956d0cf0"
            ]
        ]
    },
    {
        "id": "ed29a77a62914934",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Main page",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2180,
        "y": 1840,
        "wires": [
            [
                "8b8d8722be98e91f"
            ]
        ]
    },
    {
        "id": "8b8d8722be98e91f",
        "type": "ui_ui_control",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "events": "all",
        "x": 2380,
        "y": 1840,
        "wires": [
            []
        ]
    },
    {
        "id": "12f32300956d0cf0",
        "type": "ui_toast",
        "z": "375e32b86ebbfc9f",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 2420,
        "y": 1780,
        "wires": []
    },
    {
        "id": "a86a951371555748",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "newGoal",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 3760,
        "wires": [
            [
                "10dbd8f9dee022b6"
            ]
        ]
    },
    {
        "id": "ff8a1594e72e5b4e",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "function 81",
        "func": "var userId = flow.get(\"user.userID\");\nmsg.topic = \"SELECT waterIntake FROM userData WHERE userID='\"+userId+\"'\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 4740,
        "wires": [
            []
        ]
    },
    {
        "id": "04d22f3cfb6d5f0c",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "function 82",
        "func": "msg.payload = Math.round((msg.payload)/0.25);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 4660,
        "wires": [
            [
                "c327c9f037d370f6"
            ]
        ]
    },
    {
        "id": "d648230d3acf5df9",
        "type": "http request",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/user/finalDailyCalorieIntakeByUsername?username={{username}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 890,
        "y": 4460,
        "wires": [
            [
                "8d75192b7b3b4402",
                "4e93fed1e01f0bba"
            ]
        ]
    },
    {
        "id": "fb560c0fc040d02c",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "username",
                "pt": "msg",
                "to": "user.username",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "userID",
                "pt": "msg",
                "to": "user.userID",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 4580,
        "wires": [
            [
                "9184a13b025388a5"
            ]
        ]
    },
    {
        "id": "4e93fed1e01f0bba",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "debug 77",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 4440,
        "wires": []
    },
    {
        "id": "8df44d1eda8c2d38",
        "type": "link in",
        "z": "375e32b86ebbfc9f",
        "name": "link in 1",
        "links": [
            "f3d52a4d2cdb75e7",
            "ecfc08da0aa5c04e"
        ],
        "x": 145,
        "y": 4580,
        "wires": [
            [
                "fb560c0fc040d02c",
                "d1a0f8758e685372",
                "ff8a1594e72e5b4e"
            ]
        ]
    },
    {
        "id": "f3d52a4d2cdb75e7",
        "type": "link out",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "link out 1",
        "mode": "link",
        "links": [
            "8df44d1eda8c2d38"
        ],
        "x": 3035,
        "y": 4240,
        "wires": []
    },
    {
        "id": "9184a13b025388a5",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\n\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 4580,
        "wires": [
            [
                "d648230d3acf5df9",
                "ef7812d046cd9436",
                "853477fce9340df4",
                "d2464f95bb45e489"
            ]
        ]
    },
    {
        "id": "ef7812d046cd9436",
        "type": "http request",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/foodList/macrosByUser?userID={{userID}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 890,
        "y": 4540,
        "wires": [
            [
                "2399b079ba7617d5"
            ]
        ]
    },
    {
        "id": "accc2039117e4268",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "debug 78",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1380,
        "y": 4800,
        "wires": []
    },
    {
        "id": "853477fce9340df4",
        "type": "http request",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/user/waterIntakeByUserID?userID={{userID}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 830,
        "y": 4660,
        "wires": [
            [
                "04d22f3cfb6d5f0c"
            ]
        ]
    },
    {
        "id": "2399b079ba7617d5",
        "type": "json",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1130,
        "y": 4620,
        "wires": [
            [
                "accc2039117e4268",
                "b867094ea99c61c4",
                "2be86aa7c1d0520f",
                "9f682895c9545c87",
                "01eadf649a969de4",
                "6017353586e7e23b"
            ]
        ]
    },
    {
        "id": "dcf5bf4a716676f0",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "debug 79",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 4420,
        "wires": []
    },
    {
        "id": "b0cf88c098eae9ea",
        "type": "http request",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/user/modifyCalorieIntake?userID={{userID}}&finalDailyCalorieIntake={{finalDailyCalorieIntake}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 2910,
        "y": 4240,
        "wires": [
            [
                "f3d52a4d2cdb75e7"
            ]
        ]
    },
    {
        "id": "50e91e4331d7acde",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload.userID",
                "pt": "msg",
                "to": "user.userID",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1940,
        "y": 4240,
        "wires": [
            [
                "5a89222ffcc8b21a"
            ]
        ]
    },
    {
        "id": "f2dd3c5108bfa25c",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "finalDailyCalorieIntake",
                "pt": "msg",
                "to": "payload.calorie_prediction",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "userID",
                "pt": "msg",
                "to": "user.userID",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2520,
        "y": 4240,
        "wires": [
            [
                "be3ae1494a74d861"
            ]
        ]
    },
    {
        "id": "be3ae1494a74d861",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\n\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2730,
        "y": 4240,
        "wires": [
            [
                "b0cf88c098eae9ea"
            ]
        ]
    },
    {
        "id": "386de2e3a6963b21",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "waterCounter",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "userID",
                "pt": "msg",
                "to": "user.userID",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 4940,
        "wires": [
            [
                "5c5122a1510cf3c5"
            ]
        ]
    },
    {
        "id": "5c5122a1510cf3c5",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\n\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 4940,
        "wires": [
            [
                "6fa6c128cdf214b4"
            ]
        ]
    },
    {
        "id": "6fa6c128cdf214b4",
        "type": "http request",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/user/modifyWaterCounter?userID={{userID}}&waterCounter={{waterCounter}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1490,
        "y": 4940,
        "wires": [
            [
                "d7a2382b1d34d05a"
            ]
        ]
    },
    {
        "id": "ec2408bd9c17b2ac",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "username",
                "pt": "msg",
                "to": "user.username",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 4940,
        "wires": [
            [
                "71ccf6f098d89e5b"
            ]
        ]
    },
    {
        "id": "71ccf6f098d89e5b",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\n\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 4940,
        "wires": [
            [
                "abdfd25827fb7833"
            ]
        ]
    },
    {
        "id": "abdfd25827fb7833",
        "type": "http request",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/user/waterCounterByUsername?username={{username}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 890,
        "y": 4940,
        "wires": [
            [
                "386de2e3a6963b21"
            ]
        ]
    },
    {
        "id": "d2464f95bb45e489",
        "type": "http request",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/user/waterCounterByUsername?username={{username}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 730,
        "y": 4820,
        "wires": [
            [
                "d7a2382b1d34d05a"
            ]
        ]
    },
    {
        "id": "3e0cbeaae0e0e37b",
        "type": "comment",
        "z": "375e32b86ebbfc9f",
        "name": "Hau ez ikutu",
        "info": "",
        "x": 478.0000305175781,
        "y": 3140.0000257492065,
        "wires": []
    },
    {
        "id": "84807da462b232ca",
        "type": "ui_form",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "label": "",
        "group": "a55d8688f1fda0f7",
        "order": 0,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Name",
                "value": "campName",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Town",
                "value": "town",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Company",
                "value": "company",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "campName": "",
            "town": "",
            "company": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 190,
        "y": 6420,
        "wires": [
            [
                "b13e46d04c050b7a",
                "0c600cf0c4c83a53"
            ]
        ]
    },
    {
        "id": "b13e46d04c050b7a",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "function 74",
        "func": "var admin = flow.get('admin' || 0);\n\nvar campaign = {\n    campName: msg.payload.campName,\n    adminID: admin.adminID,\n    town : msg.payload.town,\n    company: msg.payload.company\n}\nmsg.payload = campaign;\nmsg.campaign = campaign;\nmsg.adminID = admin.adminID;\n\nflow.set('campaign', campaign);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 6420,
        "wires": [
            [
                "8042202e38585180",
                "86c832cc3f6a67fb",
                "183ed8ea671aa516"
            ]
        ]
    },
    {
        "id": "8042202e38585180",
        "type": "json-schema-validator",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "",
        "func": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"title\": \"Campaign\",\n    \"description\": \"Schema for creating a Campaign object\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"campName\": {\n            \"description\": \"Name of the campaign\",\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"maxLength\": 255\n        },\n        \"adminID\": {\n            \"description\": \"ID of the administrator responsible for the campaign\",\n            \"type\": \"integer\",\n            \"minimum\": 1\n        },\n        \"town\": {\n            \"description\": \"Location of the campaign\",\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"maxLength\": 255\n        },\n        \"company\": {\n            \"description\": \"Company involved in the campaign\",\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"maxLength\": 255\n        }\n    },\n    \"required\": [\n        \"campName\",\n        \"adminID\",\n        \"town\",\n        \"company\"\n    ]\n}",
        "x": 590,
        "y": 6360,
        "wires": [
            [
                "183ed8ea671aa516"
            ]
        ]
    },
    {
        "id": "ec96e33b92e3a498",
        "type": "http request",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/campaign/add?adminID={{adminID}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1220,
        "y": 6420,
        "wires": [
            [
                "3c4b75bd94ad8750",
                "3d2a090075102da3"
            ]
        ]
    },
    {
        "id": "be9a1dae3f047222",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Campaign created",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1720,
        "y": 6320,
        "wires": [
            [
                "c9ea42400b6c03a0"
            ]
        ]
    },
    {
        "id": "c9ea42400b6c03a0",
        "type": "ui_toast",
        "z": "375e32b86ebbfc9f",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1990,
        "y": 6320,
        "wires": []
    },
    {
        "id": "0c600cf0c4c83a53",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "debug 63",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 6500,
        "wires": []
    },
    {
        "id": "3c4b75bd94ad8750",
        "type": "switch",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "201",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1430,
        "y": 6420,
        "wires": [
            [
                "be9a1dae3f047222",
                "06ff4df352d15ed6"
            ],
            [
                "e81fe283d40681a4"
            ],
            [
                "1faa674965c09972"
            ]
        ]
    },
    {
        "id": "cd61322f9d26a270",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2090,
        "y": 6440,
        "wires": []
    },
    {
        "id": "e81fe283d40681a4",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "Username exists error",
        "func": "msg.payload = 'The username does exist: ' + msg.user;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1720,
        "y": 6480,
        "wires": [
            [
                "cd61322f9d26a270",
                "a35887070eeac1a2"
            ]
        ]
    },
    {
        "id": "96552b5bb4a27735",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "username",
                "pt": "flow",
                "to": "user.username",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "campaign",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "campaignIngredient",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1840,
        "y": 6380,
        "wires": [
            [
                "1a7c8a38fce90a1a"
            ]
        ]
    },
    {
        "id": "3d147dbc4f06e4a1",
        "type": "ui_toast",
        "z": "375e32b86ebbfc9f",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 2310,
        "y": 6500,
        "wires": []
    },
    {
        "id": "a35887070eeac1a2",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Cannot create user",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2060,
        "y": 6500,
        "wires": [
            [
                "3d147dbc4f06e4a1"
            ]
        ]
    },
    {
        "id": "1faa674965c09972",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Error",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "It has been an error",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1720,
        "y": 6580,
        "wires": [
            [
                "e5e1778d949188a6"
            ]
        ]
    },
    {
        "id": "e5e1778d949188a6",
        "type": "ui_toast",
        "z": "375e32b86ebbfc9f",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1970,
        "y": 6580,
        "wires": []
    },
    {
        "id": "1a7c8a38fce90a1a",
        "type": "ui_ui_control",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "events": "all",
        "x": 2040,
        "y": 6380,
        "wires": [
            []
        ]
    },
    {
        "id": "74543eb38ca01340",
        "type": "comment",
        "z": "375e32b86ebbfc9f",
        "name": "Campaign",
        "info": "",
        "x": 220,
        "y": 6360,
        "wires": []
    },
    {
        "id": "86c832cc3f6a67fb",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "debug 66",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 6500,
        "wires": []
    },
    {
        "id": "3d2a090075102da3",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "debug 67",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1370,
        "y": 6500,
        "wires": []
    },
    {
        "id": "756086a30dbac2ce",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "campaign",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 6420,
        "wires": [
            [
                "ec96e33b92e3a498"
            ]
        ]
    },
    {
        "id": "183ed8ea671aa516",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 6420,
        "wires": [
            [
                "756086a30dbac2ce"
            ]
        ]
    },
    {
        "id": "fd6bfc2fd3a1adac",
        "type": "ui_form",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "label": "",
        "group": "cd2ab2fb7c79e044",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Ingredient Name",
                "value": "ingredientName",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "initDate",
                "value": "initDate",
                "type": "date",
                "required": true,
                "rows": null
            },
            {
                "label": "endDate",
                "value": "endDate",
                "type": "date",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "ingredientName": "",
            "initDate": "",
            "endDate": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 190,
        "y": 6840,
        "wires": [
            [
                "493d089f10cf39fc",
                "cd385144071fad53"
            ]
        ]
    },
    {
        "id": "0b7b4a349154c5c2",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "function 75",
        "func": "var admin = flow.get('admin' || 0);\n\nvar ingredient = msg.payload;\nvar ingredientInCampaign = {\n    campaignID: msg.campaign.campaignID,\n    ingredientID: msg.payload.ingredientID,\n    initDate: msg.init_date.split(\"T\")[0],\n    endDate: msg.end_date.split(\"T\")[0],\n}\nmsg.payload = ingredientInCampaign;\nmsg.ingredient = ingredient;\nmsg.ingredientInCampaign=ingredientInCampaign;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 6840,
        "wires": [
            [
                "24ba4a3c8a1e6f73",
                "6e5425ce0a662c3b",
                "cc76e49b3bd1bba7"
            ]
        ]
    },
    {
        "id": "24ba4a3c8a1e6f73",
        "type": "json-schema-validator",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "",
        "func": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"title\": \"IngredientsInCampaign\",\n    \"description\": \"Schema for the IngredientsInCampaign table\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"campaignID\": {\n            \"description\": \"ID of the campaign\",\n                \"type\": \"integer\",\n                    \"minimum\": 1\n        },\n        \"ingredientID\": {\n            \"description\": \"ID of the ingredient\",\n            \"type\": \"integer\",\n            \"minimum\": 1\n        },\n        \"init_date\": {\n            \"description\": \"Start date of the ingredient's participation in the campaign\",\n            \"type\": \"string\",\n            \"format\": \"date\"\n        },\n        \"end_date\": {\n            \"description\": \"End date of the ingredient's participation in the campaign\",\n            \"type\": \"string\",\n            \"format\": \"date\"\n        }\n    },\n    \"required\": [\n        \"campaignID\",\n        \"ingredientID\",\n        \"init_date\",\n        \"end_date\"\n    ]\n}",
        "x": 1330,
        "y": 6780,
        "wires": [
            [
                "cc76e49b3bd1bba7",
                "576a7ad378e0fa46"
            ]
        ]
    },
    {
        "id": "6cf84eee324e934e",
        "type": "http request",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/ingredientCampaign/add?campaignID={{campaignID}}&ingredientID={{ingredientID}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 2050,
        "y": 6840,
        "wires": [
            [
                "256c628713dce649",
                "afdaec69b86047f3"
            ]
        ]
    },
    {
        "id": "3c5384e93637ac77",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Campaign created",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2580,
        "y": 6740,
        "wires": [
            [
                "0d7d7cedd19ab132"
            ]
        ]
    },
    {
        "id": "0d7d7cedd19ab132",
        "type": "ui_toast",
        "z": "375e32b86ebbfc9f",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 2840,
        "y": 6740,
        "wires": []
    },
    {
        "id": "493d089f10cf39fc",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "debug 69",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 6900,
        "wires": []
    },
    {
        "id": "256c628713dce649",
        "type": "switch",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "201",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 2260,
        "y": 6840,
        "wires": [
            [
                "3c5384e93637ac77"
            ],
            [
                "8e1acee1a508f970"
            ],
            [
                "9c059440b319856a"
            ]
        ]
    },
    {
        "id": "2085e979d60704a4",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2900,
        "y": 6860,
        "wires": []
    },
    {
        "id": "8e1acee1a508f970",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "Username exists error",
        "func": "msg.payload = 'The username does exist: ' + msg.user;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2580,
        "y": 6900,
        "wires": [
            [
                "2085e979d60704a4",
                "bcd9a9b326e931ee"
            ]
        ]
    },
    {
        "id": "243551abfd192693",
        "type": "ui_toast",
        "z": "375e32b86ebbfc9f",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 3160,
        "y": 6920,
        "wires": []
    },
    {
        "id": "bcd9a9b326e931ee",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Cannot create user",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2920,
        "y": 6920,
        "wires": [
            [
                "243551abfd192693"
            ]
        ]
    },
    {
        "id": "9c059440b319856a",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Error",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "It has been an error",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2560,
        "y": 7000,
        "wires": [
            [
                "ef02248976ada77a"
            ]
        ]
    },
    {
        "id": "ef02248976ada77a",
        "type": "ui_toast",
        "z": "375e32b86ebbfc9f",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 2820,
        "y": 7000,
        "wires": []
    },
    {
        "id": "42dbd6b4fe78ef97",
        "type": "ui_ui_control",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "events": "all",
        "x": 360,
        "y": 7040,
        "wires": [
            []
        ]
    },
    {
        "id": "03f82b62d9c475f9",
        "type": "comment",
        "z": "375e32b86ebbfc9f",
        "name": "Ingredient in Campaign",
        "info": "",
        "x": 270,
        "y": 6779,
        "wires": []
    },
    {
        "id": "6e5425ce0a662c3b",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "debug 70",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1300,
        "y": 6900,
        "wires": []
    },
    {
        "id": "afdaec69b86047f3",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "debug 71",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2230,
        "y": 6901,
        "wires": []
    },
    {
        "id": "e7f4ed7c0156180c",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "campaignID",
                "pt": "msg",
                "to": "campaign.campaignID",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ingredientID",
                "pt": "msg",
                "to": "ingredient.ingredientID",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ingredientInCampaign",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1820,
        "y": 6840,
        "wires": [
            [
                "6cf84eee324e934e",
                "a4274492dd26c954"
            ]
        ]
    },
    {
        "id": "cc76e49b3bd1bba7",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1610,
        "y": 6840,
        "wires": [
            [
                "e7f4ed7c0156180c"
            ]
        ]
    },
    {
        "id": "552d9b7dd1a679a3",
        "type": "http request",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/ingredient/searchIngredientByName?ingName={{ingredientName}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 790,
        "y": 6840,
        "wires": [
            [
                "497c51fe7fb84884",
                "1678d90a597e143e"
            ]
        ]
    },
    {
        "id": "03945adf4579e91c",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ingredientName",
                "pt": "msg",
                "to": "payload.ingredientName",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "initDate",
                "pt": "msg",
                "to": "payload.init_date",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "endDate",
                "pt": "msg",
                "to": "payload.end_date",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "campaign",
                "pt": "msg",
                "to": "campaign",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 6840,
        "wires": [
            [
                "552d9b7dd1a679a3",
                "883e0ec563c460d4"
            ]
        ]
    },
    {
        "id": "cd385144071fad53",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 6840,
        "wires": [
            [
                "03945adf4579e91c"
            ]
        ]
    },
    {
        "id": "497c51fe7fb84884",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "debug 72",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 6900,
        "wires": []
    },
    {
        "id": "883e0ec563c460d4",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "debug 73",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 6900,
        "wires": []
    },
    {
        "id": "06ff4df352d15ed6",
        "type": "json",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1650,
        "y": 6380,
        "wires": [
            [
                "96552b5bb4a27735",
                "d5327076abc7b793"
            ]
        ]
    },
    {
        "id": "1678d90a597e143e",
        "type": "json",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 970,
        "y": 6840,
        "wires": [
            [
                "0b7b4a349154c5c2",
                "375af7e640eeee5e"
            ]
        ]
    },
    {
        "id": "375af7e640eeee5e",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "debug 74",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 6900,
        "wires": []
    },
    {
        "id": "d5327076abc7b793",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "debug 75",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1800,
        "y": 6420,
        "wires": []
    },
    {
        "id": "576a7ad378e0fa46",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "debug 76",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1540,
        "y": 6780,
        "wires": []
    },
    {
        "id": "a4274492dd26c954",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "debug 77",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1980,
        "y": 6900,
        "wires": []
    },
    {
        "id": "7fc5b602c78fd14e",
        "type": "ui_button",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "group": "cd2ab2fb7c79e044",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Finish",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Main page",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 190,
        "y": 7040,
        "wires": [
            [
                "42dbd6b4fe78ef97"
            ]
        ]
    },
    {
        "id": "9fe76a8c508b652c",
        "type": "link out",
        "z": "375e32b86ebbfc9f",
        "name": "Group link out",
        "mode": "link",
        "links": [
            "83e9e896cce63bd1"
        ],
        "x": 2095,
        "y": 1900,
        "wires": []
    },
    {
        "id": "83e9e896cce63bd1",
        "type": "link in",
        "z": "375e32b86ebbfc9f",
        "name": "Group link in",
        "links": [
            "9fe76a8c508b652c"
        ],
        "x": 118.00003051757812,
        "y": 2110.0000400543213,
        "wires": [
            [
                "1fbba7a48fdb4699"
            ]
        ]
    },
    {
        "id": "bd3facbba834a88e",
        "type": "link out",
        "z": "375e32b86ebbfc9f",
        "name": "Group link out ",
        "mode": "link",
        "links": [
            "92eafe80feee143c"
        ],
        "x": 1763.0000305175781,
        "y": 2380.0000257492065,
        "wires": []
    },
    {
        "id": "92eafe80feee143c",
        "type": "link in",
        "z": "375e32b86ebbfc9f",
        "name": "Group link in",
        "links": [
            "bd3facbba834a88e"
        ],
        "x": 143.00003051757812,
        "y": 2640.0000257492065,
        "wires": [
            [
                "279559c88bbc1dda"
            ]
        ]
    },
    {
        "id": "ee1e1d11bc830d51",
        "type": "link out",
        "z": "375e32b86ebbfc9f",
        "name": "Class link out",
        "mode": "link",
        "links": [
            "514673452101f283",
            "72852879048759a7"
        ],
        "x": 2405,
        "y": 979,
        "wires": []
    },
    {
        "id": "72852879048759a7",
        "type": "link in",
        "z": "375e32b86ebbfc9f",
        "name": "Class link in",
        "links": [
            "ee1e1d11bc830d51",
            "9c0b14a9ac09b649"
        ],
        "x": 115,
        "y": 1800,
        "wires": [
            [
                "c248ce491bec449c"
            ]
        ]
    },
    {
        "id": "5e004731f4c3a0b0",
        "type": "link in",
        "z": "375e32b86ebbfc9f",
        "name": "Ingredient link in",
        "links": [
            "9e5050cdad2b10c9"
        ],
        "x": 123.00003051757812,
        "y": 3040.0000257492065,
        "wires": [
            [
                "11d0df81c9dfe19d"
            ]
        ]
    },
    {
        "id": "9e5050cdad2b10c9",
        "type": "link out",
        "z": "375e32b86ebbfc9f",
        "name": "Ingredient link out",
        "mode": "link",
        "links": [
            "5e004731f4c3a0b0"
        ],
        "x": 1473.0000305175781,
        "y": 2640.0000257492065,
        "wires": []
    },
    {
        "id": "7ad62f0722deedff",
        "type": "link in",
        "z": "375e32b86ebbfc9f",
        "name": "Type link in",
        "links": [
            "a7a32c71e7cc5467"
        ],
        "x": 153.00003051757812,
        "y": 2300.0000257492065,
        "wires": [
            [
                "6af20188d0b7a97e"
            ]
        ]
    },
    {
        "id": "a7a32c71e7cc5467",
        "type": "link out",
        "z": "375e32b86ebbfc9f",
        "name": "Type link out",
        "mode": "link",
        "links": [
            "7ad62f0722deedff"
        ],
        "x": 1633.0000305175781,
        "y": 2080.0000257492065,
        "wires": []
    },
    {
        "id": "783f38355b8728a8",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "debug 80",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 1299,
        "wires": []
    },
    {
        "id": "703fb9e4b4ce9132",
        "type": "json",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1170,
        "y": 1159,
        "wires": [
            [
                "c6b9aec045f1a95c"
            ]
        ]
    },
    {
        "id": "9c0b14a9ac09b649",
        "type": "link out",
        "z": "375e32b86ebbfc9f",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "72852879048759a7"
        ],
        "x": 2027.1999740600586,
        "y": 3239.0001039505005,
        "wires": []
    },
    {
        "id": "c0962c547edbd5e3",
        "type": "comment",
        "z": "375e32b86ebbfc9f",
        "name": "KENDU AL DA EIN USTE DOT SET BAT",
        "info": "",
        "x": 758.0000305175781,
        "y": 3000.0000257492065,
        "wires": []
    },
    {
        "id": "95d80e5db9f7225b",
        "type": "link out",
        "z": "375e32b86ebbfc9f",
        "name": "Weight link out",
        "mode": "link",
        "links": [
            "31fb5176ce62963f",
            "ba99e8f94aa423c8"
        ],
        "x": 3115,
        "y": 1399,
        "wires": []
    },
    {
        "id": "31fb5176ce62963f",
        "type": "link in",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "Weight link in",
        "links": [
            "95d80e5db9f7225b"
        ],
        "x": 165,
        "y": 4220,
        "wires": [
            [
                "391256caead0652e",
                "a7a4866667c5dfdc"
            ]
        ]
    },
    {
        "id": "58bb8005f8db59fc",
        "type": "json",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "property": "headers.validation-error",
        "action": "",
        "pretty": false,
        "x": 1630,
        "y": 3580,
        "wires": [
            [
                "12815e8502233dd8"
            ]
        ]
    },
    {
        "id": "12815e8502233dd8",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "debug 81",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1780,
        "y": 3580,
        "wires": []
    },
    {
        "id": "1d3c8117f256e361",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "headers.validation-error",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Cannot create the restriction",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 3340,
        "wires": [
            [
                "72bfd3e07180dc75",
                "dbb5d4842c63aa63"
            ]
        ]
    },
    {
        "id": "dbb5d4842c63aa63",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "debug 82",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2350,
        "y": 3280,
        "wires": []
    },
    {
        "id": "9cf9337a5fb4164a",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "debug 83",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 820,
        "wires": []
    },
    {
        "id": "34afc8ecb994297b",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Admin logged",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "admin",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2240,
        "y": 1320,
        "wires": [
            [
                "d0e8773fc02bfb39"
            ]
        ]
    },
    {
        "id": "d0e8773fc02bfb39",
        "type": "ui_toast",
        "z": "375e32b86ebbfc9f",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 2440,
        "y": 1320,
        "wires": []
    },
    {
        "id": "7cc8db6bcf036f0f",
        "type": "ui_text",
        "z": "375e32b86ebbfc9f",
        "group": "759cf967336acda0",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "text",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 690,
        "y": 6220,
        "wires": []
    },
    {
        "id": "514673452101f283",
        "type": "link in",
        "z": "375e32b86ebbfc9f",
        "name": "Modify link in",
        "links": [
            "ee1e1d11bc830d51"
        ],
        "x": 105,
        "y": 6120,
        "wires": [
            [
                "ce9d3ee73f02d8b8",
                "162122652801cc3f"
            ]
        ]
    },
    {
        "id": "bac867886cb21f60",
        "type": "http request",
        "z": "375e32b86ebbfc9f",
        "name": "Get all ",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "body",
        "url": "http://localhost:8080/user/usersByUsername?username={{username}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 390,
        "y": 6220,
        "wires": [
            [
                "56f1dcca1bf05ec5"
            ]
        ]
    },
    {
        "id": "162122652801cc3f",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 6220,
        "wires": [
            [
                "bac867886cb21f60"
            ]
        ]
    },
    {
        "id": "56f1dcca1bf05ec5",
        "type": "json",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 530,
        "y": 6220,
        "wires": [
            [
                "7cc8db6bcf036f0f"
            ]
        ]
    },
    {
        "id": "a7a4866667c5dfdc",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "user",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 4220,
        "wires": [
            [
                "ce269e7f2264d42e"
            ]
        ]
    },
    {
        "id": "43f295a6547e45ae",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "debug 84",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1410,
        "y": 3740,
        "wires": []
    },
    {
        "id": "976bf22fce50e7f3",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "user selection",
        "func": "var user = {uname: msg.payload.uname,\n            secondName: msg.payload.secondName,\n            userPass: msg.payload.userPass\n            };\n\nmsg.payload = user;\nmsg.user=user;\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 6220,
        "wires": [
            []
        ]
    },
    {
        "id": "1b6cf63ffa3af8a8",
        "type": "ui_form",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "",
        "label": "",
        "group": "da9f3525a03c70c2",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Username",
                "value": "uname",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Second Name",
                "value": "secondName",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "UserPass",
                "value": "userPass",
                "type": "password",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "uname": "",
            "secondName": "",
            "userPass": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 870,
        "y": 6220,
        "wires": [
            [
                "976bf22fce50e7f3"
            ]
        ]
    },
    {
        "id": "b3f21f5cc56409ef",
        "type": "switch",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "201",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 3910,
        "y": 3960,
        "wires": [
            [
                "d398dbb693607461",
                "e649f773b7f6afe0"
            ],
            [
                "55f3fb47121199cb"
            ],
            [
                "4f14abd12bd52e8b"
            ]
        ]
    },
    {
        "id": "b37214d2d054fda9",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "Username exists error",
        "func": "msg.payload = 'The is some error in the restriction information';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4451.999969482422,
        "y": 3999.9999742507935,
        "wires": [
            [
                "7b4544472a674083"
            ]
        ]
    },
    {
        "id": "7b4544472a674083",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Cannot create the restriction",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4711.999969482422,
        "y": 3999.9999742507935,
        "wires": [
            []
        ]
    },
    {
        "id": "4f14abd12bd52e8b",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Error",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "It has been an error",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4264,
        "y": 4042,
        "wires": [
            [
                "69889f1272ff9ee1"
            ]
        ]
    },
    {
        "id": "d398dbb693607461",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Goal created",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Weight goal created",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4189.999893188477,
        "y": 3763.999990463257,
        "wires": [
            [
                "6d8a27dde82b35ee"
            ]
        ]
    },
    {
        "id": "581aa8fc3590713f",
        "type": "comment",
        "z": "375e32b86ebbfc9f",
        "name": "ONDO EPINIIIIII TABBB",
        "info": "",
        "x": 4320,
        "y": 3820,
        "wires": []
    },
    {
        "id": "2c711b9871a0d9ed",
        "type": "ui_toast",
        "z": "375e32b86ebbfc9f",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 4987.999969482422,
        "y": 3977.9999742507935,
        "wires": []
    },
    {
        "id": "69889f1272ff9ee1",
        "type": "ui_toast",
        "z": "375e32b86ebbfc9f",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 4524,
        "y": 4042,
        "wires": []
    },
    {
        "id": "6d8a27dde82b35ee",
        "type": "ui_toast",
        "z": "375e32b86ebbfc9f",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 4439.999893188477,
        "y": 3763.999990463257,
        "wires": []
    },
    {
        "id": "e76b5d985ffe48f1",
        "type": "ui_ui_control",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "",
        "events": "all",
        "x": 4570,
        "y": 3900,
        "wires": [
            []
        ]
    },
    {
        "id": "55f3fb47121199cb",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "headers.validation-error",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Cannot create the restriction",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 3940,
        "wires": [
            [
                "2c711b9871a0d9ed",
                "7b3c58ebca8867c9"
            ]
        ]
    },
    {
        "id": "7b3c58ebca8867c9",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "debug 85",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4801.999969482422,
        "y": 3879.9999742507935,
        "wires": []
    },
    {
        "id": "8822d3edb43a3024",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "user selection",
        "func": "\nvar user = flow.get('user')||0;\nmsg.user = user;\n\n\nmsg.payload.registerDate = msg.payload.registerDate.split('T')[0];\n\nvar newGoal = {userData: user,\n            weight: msg.payload.weigth,\n            goalWeight: msg.payload.goalWeight,\n            durationToAchieveGoalWeight: msg.payload.durationToAchieveGoalWeight,\n            registerDate: msg.payload.registerDate,\n            };\nmsg.username = msg.user.username;\n\nmsg.payload = newGoal;\nmsg.newGoal = newGoal;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3160,
        "y": 3960,
        "wires": [
            [
                "63b97c3066ef85c7",
                "4b18b4863baf35c5",
                "c1676e373961953a"
            ]
        ]
    },
    {
        "id": "be0d4e971c9bdb7c",
        "type": "http request",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/weight/addWeight?username={{{username}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 3710,
        "y": 3960,
        "wires": [
            [
                "b3f21f5cc56409ef"
            ]
        ]
    },
    {
        "id": "c1676e373961953a",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\n\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3450,
        "y": 3960,
        "wires": [
            [
                "7836680c72b3b62a",
                "be0d4e971c9bdb7c"
            ]
        ]
    },
    {
        "id": "63b97c3066ef85c7",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "goal form",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3340,
        "y": 3900,
        "wires": []
    },
    {
        "id": "88456b9bfe68c48b",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "goal form",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2940,
        "y": 3920,
        "wires": []
    },
    {
        "id": "92643fe06c59f3c2",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "goal form",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3140,
        "y": 4020,
        "wires": []
    },
    {
        "id": "4b18b4863baf35c5",
        "type": "json-schema-validator",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "",
        "func": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n        \"title\": \"Weight Goals\",\n            \"description\": \"Weight goals information\",\n                \"type\": \"object\",\n                    \"properties\": {\n        \"userID\": {\n            \"description\": \"the weight of the user\",\n                \"type\": \"integer\"\n        },\n        \"weight\": {\n            \"description\": \"the weight of the user\",\n                \"type\": \"number\"\n        },\n        \"goalWeight\": {\n            \"description\": \"the goal weight of the user\",\n                \"type\": \"number\"\n        },\n        \"durationToAchieveGoalWeight\": {\n            \"description\": \"the duration to achieve goal weight\",\n                \"type\": \"integer\"\n        },\n        \"registerDate\" : {\n            \"description\": \"when the user registers the weight\",\n                \"type\": \"string\"\n        }\n\n    },\n    \"required\": [\n        \"userID\",\n        \"weight\",\n        \"goalWeight\",\n        \"durationToAchieveGoalWeight\",\n        \"registerDate\"\n    ]\n}",
        "x": 3390,
        "y": 4020,
        "wires": [
            [
                "c1676e373961953a"
            ]
        ]
    },
    {
        "id": "9c3315c271f04bdf",
        "type": "ui_form",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "label": "",
        "group": "ef2b28373168e3bf",
        "order": 3,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Weigth",
                "value": "weigth",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Goal Weigth",
                "value": "goalWeight",
                "type": "number",
                "required": false,
                "rows": null
            },
            {
                "label": "Weeks To Achieve Goal Weight",
                "value": "durationToAchieveGoalWeight",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Register Date",
                "value": "registerDate",
                "type": "date",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "weigth": "",
            "goalWeight": "",
            "durationToAchieveGoalWeight": "",
            "registerDate": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 2770,
        "y": 3960,
        "wires": [
            [
                "88456b9bfe68c48b",
                "8822d3edb43a3024",
                "92643fe06c59f3c2"
            ]
        ]
    },
    {
        "id": "7836680c72b3b62a",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "newGoal",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3580,
        "y": 3920,
        "wires": [
            [
                "be0d4e971c9bdb7c"
            ]
        ]
    },
    {
        "id": "42b9bb7fbbd6e514",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "Append to weight",
        "func": "const inp = msg.payload;\n\nvar outObj = [{\n    series: [\"Current Weight\"],\n    data: [[]],\n    labels: [\"\"]\n}]\n\nfor (let item of inp) {\n    outObj[0].data[0].push({\n        x: item.registerDate,\n        y: item.weight\n    })\n}\n\nmsg.payload = outObj;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4070,
        "y": 4340,
        "wires": [
            [
                "541810d4d0c79ae1",
                "6bba9eb1859f9c8e"
            ]
        ]
    },
    {
        "id": "7e1a7b546d03fbb9",
        "type": "http request",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/weight/weightList?username={{{username}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 3610,
        "y": 4360,
        "wires": [
            [
                "1610e6372099f0ba",
                "82448d6bd2bea334"
            ]
        ]
    },
    {
        "id": "1610e6372099f0ba",
        "type": "json",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 3790,
        "y": 4360,
        "wires": [
            [
                "42b9bb7fbbd6e514",
                "b71f3a645939140a",
                "b1dcbad183380383",
                "68957c6bf2e44927"
            ]
        ]
    },
    {
        "id": "82448d6bd2bea334",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "get goals",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3800,
        "y": 4300,
        "wires": []
    },
    {
        "id": "b71f3a645939140a",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "get goals",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4040,
        "y": 4300,
        "wires": []
    },
    {
        "id": "541810d4d0c79ae1",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "get goals",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4260,
        "y": 4280,
        "wires": []
    },
    {
        "id": "47379cd6071e6310",
        "type": "json",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 3110,
        "y": 4360,
        "wires": [
            [
                "ef37d424289e3a8e"
            ]
        ]
    },
    {
        "id": "ef37d424289e3a8e",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "Set username",
        "func": "msg.username = msg.payload.username;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3260,
        "y": 4360,
        "wires": [
            [
                "4da7eeae48f2ee94"
            ]
        ]
    },
    {
        "id": "b1dcbad183380383",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "Append to goalWeight",
        "func": "const inp = msg.payload;\n\nvar outObj = [{\n    series: [\"Goal Weight\"],\n    data: [[]],\n    labels: [\"\"]\n}]\n\nlet registerDate = 0;\nlet durationInMs = 0\n\nfor (let item of inp) {\n    registerDate = new Date(item.registerDate);\n    durationInMs = item.durationToAchieveGoalWeight * 24 * 60 * 60 * 1000;\n\n    let newDate = new Date(registerDate.getTime() + durationInMs);\n\n    outObj[0].data[0].push({\n        x: newDate.toISOString(),\n        y: item.goalWeight\n    });\n}\n\nmsg.payload = outObj;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4080,
        "y": 4400,
        "wires": [
            [
                "187b955a7444b628"
            ]
        ]
    },
    {
        "id": "4da7eeae48f2ee94",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\n\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3450,
        "y": 4360,
        "wires": [
            [
                "7e1a7b546d03fbb9"
            ]
        ]
    },
    {
        "id": "ba99e8f94aa423c8",
        "type": "link in",
        "z": "375e32b86ebbfc9f",
        "name": "Weight link in",
        "links": [
            "95d80e5db9f7225b"
        ],
        "x": 2765,
        "y": 4360,
        "wires": [
            [
                "08eb39aa4e7cbe98"
            ]
        ]
    },
    {
        "id": "08eb39aa4e7cbe98",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "user",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2920,
        "y": 4360,
        "wires": [
            [
                "47379cd6071e6310"
            ]
        ]
    },
    {
        "id": "ee58d3227f5f0967",
        "type": "http request",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://127.0.0.1:5000/intake_prediction",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 4690,
        "y": 4340,
        "wires": [
            [
                "e3f20cdd667cadb7"
            ]
        ]
    },
    {
        "id": "e3f20cdd667cadb7",
        "type": "json",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 4870,
        "y": 4339,
        "wires": [
            [
                "356096182a25d988"
            ]
        ]
    },
    {
        "id": "ecfc08da0aa5c04e",
        "type": "link out",
        "z": "375e32b86ebbfc9f",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "8df44d1eda8c2d38"
        ],
        "x": 5575,
        "y": 4340,
        "wires": []
    },
    {
        "id": "320b028f07111cdf",
        "type": "http request",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/user/modifyCalorieIntake?userID={{userID}}&finalDailyCalorieIntake={{finalDailyCalorieIntake}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 5450,
        "y": 4340,
        "wires": [
            [
                "ecfc08da0aa5c04e"
            ]
        ]
    },
    {
        "id": "68957c6bf2e44927",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload.userID",
                "pt": "msg",
                "to": "user.userID",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4480,
        "y": 4340,
        "wires": [
            [
                "ee58d3227f5f0967"
            ]
        ]
    },
    {
        "id": "356096182a25d988",
        "type": "change",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "finalDailyCalorieIntake",
                "pt": "msg",
                "to": "payload.calorie_prediction",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "userID",
                "pt": "msg",
                "to": "user.userID",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 5060,
        "y": 4340,
        "wires": [
            [
                "f61779e58e4b69bf"
            ]
        ]
    },
    {
        "id": "f61779e58e4b69bf",
        "type": "function",
        "z": "375e32b86ebbfc9f",
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\n\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 5270,
        "y": 4340,
        "wires": [
            [
                "320b028f07111cdf"
            ]
        ]
    },
    {
        "id": "6bba9eb1859f9c8e",
        "type": "ui_chart",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "group": "fbcef1f4da0267ba",
        "order": 6,
        "width": 0,
        "height": 0,
        "label": "Weight chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "D/M",
        "interpolate": "linear",
        "nodata": "No data available",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 4350,
        "y": 4380,
        "wires": [
            []
        ]
    },
    {
        "id": "187b955a7444b628",
        "type": "ui_chart",
        "z": "375e32b86ebbfc9f",
        "name": "",
        "group": "fbcef1f4da0267ba",
        "order": 6,
        "width": 0,
        "height": 0,
        "label": "Goal weight chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "D/M",
        "interpolate": "linear",
        "nodata": "No Data Available",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 4290,
        "y": 4440,
        "wires": [
            []
        ]
    },
    {
        "id": "e649f773b7f6afe0",
        "type": "link out",
        "z": "375e32b86ebbfc9f",
        "name": "Goals link out",
        "mode": "link",
        "links": [
            "005b650fb54c6450"
        ],
        "x": 4165,
        "y": 3880,
        "wires": []
    },
    {
        "id": "005b650fb54c6450",
        "type": "link in",
        "z": "375e32b86ebbfc9f",
        "name": "Goals link in",
        "links": [
            "e649f773b7f6afe0"
        ],
        "x": 3265,
        "y": 4260,
        "wires": [
            [
                "4da7eeae48f2ee94"
            ]
        ]
    },
    {
        "id": "c89bcec79252131c",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "debug 86",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 6180,
        "wires": []
    },
    {
        "id": "bd78c6e1b6f4e642",
        "type": "debug",
        "z": "375e32b86ebbfc9f",
        "name": "debug 87",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 6020,
        "wires": []
    },
    {
        "id": "6dfd057cd7e1763d",
        "type": "ui_spacer",
        "z": "375e32b86ebbfc9f",
        "name": "spacer",
        "group": "7127bbab4a3a89c1",
        "order": 3,
        "width": 6,
        "height": 1
    },
    {
        "id": "cfe3cd0f731385c3",
        "type": "ui_spacer",
        "z": "375e32b86ebbfc9f",
        "name": "spacer",
        "group": "e46c2e252591103a",
        "order": 1,
        "width": 6,
        "height": 1
    },
    {
        "id": "4278320bcdfef02d",
        "type": "ui_spacer",
        "z": "375e32b86ebbfc9f",
        "name": "spacer",
        "group": "e46c2e252591103a",
        "order": 4,
        "width": 6,
        "height": 1
    },
    {
        "id": "e401741267bbd2ac",
        "type": "ui_spacer",
        "z": "375e32b86ebbfc9f",
        "name": "spacer",
        "group": "e46c2e252591103a",
        "order": 8,
        "width": 6,
        "height": 1
    },
    {
        "id": "5a4e9ee176fff7e8",
        "type": "ui_spacer",
        "z": "375e32b86ebbfc9f",
        "name": "spacer",
        "group": "e46c2e252591103a",
        "order": 9,
        "width": 6,
        "height": 1
    },
    {
        "id": "16b4e65711ac7dea",
        "type": "ui_spacer",
        "z": "375e32b86ebbfc9f",
        "name": "spacer",
        "group": "c9d552d2c48880b0",
        "order": 3,
        "width": 6,
        "height": 1
    },
    {
        "id": "e541a6b69dcb3103",
        "type": "ui_spacer",
        "z": "375e32b86ebbfc9f",
        "name": "spacer",
        "group": "c9d552d2c48880b0",
        "order": 9,
        "width": 6,
        "height": 1
    },
    {
        "id": "dd111ec3030a9440",
        "type": "ui_spacer",
        "z": "375e32b86ebbfc9f",
        "name": "spacer",
        "group": "c05c0b31021a06c7",
        "order": 1,
        "width": 6,
        "height": 1
    },
    {
        "id": "c3d64ac9c63d5a12",
        "type": "ui_spacer",
        "z": "375e32b86ebbfc9f",
        "name": "spacer",
        "group": "0a5b59bc61df2e50",
        "order": 6,
        "width": 6,
        "height": 1
    },
    {
        "id": "128b80b70b1ee3c7",
        "type": "ui_spacer",
        "z": "375e32b86ebbfc9f",
        "name": "spacer",
        "group": "a183720441c2ef16",
        "order": 1,
        "width": 13,
        "height": 1
    },
    {
        "id": "90723e692323a8c9",
        "type": "ui_group",
        "name": "Image",
        "tab": "5f2b2507734ce481",
        "order": 1,
        "disp": true,
        "width": 16,
        "collapse": false,
        "className": ""
    },
    {
        "id": "a183720441c2ef16",
        "type": "ui_group",
        "name": "Current users",
        "tab": "29ca7a7793636547",
        "order": 1,
        "disp": true,
        "width": "13",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c6cd645fd4877ad7",
        "type": "ui_group",
        "name": "General data",
        "tab": "ebbb177113d25472",
        "order": 1,
        "disp": true,
        "width": 7,
        "collapse": false,
        "className": ""
    },
    {
        "id": "bbfc23942af32973",
        "type": "ui_group",
        "name": "Water group",
        "tab": "953137ae19ed7cad",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "fbcef1f4da0267ba",
        "type": "ui_group",
        "name": "graphic",
        "tab": "358bced279b3e120",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0efaaecc7e2e0e44",
        "type": "ui_group",
        "name": "login",
        "tab": "7a5a7de9a0f118fa",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c05c0b31021a06c7",
        "type": "ui_group",
        "name": "Form",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0a5b59bc61df2e50",
        "type": "ui_group",
        "name": "information",
        "tab": "d05cb1c0e6877605",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ab4e89ea65e8afe2",
        "type": "ui_group",
        "name": "Function",
        "tab": "14ab3ba17e8a6109",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "da9f3525a03c70c2",
        "type": "ui_group",
        "name": "Modify form",
        "tab": "77e58d25fdd4f36a",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d40f0e8b58a25673",
        "type": "ui_group",
        "name": "Food form",
        "tab": "3ce5fb0fe297c4cf",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ef2b28373168e3bf",
        "type": "ui_group",
        "name": "info",
        "tab": "358bced279b3e120",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "97c37c0a574d34dc",
        "type": "ui_group",
        "name": "verification",
        "tab": "fb6480fccf8df15a",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e46c2e252591103a",
        "type": "ui_group",
        "name": "Calorie and macros",
        "tab": "953137ae19ed7cad",
        "order": 1,
        "disp": false,
        "width": "18",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a55d8688f1fda0f7",
        "type": "ui_group",
        "name": "form",
        "tab": "85badbe0c87d579c",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "cd2ab2fb7c79e044",
        "type": "ui_group",
        "name": "Ingredients",
        "tab": "5df5f4583ffbfa54",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "759cf967336acda0",
        "type": "ui_group",
        "name": "Current users",
        "tab": "b833f23360ea7c6f",
        "order": 1,
        "disp": true,
        "width": 13,
        "collapse": false,
        "className": ""
    },
    {
        "id": "7127bbab4a3a89c1",
        "type": "ui_group",
        "name": "restrictions",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c9d552d2c48880b0",
        "type": "ui_group",
        "name": "information",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5f2b2507734ce481",
        "type": "ui_tab",
        "name": "Image upload",
        "icon": "dashboard",
        "order": 14,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "29ca7a7793636547",
        "type": "ui_tab",
        "name": "Get users and delete user",
        "icon": "dashboard",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ebbb177113d25472",
        "type": "ui_tab",
        "name": "Initialize user",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "953137ae19ed7cad",
        "type": "ui_tab",
        "name": "Main page",
        "icon": "dashboard",
        "order": 11,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "358bced279b3e120",
        "type": "ui_tab",
        "name": "Weigth",
        "icon": "dashboard",
        "order": 31,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7a5a7de9a0f118fa",
        "type": "ui_tab",
        "name": "Login",
        "icon": "dashboard",
        "order": 30,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d05cb1c0e6877605",
        "type": "ui_tab",
        "name": "Restrictions",
        "icon": "dashboard",
        "order": 41,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "14ab3ba17e8a6109",
        "type": "ui_tab",
        "name": "Create user",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "77e58d25fdd4f36a",
        "type": "ui_tab",
        "name": "Modify user",
        "icon": "dashboard",
        "order": 9,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "3ce5fb0fe297c4cf",
        "type": "ui_tab",
        "name": "Food tab",
        "icon": "dashboard",
        "order": 13,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "fb6480fccf8df15a",
        "type": "ui_tab",
        "name": "Email verification",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "85badbe0c87d579c",
        "type": "ui_tab",
        "name": "campaign",
        "icon": "dashboard",
        "order": 41,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "5df5f4583ffbfa54",
        "type": "ui_tab",
        "name": "campaignIngredient",
        "icon": "dashboard",
        "order": 42,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b833f23360ea7c6f",
        "type": "ui_tab",
        "name": "Get users and delete user",
        "icon": "dashboard",
        "order": 13,
        "disabled": true,
        "hidden": false
    }
]