[
    {
        "id": "fe7a71b98f4f9781",
        "type": "tab",
        "label": "Node-red_21/01/2025",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9c3528d41ce6642a",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "User created",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "user",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 7100,
        "y": 40,
        "wires": [
            [
                "15209e2f088c9815"
            ]
        ]
    },
    {
        "id": "f43a8a83b761ff0d",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "user selection",
        "func": "var userGender = flow.get('user.gender') || 0;\nvar activityLevel = flow.get('user.activityLevel') || 0;\nvar premium = flow.get('user.premium') || 0;\nvar userObjective = flow.get('user.objective') || 0;\n\n\nvar user = {uname: msg.payload.uname,\n            secondName: msg.payload.secondName,\n            gender: userGender,\n            age: msg.payload.age,\n            height: msg.payload.height,\n            username: msg.payload.username,\n            email: msg.payload.email,\n            userPass: msg.payload.userPass,\n            activityLevel: activityLevel,\n            premium: premium,\n            objective: userObjective,\n            neck: msg.payload.neck,\n            waist: msg.payload.waist,\n            hips: msg.payload.hips\n            };\n\nmsg.payload = user;\nflow.set('user', user);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 400,
        "wires": [
            [
                "b4f02da876e8fd5d"
            ]
        ]
    },
    {
        "id": "c2425e8057523c42",
        "type": "http request",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/register",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 650,
        "y": 400,
        "wires": [
            [
                "17d05b39d10ef619",
                "e0af13b200829124"
            ]
        ]
    },
    {
        "id": "b4f02da876e8fd5d",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 400,
        "wires": [
            [
                "c2425e8057523c42"
            ]
        ]
    },
    {
        "id": "17d05b39d10ef619",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "mypost",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 560,
        "wires": []
    },
    {
        "id": "ac95a08f5ac58eb3",
        "type": "switch",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "201",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1730,
        "y": 720,
        "wires": [
            [
                "e2b9b7f1c7133c30",
                "68cc1620b0ce71ec"
            ],
            [
                "31bd0f429b5250eb"
            ],
            [
                "b4f8e9df1fcfc3dc"
            ]
        ]
    },
    {
        "id": "31bd0f429b5250eb",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "Username exists error",
        "func": "msg.payload = 'The username does exist: ' + msg.user;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2040,
        "y": 720,
        "wires": [
            [
                "93c7d4dcc90ace45"
            ]
        ]
    },
    {
        "id": "2baec2c4b43519e4",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "mysitepost",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1318.0000305175781,
        "y": 2620.0000257492065,
        "wires": []
    },
    {
        "id": "e2b9b7f1c7133c30",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "username",
                "pt": "msg",
                "to": "user.username",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Login",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1993,
        "y": 655,
        "wires": [
            [
                "9577f47a1af083b3"
            ]
        ]
    },
    {
        "id": "93c7d4dcc90ace45",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Cannot create user",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2320,
        "y": 720,
        "wires": [
            [
                "dcee8eb5f9718b87"
            ]
        ]
    },
    {
        "id": "b4f8e9df1fcfc3dc",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Error",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "It has been an error",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2020,
        "y": 780,
        "wires": [
            [
                "bd3166e10b0c7e09"
            ]
        ]
    },
    {
        "id": "e62cb638f70bba9e",
        "type": "comment",
        "z": "fe7a71b98f4f9781",
        "name": "Create user (POST)",
        "info": "",
        "x": 150,
        "y": 520,
        "wires": []
    },
    {
        "id": "8671d344dfcd0536",
        "type": "http request",
        "z": "fe7a71b98f4f9781",
        "name": "Get all ",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "body",
        "url": "http://localhost:8080/user/show",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 610,
        "y": 5700,
        "wires": [
            [
                "d861e6287664d5ac"
            ]
        ]
    },
    {
        "id": "53c57db9ddb18bcd",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "debug 11",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 5700,
        "wires": []
    },
    {
        "id": "d861e6287664d5ac",
        "type": "json",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": true,
        "x": 770,
        "y": 5700,
        "wires": [
            [
                "53c57db9ddb18bcd",
                "3d4ffbedf4526625"
            ]
        ]
    },
    {
        "id": "7548a1ce70141db9",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 5700,
        "wires": [
            [
                "8671d344dfcd0536"
            ]
        ]
    },
    {
        "id": "92349546c84299d8",
        "type": "comment",
        "z": "fe7a71b98f4f9781",
        "name": "Get users (GET)",
        "info": "",
        "x": 300,
        "y": 5640,
        "wires": []
    },
    {
        "id": "9028304ae3c28b8d",
        "type": "http response",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1410,
        "y": 5820,
        "wires": []
    },
    {
        "id": "dedded9503721230",
        "type": "http request",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "method": "DELETE",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/user/delete/{{{id}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1240,
        "y": 5820,
        "wires": [
            [
                "9028304ae3c28b8d"
            ]
        ]
    },
    {
        "id": "32d8e085dc7ca062",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "mydelete",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1220,
        "y": 5860,
        "wires": []
    },
    {
        "id": "faf8c7366ce5e680",
        "type": "comment",
        "z": "fe7a71b98f4f9781",
        "name": "Delete current user (DELETE)",
        "info": "",
        "x": 320,
        "y": 5780,
        "wires": []
    },
    {
        "id": "f3338a39b54302fe",
        "type": "http request",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/user/usersByUsername?username={{{username}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 670,
        "y": 5860,
        "wires": [
            [
                "0d8aa609f55f0f64"
            ]
        ]
    },
    {
        "id": "2fc9bea3c6b8ca3e",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "username",
                "pt": "msg",
                "to": "username",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 5860,
        "wires": [
            [
                "f3338a39b54302fe"
            ]
        ]
    },
    {
        "id": "0d8aa609f55f0f64",
        "type": "json",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 810,
        "y": 5860,
        "wires": [
            [
                "1720858e5e724b8c"
            ]
        ]
    },
    {
        "id": "1720858e5e724b8c",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "id",
                "pt": "msg",
                "to": "payload.userID",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "user.id",
                "pt": "flow",
                "to": "payload.userID",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 5860,
        "wires": [
            [
                "dedded9503721230",
                "32d8e085dc7ca062",
                "90e5360b4a90f741"
            ]
        ]
    },
    {
        "id": "94407f6c30f54cc8",
        "type": "http response",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2130,
        "y": 5980,
        "wires": []
    },
    {
        "id": "fd536822245ad28e",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "change username",
        "func": "msg.payload.username = msg.newUsername;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 6040,
        "wires": [
            [
                "fb5c8f58c33c59c0"
            ]
        ]
    },
    {
        "id": "9900f3606223110f",
        "type": "http request",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/user/modify/{{{id}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1930,
        "y": 6040,
        "wires": [
            [
                "94407f6c30f54cc8",
                "dab3c0403f9d05df"
            ]
        ]
    },
    {
        "id": "fb5c8f58c33c59c0",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 6040,
        "wires": [
            [
                "9900f3606223110f"
            ]
        ]
    },
    {
        "id": "9e0c4d684ab2f0a8",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "id",
                "pt": "msg",
                "to": "payload.userID",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "user.id",
                "pt": "flow",
                "to": "payload.userID",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1340,
        "y": 6040,
        "wires": [
            [
                "fd536822245ad28e"
            ]
        ]
    },
    {
        "id": "5e018de9c6d40c09",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "mypost",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1320,
        "y": 6120,
        "wires": []
    },
    {
        "id": "26054c991c1a6af0",
        "type": "http request",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/user/usersByUsername?username={{{username}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1030,
        "y": 6080,
        "wires": [
            [
                "13315c7cd409a5e2",
                "dea9c89029b04807"
            ]
        ]
    },
    {
        "id": "693de6c745fca568",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "newUsername",
                "pt": "msg",
                "to": "payload.username",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "username",
                "pt": "msg",
                "to": "user.username",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "username",
                "pt": "flow",
                "to": "newUsername",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 6080,
        "wires": [
            [
                "26054c991c1a6af0",
                "2759bf1327bb7578"
            ]
        ]
    },
    {
        "id": "13315c7cd409a5e2",
        "type": "json",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1170,
        "y": 6080,
        "wires": [
            [
                "9e0c4d684ab2f0a8",
                "5e018de9c6d40c09"
            ]
        ]
    },
    {
        "id": "dd754686063bf7f8",
        "type": "comment",
        "z": "fe7a71b98f4f9781",
        "name": "Change Username",
        "info": "",
        "x": 530,
        "y": 5980,
        "wires": []
    },
    {
        "id": "f5fdff5e3150fa91",
        "type": "comment",
        "z": "fe7a71b98f4f9781",
        "name": "Modify current user (PUT)",
        "info": "",
        "x": 310,
        "y": 5980,
        "wires": []
    },
    {
        "id": "4cdc39b73a7c7fc8",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "user selection",
        "func": "var user = {uname: msg.payload.uname,\n            secondName: msg.payload.secondName,\n            userPass: msg.payload.userPass\n            };\n\nmsg.payload = user;\nmsg.user=user;\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 6080,
        "wires": [
            [
                "693de6c745fca568"
            ]
        ]
    },
    {
        "id": "14a3889ff3e8b6a5",
        "type": "comment",
        "z": "fe7a71b98f4f9781",
        "name": "\"No response object\"",
        "info": "",
        "x": 1460,
        "y": 5780,
        "wires": []
    },
    {
        "id": "68cc1620b0ce71ec",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "User counter",
        "func": "let contador = global.get(\"userCount\") || 0;\n\n//contador = 0;\ncontador += 1;\n\nglobal.set(\"userCount\", contador);\n\n/*msg.counter = {\n    userCount: contador\n};*/\nmsg.payload = contador;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1990,
        "y": 600,
        "wires": [
            [
                "be79f7ef6b26e424"
            ]
        ]
    },
    {
        "id": "90e5360b4a90f741",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "User deleted",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "user",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 5920,
        "wires": [
            [
                "03757ccfe5a8a128"
            ]
        ]
    },
    {
        "id": "dab3c0403f9d05df",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "User modified",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "user",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2120,
        "y": 6080,
        "wires": [
            [
                "30a2e1c62391e5d0"
            ]
        ]
    },
    {
        "id": "57f843c5bb777c0a",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "user.gender",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "a14b7702963a5216",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "user.activityLevel",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "2dbd40741bd2d404",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "user.premium",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "4267a3f410204199",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "user.objective",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "704498d8a760ba70",
        "type": "comment",
        "z": "fe7a71b98f4f9781",
        "name": "Main page",
        "info": "",
        "x": 200,
        "y": 4460,
        "wires": []
    },
    {
        "id": "ba7039467620a3bd",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "User created",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "user",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1480,
        "y": 5120,
        "wires": [
            [
                "19cb28cc75573358"
            ]
        ]
    },
    {
        "id": "99bd75727f141542",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "food selection",
        "func": "var food = {foodName: msg.payload.foodName,\n            proteins: msg.payload.proteins,\n            carbs: msg.payload.carbs,\n            fats: msg.payload.fats,\n            fiber: msg.payload.fiber\n            };\n\nmsg.payload = food;\nmsg.user = food;\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 5220,
        "wires": [
            [
                "fbdbc2f833e60a38",
                "e3dd8c3a62728932"
            ]
        ]
    },
    {
        "id": "fbdbc2f833e60a38",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "Food to send",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 5160,
        "wires": []
    },
    {
        "id": "63d3f7eab338a489",
        "type": "http request",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/food/add",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 830,
        "y": 5280,
        "wires": [
            [
                "9316a82722d9720b",
                "8a4db6e490bac074"
            ]
        ]
    },
    {
        "id": "b87e79ad44e5b3c5",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 5280,
        "wires": [
            [
                "63d3f7eab338a489"
            ]
        ]
    },
    {
        "id": "9316a82722d9720b",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "foodPost",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 5360,
        "wires": []
    },
    {
        "id": "8a4db6e490bac074",
        "type": "switch",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "201",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1010,
        "y": 5280,
        "wires": [
            [
                "587a414f5547f17b"
            ],
            [
                "e14d3c8db9a0264c"
            ],
            [
                "feaaa5722d991a46"
            ]
        ]
    },
    {
        "id": "ddb383d8a7707770",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1430,
        "y": 5260,
        "wires": []
    },
    {
        "id": "e14d3c8db9a0264c",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "Food exists error",
        "func": "msg.payload = 'The food does exist: ' + msg.user;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 5300,
        "wires": [
            [
                "ddb383d8a7707770",
                "bad7c52473ca3837"
            ]
        ]
    },
    {
        "id": "d03e94fd7d265db6",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "mysitepost",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1470,
        "y": 5200,
        "wires": []
    },
    {
        "id": "587a414f5547f17b",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "username",
                "pt": "flow",
                "to": "user.username",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 5160,
        "wires": [
            [
                "d03e94fd7d265db6",
                "ba7039467620a3bd"
            ]
        ]
    },
    {
        "id": "bad7c52473ca3837",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Cannot create user",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1450,
        "y": 5340,
        "wires": [
            [
                "e7929e0d35b8087a"
            ]
        ]
    },
    {
        "id": "feaaa5722d991a46",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Error",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "It has been an error",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 5400,
        "wires": [
            [
                "a728e3d04d0be64e"
            ]
        ]
    },
    {
        "id": "e86a2818ecce30cb",
        "type": "comment",
        "z": "fe7a71b98f4f9781",
        "name": "Create food (POST)",
        "info": "",
        "x": 250,
        "y": 5160,
        "wires": []
    },
    {
        "id": "8c14f8420ae74062",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "dynamic max and min",
        "func": "var max = msg.proteins;\nvar min = 0;\nvar curPayload = Math.round(msg.payload.totalProteins);\nmsg = {\n    ui_control:{min:min,max:max},\n    payload: curPayload\n    };\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 4540,
        "wires": [
            [
                "b82a5aa21f5b3915"
            ]
        ]
    },
    {
        "id": "5837d7c7b3e73645",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "User logged",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "user",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2180,
        "y": 1080,
        "wires": [
            [
                "5bc73fa9db1dc5be"
            ]
        ]
    },
    {
        "id": "9b7a458004991aa3",
        "type": "http request",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/login/auth",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 810,
        "y": 1260,
        "wires": [
            [
                "c9833d973b6a047b",
                "de571de443a14f66",
                "115631b0920ac1b1"
            ]
        ]
    },
    {
        "id": "b4c9b338d20a4d4f",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 1260,
        "wires": [
            [
                "9b7a458004991aa3"
            ]
        ]
    },
    {
        "id": "115631b0920ac1b1",
        "type": "switch",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1070,
        "y": 1259,
        "wires": [
            [
                "631c7809eb829fdc"
            ],
            [
                "e8227ed59e06ee13"
            ],
            [
                "37e1a7b62f16e5e0"
            ]
        ]
    },
    {
        "id": "5dac4d33e2661274",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1750,
        "y": 1300,
        "wires": []
    },
    {
        "id": "e8227ed59e06ee13",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "Username exists error",
        "func": "msg.payload = 'The username does exist: ' + msg.user;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 1320,
        "wires": [
            [
                "5dac4d33e2661274",
                "75b0af5ca61fc19e"
            ]
        ]
    },
    {
        "id": "75b0af5ca61fc19e",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Cannot create user",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1770,
        "y": 1340,
        "wires": [
            [
                "78996277153ed857"
            ]
        ]
    },
    {
        "id": "37e1a7b62f16e5e0",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Error",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "It has been an error",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1520,
        "y": 1400,
        "wires": [
            [
                "3ea7623b11a27ee4"
            ]
        ]
    },
    {
        "id": "d9bf7fc2b426deaa",
        "type": "comment",
        "z": "fe7a71b98f4f9781",
        "name": "Login",
        "info": "",
        "x": 150,
        "y": 1120,
        "wires": []
    },
    {
        "id": "041c0c46300dc733",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "user",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "username",
                "pt": "msg",
                "to": "payload.username",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "userPass",
                "pt": "msg",
                "to": "payload.userPass",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 1260,
        "wires": [
            [
                "d6485e479b72b6e2"
            ]
        ]
    },
    {
        "id": "caa2de5d26abea79",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "mypost",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 1300,
        "wires": []
    },
    {
        "id": "0987fb86f3de8445",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "user selection",
        "func": "\nvar user = flow.get('user')||0;\nmsg.user = user;\n\n\nmsg.payload.registerDate = msg.payload.registerDate.split('T')[0];\n\nvar newGoal = {userData: user,\n            weight: msg.payload.weigth,\n            goalWeight: msg.payload.goalWeight,\n            durationToAchieveGoalWeight: msg.payload.durationToAchieveGoalWeight,\n            registerDate: msg.payload.registerDate,\n            };\nmsg.username = msg.user.username;\n\nmsg.payload = newGoal;\nmsg.newGoal = newGoal;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 3800,
        "wires": [
            [
                "3fc9c9667e1a682f",
                "ced3a6e4a87fc41c",
                "ab7935481ee66f8c"
            ]
        ]
    },
    {
        "id": "63e4ec3b59ede638",
        "type": "http request",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/weight/weightList?username={{{username}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1570,
        "y": 3800,
        "wires": [
            [
                "7717fe45c53adfce"
            ]
        ]
    },
    {
        "id": "f446fd95bb57b126",
        "type": "http request",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/weight/addWeight?username={{{username}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1230,
        "y": 3800,
        "wires": [
            [
                "55e99fdfe474a3e5",
                "02a8ec89ef843887",
                "0ca2c21297c306e2"
            ]
        ]
    },
    {
        "id": "ab7935481ee66f8c",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\n\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 3800,
        "wires": [
            [
                "5b8130cfdc3cf506",
                "f446fd95bb57b126"
            ]
        ]
    },
    {
        "id": "3fc9c9667e1a682f",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "goal form",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 3740,
        "wires": []
    },
    {
        "id": "48b310b44be9c861",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "goal form",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 3760,
        "wires": []
    },
    {
        "id": "83d994751d0b1db3",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "goal form",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 3860,
        "wires": []
    },
    {
        "id": "7717fe45c53adfce",
        "type": "json",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1730,
        "y": 3800,
        "wires": [
            [
                "fd387a873d0bc980",
                "9216a9a7ecd513d9",
                "79835b9765cac260"
            ]
        ]
    },
    {
        "id": "fd387a873d0bc980",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "get goals",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1860,
        "y": 3920,
        "wires": []
    },
    {
        "id": "4bbc8764dfb1b5fd",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "Append to weight",
        "func": "const inp = msg.payload;\n\nvar outObj = [{\n    series: [\"Current Weight\"],\n    data: [[]],\n    labels: [\"\"]\n}]\n\nfor (let item of inp) {\n    outObj[0].data[0].push({\n        x: item.registerDate,\n        y: item.weight\n    })\n}\n\nmsg.payload = outObj;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1470,
        "y": 4200,
        "wires": [
            [
                "021ba538237cbc16",
                "a6bff90619422a96"
            ]
        ]
    },
    {
        "id": "25f00701c0ac2e19",
        "type": "http request",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/weight/weightList?username={{{username}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1010,
        "y": 4220,
        "wires": [
            [
                "046d990086b96db9",
                "75defe8df357dbb7"
            ]
        ]
    },
    {
        "id": "046d990086b96db9",
        "type": "json",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1190,
        "y": 4220,
        "wires": [
            [
                "4bbc8764dfb1b5fd",
                "36a847129bc334a7",
                "715080d24ed89906",
                "02a8ec89ef843887"
            ]
        ]
    },
    {
        "id": "75defe8df357dbb7",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "get goals",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 4160,
        "wires": []
    },
    {
        "id": "36a847129bc334a7",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "get goals",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1440,
        "y": 4160,
        "wires": []
    },
    {
        "id": "021ba538237cbc16",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "get goals",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1660,
        "y": 4140,
        "wires": []
    },
    {
        "id": "61a3487157a84aed",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "function 34",
        "func": "var user = flow.get('user') || 0;\nmsg.payload = user;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 4320,
        "wires": [
            [
                "c7b6301a67df06ce"
            ]
        ]
    },
    {
        "id": "c7b6301a67df06ce",
        "type": "json",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 510,
        "y": 4220,
        "wires": [
            [
                "9e8ede2ca365ad82"
            ]
        ]
    },
    {
        "id": "9e8ede2ca365ad82",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "Set username",
        "func": "msg.username = msg.payload.username;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 4220,
        "wires": [
            [
                "9a9178976f9d9460"
            ]
        ]
    },
    {
        "id": "715080d24ed89906",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "Append to goalWeight",
        "func": "const inp = msg.payload;\n\nvar outObj = [{\n    series: [\"Goal Weight\"],\n    data: [[]],\n    labels: [\"\"]\n}]\n\nlet registerDate = 0;\nlet durationInMs = 0\n\nfor (let item of inp) {\n    registerDate = new Date(item.registerDate);\n    durationInMs = item.durationToAchieveGoalWeight * 24 * 60 * 60 * 1000;\n\n    let newDate = new Date(registerDate.getTime() + durationInMs);\n\n    outObj[0].data[0].push({\n        x: newDate.toISOString(),\n        y: item.goalWeight\n    });\n}\n\nmsg.payload = outObj;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1480,
        "y": 4260,
        "wires": [
            [
                "3db54f2f7548e76d"
            ]
        ]
    },
    {
        "id": "277a3ae80b26ac28",
        "type": "comment",
        "z": "fe7a71b98f4f9781",
        "name": "Admin or User",
        "info": "",
        "x": 1570,
        "y": 1080,
        "wires": []
    },
    {
        "id": "a347e169ae8d606b",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "dynamic max and min",
        "func": "var max = msg.carbs;\nvar min = 0;\nvar curPayload = Math.round(msg.payload.totalCarbs);\nmsg = {\n    ui_control:{min:min,max:max},\n    payload: curPayload\n    };\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 4580,
        "wires": [
            [
                "dbc37d43e4dd5ef1"
            ]
        ]
    },
    {
        "id": "5abfee585a61a81d",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "dynamic max and min",
        "func": "var max = msg.fats;\nvar min = 0;\nvar curPayload = Math.round(msg.payload.totalFats);\nmsg = {\n    ui_control:{min:min,max:max},\n    payload: curPayload\n    };\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 4620,
        "wires": [
            [
                "60e2301f33728d7d"
            ]
        ]
    },
    {
        "id": "2657bbd04f198dbb",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "dynamic max and min",
        "func": "var max = msg.fibers;\nvar min = 0;\nvar curPayload = Math.round(msg.payload.totalFiber);\nmsg = {\n    ui_control:{min:min,max:max},\n    payload: curPayload\n    };\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 4660,
        "wires": [
            [
                "9914d2965459b49b"
            ]
        ]
    },
    {
        "id": "d6485e479b72b6e2",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "user login",
        "func": "var loggedUser = {username: msg.username,\n            userpass: msg.userPass,\n            };\n\nmsg.payload = loggedUser;\nmsg.loggedUser = loggedUser;\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 1260,
        "wires": [
            [
                "b4c9b338d20a4d4f",
                "caa2de5d26abea79"
            ]
        ]
    },
    {
        "id": "c9833d973b6a047b",
        "type": "json",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 970,
        "y": 1179,
        "wires": [
            [
                "115631b0920ac1b1"
            ]
        ]
    },
    {
        "id": "7e93aff0a76c1774",
        "type": "switch",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "property": "payload.role",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "USER",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1310,
        "y": 1200,
        "wires": [
            [
                "2da18fe88540138a",
                "075ac9fcc0791bb6",
                "0c50a2238b737c73"
            ],
            [
                "059e2d202d12be29"
            ]
        ]
    },
    {
        "id": "2da18fe88540138a",
        "type": "template",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\"tabs\": {\"hide\": \"Get users and delete user\", \"disable\": \"Get users and delete user\"}}",
        "output": "json",
        "x": 1460,
        "y": 1000,
        "wires": [
            [
                "05145a9c3b1648d5"
            ]
        ]
    },
    {
        "id": "0c50a2238b737c73",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "Token timeout",
        "func": "// Target date and time (ISO 8601 format)\nconst targetTime = new Date(msg.payload.timeout);\n\n// Current time\nconst now = new Date();\n\n// Calculate the delay in milliseconds\nconst delay = targetTime.getTime() - now.getTime(); // Use .getTime() to get the numeric timestamp\n\nif (delay > 0) {\n    msg.delay = delay; // Set the delay for the next node\n    return msg;\n} else {\n    // If the target time has already passed\n    node.warn(\"The target date and time has already passed.\");\n    return null; // Stop the flow\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1440,
        "y": 940,
        "wires": [
            [
                "32ffb49c64e4b708",
                "99ec33ecfcc44b07"
            ]
        ]
    },
    {
        "id": "32ffb49c64e4b708",
        "type": "delay",
        "z": "fe7a71b98f4f9781",
        "name": "Wait until token timeout",
        "pauseType": "delayv",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1670,
        "y": 940,
        "wires": [
            [
                "86797e603b52af47"
            ]
        ]
    },
    {
        "id": "99ec33ecfcc44b07",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "TIMEOUT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1440,
        "y": 880,
        "wires": []
    },
    {
        "id": "86797e603b52af47",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "Back to login",
        "func": "msg.payload = \"Login\";\nflow.set('token', null)\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1890,
        "y": 940,
        "wires": [
            [
                "09c68b5f74345729"
            ]
        ]
    },
    {
        "id": "1de3295faaf57d91",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "Go to initialize user",
        "func": "msg.payload = \"Initialize user\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1180,
        "wires": [
            [
                "56214413efb298a9"
            ]
        ]
    },
    {
        "id": "f77cbafe33a4d7c6",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "Debug 16",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 300,
        "y": 1300,
        "wires": []
    },
    {
        "id": "55e99fdfe474a3e5",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\n\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 3800,
        "wires": [
            [
                "63e4ec3b59ede638"
            ]
        ]
    },
    {
        "id": "075ac9fcc0791bb6",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nmsg.headers['Authorization'] = `Bearer ${msg.payload.token}`;\nflow.set('token', msg.payload.token);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 1140,
        "wires": [
            [
                "283fe6f3778719d0"
            ]
        ]
    },
    {
        "id": "059e2d202d12be29",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nmsg.headers['Authorization'] = `Bearer ${msg.payload.token}`;\nflow.set('token', msg.payload.token);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 1240,
        "wires": [
            [
                "bcc5d589df58bcbc"
            ]
        ]
    },
    {
        "id": "283fe6f3778719d0",
        "type": "http request",
        "z": "fe7a71b98f4f9781",
        "name": "Get user",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "body",
        "url": "http://localhost:8080/user/usersByUsername?username={{{username}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1660,
        "y": 1140,
        "wires": [
            [
                "1f6f348e802dd64d",
                "29e97dcd672a3c7b"
            ]
        ]
    },
    {
        "id": "1f6f348e802dd64d",
        "type": "json",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": true,
        "x": 1810,
        "y": 1140,
        "wires": [
            [
                "33e97cd1470845bc"
            ]
        ]
    },
    {
        "id": "33e97cd1470845bc",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "user.username",
                "pt": "flow",
                "to": "username",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "user",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "user",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1980,
        "y": 1140,
        "wires": [
            [
                "5837d7c7b3e73645",
                "a532481d4de4d0f6",
                "cff2cbb9f37c012e"
            ]
        ]
    },
    {
        "id": "eb66f9c0230cd10f",
        "type": "json",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": true,
        "x": 1850,
        "y": 1240,
        "wires": [
            [
                "50e0b91344bb85d5"
            ]
        ]
    },
    {
        "id": "bcc5d589df58bcbc",
        "type": "http request",
        "z": "fe7a71b98f4f9781",
        "name": "Get admin",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "body",
        "url": "http://localhost:8080/user/adminByName?username={{{username}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1690,
        "y": 1240,
        "wires": [
            [
                "eb66f9c0230cd10f"
            ]
        ]
    },
    {
        "id": "50e0b91344bb85d5",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "admin.username",
                "pt": "flow",
                "to": "username",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "admin",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "admin",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2020,
        "y": 1240,
        "wires": [
            [
                "d890500d2058a646",
                "4755324c728f6ecc"
            ]
        ]
    },
    {
        "id": "d890500d2058a646",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "Go to admin tab",
        "func": "msg.payload = {\n    tab: \"Campaign\" // Cambia a la pestaña donde está el segundo formulario\n};\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2220,
        "y": 1240,
        "wires": [
            [
                "ecfc435943642862",
                "7960f90eab674aec"
            ]
        ]
    },
    {
        "id": "a532481d4de4d0f6",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "To second form",
        "func": "msg.payload = {\n    tab: \"Weigth\" // Cambia a la pestaña donde está el segundo formulario\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2180,
        "y": 1139,
        "wires": [
            [
                "ecfc435943642862",
                "07fa3d6058022952",
                "7960f90eab674aec",
                "70278709e5c659b0"
            ]
        ]
    },
    {
        "id": "7960f90eab674aec",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "function eta gero",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2830,
        "y": 1199,
        "wires": []
    },
    {
        "id": "07fa3d6058022952",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "Empty msg.payload",
        "func": "msg.payload = [];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2930,
        "y": 1359,
        "wires": [
            [
                "562eda0ef3674c35"
            ]
        ]
    },
    {
        "id": "9a9178976f9d9460",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\n\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 4220,
        "wires": [
            [
                "25f00701c0ac2e19"
            ]
        ]
    },
    {
        "id": "f281137d177fd2d8",
        "type": "http request",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/email/typedCode?writtenCode={{{writtenCode}}}&verifyMail={{{verifyMail}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1470,
        "y": 720,
        "wires": [
            [
                "ac95a08f5ac58eb3",
                "8e48b7771d267517"
            ]
        ]
    },
    {
        "id": "a3447839b6eaf63c",
        "type": "json",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": true,
        "x": 430,
        "y": 720,
        "wires": [
            [
                "a3e0cabc244c836a"
            ]
        ]
    },
    {
        "id": "a3e0cabc244c836a",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "function 50",
        "func": "var code = msg.payload.verificationCode;\ncode = code.toString();\nmsg.verifyMail = code;\nvar user = flow.get('user')||0;\nmsg.payload = user;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 720,
        "wires": [
            [
                "20e00b714dd1f590"
            ]
        ]
    },
    {
        "id": "20e00b714dd1f590",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 720,
        "wires": [
            [
                "3048bf84ffce2237"
            ]
        ]
    },
    {
        "id": "f1fb0ed66a4fe771",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Cannot create user",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 460,
        "wires": [
            [
                "e488c5a21f92d925"
            ]
        ]
    },
    {
        "id": "8d204edcc0435d79",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Error",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "It has been an error",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1200,
        "y": 540,
        "wires": [
            [
                "fe4fd0a6cd1f858a"
            ]
        ]
    },
    {
        "id": "7ece94c9930f6c07",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "function 52",
        "func": "msg.payload = 'The username does exist: ' + msg.user;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 420,
        "wires": [
            [
                "184268b75c7223e3",
                "f1fb0ed66a4fe771"
            ]
        ]
    },
    {
        "id": "184268b75c7223e3",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 380,
        "wires": []
    },
    {
        "id": "8f27b7ff69adb7fa",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "function 53",
        "func": "msg.emailVerification = msg.payload;\nmsg.payload =\n{\n    tab: \"Email verification\"\n};\n\nflow.set('emailVerification', msg.emailVerification);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 320,
        "wires": [
            [
                "4b58396c615bbe07"
            ]
        ]
    },
    {
        "id": "e0af13b200829124",
        "type": "switch",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 890,
        "y": 400,
        "wires": [
            [
                "8f27b7ff69adb7fa"
            ],
            [
                "7ece94c9930f6c07"
            ],
            [
                "8d204edcc0435d79"
            ]
        ]
    },
    {
        "id": "7c0c67fa47c45c30",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "writtenCode",
                "pt": "msg",
                "to": "payload.writtenCode",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "emailVerification",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 720,
        "wires": [
            [
                "a3447839b6eaf63c"
            ]
        ]
    },
    {
        "id": "6d8c29677c24c943",
        "type": "comment",
        "z": "fe7a71b98f4f9781",
        "name": "Initalize user (POST)",
        "info": "",
        "x": 190,
        "y": 40,
        "wires": []
    },
    {
        "id": "9216a9a7ecd513d9",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "Append to weight",
        "func": "const inp = msg.payload;\n\nvar outObj = [{\n    series: [\"Current Weight\"],\n    data: [[]],\n    labels: [\"\"]\n}]\n\nfor (let item of inp) {\n    outObj[0].data[0].push({\n        x: item.registerDate,\n        y: item.weight\n    })\n}\n\nmsg.payload = outObj;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1950,
        "y": 3760,
        "wires": [
            [
                "a6bff90619422a96"
            ]
        ]
    },
    {
        "id": "79835b9765cac260",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "Append to goalWeight",
        "func": "const inp = msg.payload;\n\nvar outObj = [{\n    series: [\"Goal Weight\"],\n    data: [[]],\n    labels: [\"\"]\n}]\n\nlet registerDate = 0;\nlet durationInMs = 0\n\nfor (let item of inp) {\n    registerDate = new Date(item.registerDate); // Convert to Date object\n    durationInMs = item.durationToAchieveGoalWeight * 24 * 60 * 60 * 1000;\n\n    let newDate = new Date(registerDate.getTime() + durationInMs);\n\n    outObj[0].data[0].push({\n        x: newDate,\n        y: item.goalWeight\n    });\n}\n\nmsg.payload = outObj;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1960,
        "y": 3820,
        "wires": [
            [
                "3db54f2f7548e76d"
            ]
        ]
    },
    {
        "id": "3048bf84ffce2237",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "Schema creator",
        "func": "\nvar user = flow.get('user')||0;\nif(user.premium==\"true\")\n{\n    user.premium = true;\n}\nelse{\n    user.premium = false;\n}\n\nmsg.payload = user;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 720,
        "wires": [
            [
                "350b8cf4221bc1b9",
                "f281137d177fd2d8",
                "ad42b18b55384283"
            ]
        ]
    },
    {
        "id": "350b8cf4221bc1b9",
        "type": "json-schema-validator",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "User Validator",
        "func": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n        \"title\": \"UserData\",\n            \"description\": \"User's information\",\n                \"type\": \"object\",\n                    \"properties\": {\n        \"uname\": {\n            \"description\": \"user's name\",\n                \"type\": \"string\"\n        },\n        \"secondName\": {\n            \"description\": \"user's second name\",\n                \"type\": \"string\"\n        },\n        \"gender\": {\n            \"description\": \"user's gender\",\n                \"type\": \"string\",\n                    \"enum\": [\"M\", \"F\"]\n        },\n        \"age\": {\n            \"description\": \"user's age\",\n                \"type\": \"integer\"\n        },\n        \"height\": {\n            \"description\": \"user's height\",\n                \"type\": \"integer\"\n        },\n        \"username\": {\n            \"description\": \"user's username\",\n                \"type\": \"string\"\n        },\n        \"email\": {\n            \"description\": \"user's email\",\n                \"type\": \"string\"\n        },\n        \"userPass\": {\n            \"description\": \"user's password\",\n                \"type\": \"string\"\n        },\n        \"activityLevel\": {\n            \"description\": \"how much activity the user does\",\n                \"type\": \"string\",\n                    \"enum\": [\"Sedentary\", \"Light\", \"Moderate\", \"Active\", \"Very Active\"]\n        },\n        \"premium\": {\n            \"description\": \"if the user is a premium user or not\",\n                \"type\": \"boolean\"\n        },\n        \"objective\": {\n            \"description\": \"the user's objective\",\n                \"type\": \"string\",\n                    \"enum\": [\"Lose weight\", \"Gain weight\", \"Keep fit\"]\n        },\n        \"neck\": {\n            \"description\": \"user's neck size in cm\",\n                \"type\": \"number\"\n        },\n        \"waist\": {\n            \"description\": \"user's waist size in cm\",\n                \"type\": \"number\"\n        },\n        \"hips\": {\n            \"description\": \"user's hips size in cm\",\n                \"type\": \"number\"\n        }\n    },\n    \"required\": [\n        \"uname\",\n        \"secondName\",\n        \"gender\",\n        \"age\",\n        \"height\",\n        \"username\",\n        \"email\",\n        \"userPass\",\n        \"activityLevel\",\n        \"premium\",\n        \"objective\",\n        \"neck\",\n        \"waist\",\n        \"hips\"\n    ]\n}",
        "x": 1220,
        "y": 660,
        "wires": [
            [
                "f281137d177fd2d8"
            ]
        ]
    },
    {
        "id": "3593ae0b740bb932",
        "type": "catch",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "scope": [
            "350b8cf4221bc1b9",
            "774b4f67c66fa31c",
            "ced3a6e4a87fc41c",
            "e3dd8c3a62728932",
            "e0a9468dbcbe31c4"
        ],
        "uncaught": false,
        "x": 2140,
        "y": 440,
        "wires": [
            [
                "b9ed46afe6f6516a",
                "622a58b3a7b2c554"
            ]
        ]
    },
    {
        "id": "b9ed46afe6f6516a",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "mypost",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2520,
        "y": 540,
        "wires": []
    },
    {
        "id": "622a58b3a7b2c554",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Error",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Not allowed information",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2380,
        "y": 440,
        "wires": [
            [
                "f6d60ee213e7057b"
            ]
        ]
    },
    {
        "id": "e3dd8c3a62728932",
        "type": "json-schema-validator",
        "z": "fe7a71b98f4f9781",
        "name": "Food validator",
        "func": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"title\": \"Food\",\n    \"description\": \"Food information\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"foodName\": {\n            \"description\": \"the name of the food\",\n            \"type\": \"string\"\n        },\n        \"proteins\": {\n            \"description\": \"proteins of the food\",\n            \"type\": \"number\"\n        },\n        \"carbs\": {\n            \"description\": \"carbs of the food\",\n            \"type\": \"number\"\n        },\n        \"fats\" : {\n            \"description\": \"fats of the food\",\n            \"type\": \"number\"\n        },\n        \"fiber\": {\n            \"description\": \"fiber of the food\",\n            \"type\": \"number\"\n        }\n        \n    },\n    \"required\": [\n    \"foodName\",\n    \"proteins\",\n    \"carbs\",\n    \"fats\", \n    \"fiber\"\n    ]\n} \n\n",
        "x": 500,
        "y": 5280,
        "wires": [
            [
                "b87e79ad44e5b3c5"
            ]
        ]
    },
    {
        "id": "109186a7e76de086",
        "type": "catch",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "scope": [
            "e3dd8c3a62728932"
        ],
        "uncaught": false,
        "x": 440,
        "y": 5380,
        "wires": [
            [
                "c7fd4a00a371f8b7",
                "caad8047f2ed1cb0"
            ]
        ]
    },
    {
        "id": "c7fd4a00a371f8b7",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "mypost",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 5460,
        "wires": []
    },
    {
        "id": "caad8047f2ed1cb0",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Error",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Not allowed information",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 5380,
        "wires": [
            [
                "123074bb5a404042"
            ]
        ]
    },
    {
        "id": "ced3a6e4a87fc41c",
        "type": "json-schema-validator",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "",
        "func": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n        \"title\": \"Weight Goals\",\n            \"description\": \"Weight goals information\",\n                \"type\": \"object\",\n                    \"properties\": {\n        \"userID\": {\n            \"description\": \"the weight of the user\",\n                \"type\": \"integer\"\n        },\n        \"weight\": {\n            \"description\": \"the weight of the user\",\n                \"type\": \"number\"\n        },\n        \"goalWeight\": {\n            \"description\": \"the goal weight of the user\",\n                \"type\": \"number\"\n        },\n        \"durationToAchieveGoalWeight\": {\n            \"description\": \"the duration to achieve goal weight\",\n                \"type\": \"integer\"\n        },\n        \"registerDate\" : {\n            \"description\": \"when the user registers the weight\",\n                \"type\": \"string\"\n        }\n\n    },\n    \"required\": [\n        \"userID\",\n        \"weight\",\n        \"goalWeight\",\n        \"durationToAchieveGoalWeight\",\n        \"registerDate\"\n    ]\n}",
        "x": 910,
        "y": 3860,
        "wires": [
            [
                "ab7935481ee66f8c"
            ]
        ]
    },
    {
        "id": "b8d015521c52f42e",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "info",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 6810,
        "y": 20,
        "wires": [
            [
                "9c3528d41ce6642a",
                "2baec2c4b43519e4"
            ]
        ]
    },
    {
        "id": "2f391c14460b0afe",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "type",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1628.0000305175781,
        "y": 2560.0000257492065,
        "wires": [
            []
        ]
    },
    {
        "id": "7e1df1209f180ab1",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "class",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1393.0000305175781,
        "y": 2050.0000400543213,
        "wires": [
            []
        ]
    },
    {
        "id": "da3beafa824a2247",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "group",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1438.0000305175781,
        "y": 2980.0000257492065,
        "wires": [
            []
        ]
    },
    {
        "id": "42f093807b654e90",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "function 54",
        "func": "//var restrictedName = flow.get('restrictedName') || null;\nvar classObj = flow.get('class') || null;\nvar typeObj = flow.get('type') || null;\nvar groupObj = flow.get('group') || null;\nvar ingredientObj = flow.get('ingredient') || null;\n\n/*msg.groupID = groupID;\nmsg.typeID = typeID;\nmsg.ingredientID = ingredientID;\nif(typeID == \"null\" || typeID == null)\n{\n    typeID=0;\n}\nif(groupID == \"null\" || groupID == null){\n    groupID=0;\n}\nif(ingredientID == \"null\" || ingredientID == null){\n    ingredientID = 0;\n}*/\nvar userObj = flow.get('user')||0;\n\n\n/*var restriction = {\n    //restrictedName : restrictedName,\n    userID: user.userID,\n    groupID: groupID,\n    typeID: typeID,\n    classID: classID,\n    ingredientID: ingredientID\n}\nmsg.payload = restriction;*/\nvar restrictionComplete = {\n  //restrictedName: restrictedName,\n    userData: userObj,\n    foodGroup: groupObj,\n    ingredient: ingredientObj,\n    foodType: typeObj,\n    foodClass: classObj\n}\nmsg.restriction = restrictionComplete;\nmsg.payload = restrictionComplete;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 588.0000305175781,
        "y": 3360.0000257492065,
        "wires": [
            [
                "774b4f67c66fa31c",
                "5a4f06d460e2e622",
                "af61ba3e233f40ea"
            ]
        ]
    },
    {
        "id": "8a22e7dcd749f9b4",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ingredient",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1478.0000305175781,
        "y": 3160.0000257492065,
        "wires": [
            []
        ]
    },
    {
        "id": "e24bfcc21d113d26",
        "type": "catch",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "scope": [
            "350b8cf4221bc1b9",
            "ced3a6e4a87fc41c"
        ],
        "uncaught": false,
        "x": 5490,
        "y": 720,
        "wires": [
            [
                "108ffc59f9adb3f9",
                "43d3698bebdca4ed"
            ]
        ]
    },
    {
        "id": "108ffc59f9adb3f9",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "mypost",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 5700,
        "y": 760,
        "wires": []
    },
    {
        "id": "43d3698bebdca4ed",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Error",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Not allowed information",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 5750,
        "y": 720,
        "wires": [
            [
                "0d06d2711d99fbcf"
            ]
        ]
    },
    {
        "id": "774b4f67c66fa31c",
        "type": "json-schema-validator",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "Restriction validator",
        "func": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",        \"title\": \"Restrictions\",\n        \"type\": \"object\",\n        \"properties\": {\n            \"userID\": {\n                \"type\": \"integer\",\n                \"description\": \"Foreign key referencing userData(userID)\"\n            },\n            \"groupID\": {\n                \"type\": [\"integer\", \"null\"],\n                    \"description\": \"Foreign key referencing foodGroup(groupID); can be null\"\n            },\n            \"typeID\": {\n                \"type\": [\"integer\", \"null\"],\n                \"description\": \"Foreign key referencing foodType(typeID); can be null\"\n            },\n            \"classID\": {\n                \"type\": \"integer\",\n                \"description\": \"Foreign key referencing foodClass(classID)\"\n            },\n            \"ingredientID\": {\n                \"type\": [\"integer\", \"null\"],\n                \"description\": \"Foreign key referencing ingredients(ingredientID); can be null\"\n            }\n        },\n    \"required\": [\"userID\", \"classID\"],\n    \"additionalProperties\": false\n}",
        "x": 708.0000305175781,
        "y": 3300.0000257492065,
        "wires": [
            [
                "af61ba3e233f40ea"
            ]
        ]
    },
    {
        "id": "9cc9450dc99c1217",
        "type": "http request",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/restrictions/addRestriction?userID={{userID}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1287.9999237060547,
        "y": 3364.0000162124634,
        "wires": [
            [
                "4c9a6a2ab099f897",
                "bf91f9790d51e477"
            ]
        ]
    },
    {
        "id": "a3f66c2e223cca93",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 445.66739654541016,
        "y": 2756.6667337417603,
        "wires": []
    },
    {
        "id": "5ecd4d8cdcaa7cb0",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "username",
                "pt": "msg",
                "to": "user.username",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 1800,
        "wires": [
            [
                "098330dbf23fa595",
                "ea9e7725e9893c90"
            ]
        ]
    },
    {
        "id": "29e97dcd672a3c7b",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1823,
        "y": 1073,
        "wires": []
    },
    {
        "id": "5291e4fa9736bf6d",
        "type": "http request",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/restrictions/restrictionsByClass?userID={{userID}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1410,
        "y": 1800,
        "wires": [
            [
                "655ad109c32327f8",
                "7550360c45932d4f"
            ]
        ]
    },
    {
        "id": "ed598dc09139901e",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "userID",
                "pt": "msg",
                "to": "user.userID",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 1800,
        "wires": [
            [
                "6c07a420eebabb50",
                "f48efcc8cc8a0380"
            ]
        ]
    },
    {
        "id": "6c07a420eebabb50",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "function 58",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 1800,
        "wires": [
            [
                "5291e4fa9736bf6d",
                "6a8a98522baf1d8d"
            ]
        ]
    },
    {
        "id": "10208fd671d6bc5a",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "function 59",
        "func": "let sensors = [];\n//let classIDs = [];\n\nif(msg.payload.length == 0)\n{\n    msg.options = null;\n}else{\n    for (var i = 0; i < msg.payload.length; i++){\n        sensors[i] = msg.payload[i].className;\n    // classIDs[i] = msg.payload[i].classID;\n    }\n    \n    msg.options = sensors;\n}\n\n\n//flow.set('classIDs', classIDs);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1750,
        "y": 1800,
        "wires": [
            [
                "2eee616ed0b10755"
            ]
        ]
    },
    {
        "id": "655ad109c32327f8",
        "type": "json",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1570,
        "y": 1800,
        "wires": [
            [
                "10208fd671d6bc5a"
            ]
        ]
    },
    {
        "id": "6a8a98522baf1d8d",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "debug 32",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1440,
        "y": 1920,
        "wires": []
    },
    {
        "id": "f48efcc8cc8a0380",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "debug 33",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 1920,
        "wires": []
    },
    {
        "id": "7550360c45932d4f",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "debug 34",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1660,
        "y": 1940,
        "wires": []
    },
    {
        "id": "062881d50a327261",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Restriction information",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1453.0000305175781,
        "y": 2190.0000400543213,
        "wires": [
            [
                "91cd1ea17ad34764"
            ]
        ]
    },
    {
        "id": "e6122933d7d35a92",
        "type": "http request",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/restrictions/restrictionsByType?userID={{userID}}&className={{className}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 903.0000305175781,
        "y": 2230.0000400543213,
        "wires": [
            [
                "752f06867cfa20f5"
            ]
        ]
    },
    {
        "id": "f4d8701fd89bafda",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "userID",
                "pt": "msg",
                "to": "user.userID",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "className",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 473.0000305175781,
        "y": 2190.0000400543213,
        "wires": [
            [
                "87ad27b2ebc57d7e"
            ]
        ]
    },
    {
        "id": "87ad27b2ebc57d7e",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "function 60",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\n\n/*let classIDs = [];\nlet classIDList = flow.get('classIDs')||0;\n/*for (var i = 0; i < classIDList.length; i++)\n{\n    classIDs[]\n}*/\n\n//classIDs = classIDList.join(\",\");\n//msg.classIDs = classIDs;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 723.0000305175781,
        "y": 2230.0000400543213,
        "wires": [
            [
                "e6122933d7d35a92"
            ]
        ]
    },
    {
        "id": "7a37056d0a36452e",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "function 61",
        "func": "let sensors = [];\nsensors[0] = \"All types\";\n//let typeIDs = [];\nfor (var i = 0; i < msg.payload.length; i++){\n    sensors[i+1] = msg.payload[i].typeName;\n    //typeIDs[i] = msg.payload[0].typeId;\n}\n//typeIDs[0] = msg.payload[0].typeId;\n//msg.typeIDs = typeIDs;\nmsg.options = sensors;\n\n//flow.set('typeIDs', typeIDs);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1308.0000305175781,
        "y": 2200.0000257492065,
        "wires": [
            [
                "062881d50a327261",
                "723b4a8dfbfcfc66"
            ]
        ]
    },
    {
        "id": "752f06867cfa20f5",
        "type": "json",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1063.0000305175781,
        "y": 2230.0000400543213,
        "wires": [
            [
                "7a37056d0a36452e"
            ]
        ]
    },
    {
        "id": "c8f15f4112ecfc15",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Restriction information",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1762.0000305175781,
        "y": 2430.0000400543213,
        "wires": [
            [
                "6329a575221d7cfe"
            ]
        ]
    },
    {
        "id": "6474b192b9c00384",
        "type": "http request",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/restrictions/restrictionsByGroup?userID={{userID}}&typeName={{typeName}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1128.0000305175781,
        "y": 2440.0000257492065,
        "wires": [
            [
                "5721dc3837bc631d",
                "9bc42bee7238c7a1"
            ]
        ]
    },
    {
        "id": "870739926ebb1e03",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "userID",
                "pt": "msg",
                "to": "user.userID",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "typeName",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 698.0000305175781,
        "y": 2420.0000257492065,
        "wires": [
            [
                "db9dac39bc517a14",
                "b972ede0ec0d31c6"
            ]
        ]
    },
    {
        "id": "db9dac39bc517a14",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "function 62",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\n\n/*let typeIDs = [];\nlet typeIDList = flow.get('typeIDs')||0;\n\ntypeIDs = typeIDList.join(\",\");\nmsg.typesIDs = typeIDs;*/\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 928.0000305175781,
        "y": 2440.0000257492065,
        "wires": [
            [
                "6474b192b9c00384",
                "09181f8d3f211ef7"
            ]
        ]
    },
    {
        "id": "acc95bfced51f316",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "function 63",
        "func": "let sensors = [];\nsensors[0] = \"All groups\";\n//let groupIDs = [];\nfor (var i = 0; i < msg.payload.length; i++){\n    sensors[i+1] = msg.payload[i].groupName;\n    ///groupIDs[i] = msg.payload[i].groupID;\n}\n//msg.groupIDs=groupIDs\nmsg.options = sensors;\n\n//flow.set('groupIDs', groupIDs);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1612.0000305175781,
        "y": 2430.0000400543213,
        "wires": [
            [
                "c8f15f4112ecfc15",
                "1401e60e1336db43",
                "47d881c374243e17"
            ]
        ]
    },
    {
        "id": "09181f8d3f211ef7",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "debug 38",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1118.0000305175781,
        "y": 2380.0000257492065,
        "wires": []
    },
    {
        "id": "b972ede0ec0d31c6",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "debug 39",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 918.0000305175781,
        "y": 2340.0000257492065,
        "wires": []
    },
    {
        "id": "5721dc3837bc631d",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "debug 40",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1278.0000305175781,
        "y": 2400.0000257492065,
        "wires": []
    },
    {
        "id": "9bc42bee7238c7a1",
        "type": "json",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1452.0000305175781,
        "y": 2430.0000400543213,
        "wires": [
            [
                "acc95bfced51f316",
                "169de8d4cbbc0c7e"
            ]
        ]
    },
    {
        "id": "169de8d4cbbc0c7e",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "debug 43",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1338.0000305175781,
        "y": 2480.0000257492065,
        "wires": []
    },
    {
        "id": "1401e60e1336db43",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "debug 44",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1738.0000305175781,
        "y": 2500.0000257492065,
        "wires": []
    },
    {
        "id": "3e7a462ed4350b7f",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Restrictions",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1678.0000305175781,
        "y": 2680.0000257492065,
        "wires": [
            [
                "5b7f07ffb6dacedf"
            ]
        ]
    },
    {
        "id": "b37af280668a3e5a",
        "type": "http request",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/restrictions/restrictionsByIngredients?userID={{userID}}&groupName={{groupName}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1168.0000305175781,
        "y": 2800.0000257492065,
        "wires": [
            [
                "e8545e20aa1f5346",
                "fcb38cb17fecdfc0"
            ]
        ]
    },
    {
        "id": "9de2df7a95350dc2",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "userID",
                "pt": "msg",
                "to": "user.userID",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "groupName",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 798.0000305175781,
        "y": 2800.0000257492065,
        "wires": [
            [
                "b69e59698b0991ef",
                "092791311e3bbbd9"
            ]
        ]
    },
    {
        "id": "b69e59698b0991ef",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "function 64",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\n\n/*let typeIDs = [];\nlet typeIDList = flow.get('typeIDs')||0;\n\ntypeIDs = typeIDList.join(\",\");\nmsg.typesIDs = typeIDs;*/\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 988.0000305175781,
        "y": 2800.0000257492065,
        "wires": [
            [
                "b37af280668a3e5a",
                "ad781367a454ec01"
            ]
        ]
    },
    {
        "id": "4997145c88d0065d",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "function 65",
        "func": "let sensors = [];\nsensors[0] = \"All ingredients\";\n//let ingredientsIDs = [];\nfor (var i = 0; i < msg.payload.length; i++){\n    sensors[i + 1] = msg.payload[i].ingName;\n    //ingredientsIDs[i] = msg.payload[i].ingredientID;\n}\n//msg.ingredientIDs=ingredientsIDs\nmsg.options = sensors;\n\n//flow.set('ingredientsIDs', ingredientsIDs);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1488.0000305175781,
        "y": 2800.0000257492065,
        "wires": [
            [
                "3e7a462ed4350b7f",
                "95bb3f738fd74859"
            ]
        ]
    },
    {
        "id": "ad781367a454ec01",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "debug 45",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1218.0000305175781,
        "y": 2860.0000257492065,
        "wires": []
    },
    {
        "id": "092791311e3bbbd9",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "debug 46",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 928.0000305175781,
        "y": 2840.0000257492065,
        "wires": []
    },
    {
        "id": "e8545e20aa1f5346",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "debug 47",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1398.0000305175781,
        "y": 2860.0000257492065,
        "wires": []
    },
    {
        "id": "fcb38cb17fecdfc0",
        "type": "json",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1328.0000305175781,
        "y": 2800.0000257492065,
        "wires": [
            [
                "4997145c88d0065d",
                "95937ce7b78280b1"
            ]
        ]
    },
    {
        "id": "95937ce7b78280b1",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "debug 48",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1398.0000305175781,
        "y": 2920.0000257492065,
        "wires": []
    },
    {
        "id": "9cf1d9a0e602b641",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "restriction",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "userID",
                "pt": "msg",
                "to": "user.userID",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1057.9999237060547,
        "y": 3364.0000162124634,
        "wires": [
            [
                "9cc9450dc99c1217",
                "9c5d97d64c53fac3"
            ]
        ]
    },
    {
        "id": "4c9a6a2ab099f897",
        "type": "switch",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "201",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1528.0000305175781,
        "y": 3360.0000257492065,
        "wires": [
            [
                "7bf76892a3642a46",
                "55cc4fbfd3df5a05"
            ],
            [
                "a8341128a56dc7c1"
            ],
            [
                "5e3a7c44c5e05591"
            ]
        ]
    },
    {
        "id": "0a3a339b13a54692",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "Username exists error",
        "func": "msg.payload = 'The is some error in the restriction information';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2000,
        "y": 3400,
        "wires": [
            [
                "e330f9c6220e7577"
            ]
        ]
    },
    {
        "id": "7bf76892a3642a46",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "class",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "type",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "group",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "ingredient",
                "pt": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1797.9999237060547,
        "y": 3304.0000162124634,
        "wires": [
            [
                "55be65cae4bf632c",
                "6fe13475004ddab6"
            ]
        ]
    },
    {
        "id": "e330f9c6220e7577",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Cannot create the restriction",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2260,
        "y": 3400,
        "wires": [
            []
        ]
    },
    {
        "id": "5e3a7c44c5e05591",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Error",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "It has been an error",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1812.0000305175781,
        "y": 3442.0000257492065,
        "wires": [
            [
                "fad2e217bf395db3"
            ]
        ]
    },
    {
        "id": "bf91f9790d51e477",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "debug 49",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1412.0000305175781,
        "y": 3462.0000257492065,
        "wires": []
    },
    {
        "id": "5a4f06d460e2e622",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "debug 50",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 832.0000305175781,
        "y": 3442.0000257492065,
        "wires": []
    },
    {
        "id": "9c5d97d64c53fac3",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "debug 51",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1172.0000305175781,
        "y": 3502.0000257492065,
        "wires": []
    },
    {
        "id": "55cc4fbfd3df5a05",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Restrictions created",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "user",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1737.9999237060547,
        "y": 3164.0000162124634,
        "wires": [
            [
                "f3412a49b2ac266b"
            ]
        ]
    },
    {
        "id": "d6a48ae2832a3447",
        "type": "http request",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/foodclass/selectByClassName?className={{className}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 903.0000305175781,
        "y": 2050.0000400543213,
        "wires": [
            [
                "ad78668e308ad88c"
            ]
        ]
    },
    {
        "id": "008de28d69d4a66d",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "function 66",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 723.0000305175781,
        "y": 2050.0000400543213,
        "wires": [
            [
                "d6a48ae2832a3447"
            ]
        ]
    },
    {
        "id": "248a9536fad74f5d",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "className",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 503.0000305175781,
        "y": 2050.0000400543213,
        "wires": [
            [
                "008de28d69d4a66d"
            ]
        ]
    },
    {
        "id": "b51d47dae3dca077",
        "type": "http request",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/foodtype/selectByTypeName?typeName={{typeName}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1188.0000305175781,
        "y": 2520.0000257492065,
        "wires": [
            [
                "70abee312bb7d917"
            ]
        ]
    },
    {
        "id": "61b88c195e29576a",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "function 67",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 988.0000305175781,
        "y": 2540.0000257492065,
        "wires": [
            [
                "b51d47dae3dca077"
            ]
        ]
    },
    {
        "id": "6258b42327705184",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "typeName",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 648.0000305175781,
        "y": 2480.0000257492065,
        "wires": [
            [
                "61b88c195e29576a"
            ]
        ]
    },
    {
        "id": "5e36c7d27794429b",
        "type": "http request",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/foodgroup/selectByGroupName?groupName={{groupName}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1108.0000305175781,
        "y": 2900.0000257492065,
        "wires": [
            [
                "5f65162b36d2795d"
            ]
        ]
    },
    {
        "id": "6559442266e366ce",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "function 68",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 928.0000305175781,
        "y": 2900.0000257492065,
        "wires": [
            [
                "5e36c7d27794429b"
            ]
        ]
    },
    {
        "id": "aa4b979bf29ed4a0",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "groupName",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 698.0000305175781,
        "y": 2880.0000257492065,
        "wires": [
            [
                "6559442266e366ce"
            ]
        ]
    },
    {
        "id": "bd1801c294fcab04",
        "type": "http request",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/ingredient/searchIngredientByName?ingName={{ingName}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1098.0000305175781,
        "y": 3160.0000257492065,
        "wires": [
            [
                "898a11f5ba07f29e"
            ]
        ]
    },
    {
        "id": "0443215b9a52d792",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "function 69",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 898.0000305175781,
        "y": 3160.0000257492065,
        "wires": [
            [
                "bd1801c294fcab04"
            ]
        ]
    },
    {
        "id": "8e2787794beda906",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ingName",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 698.0000305175781,
        "y": 3160.0000257492065,
        "wires": [
            [
                "0443215b9a52d792"
            ]
        ]
    },
    {
        "id": "0fc1094b3a74b8de",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "debug 54",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 328.0000305175781,
        "y": 3140.0000257492065,
        "wires": []
    },
    {
        "id": "ab9e6c1b31561ac5",
        "type": "switch",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "All ingredients",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 498.0000305175781,
        "y": 3080.0000257492065,
        "wires": [
            [
                "f9a070a97acc8384"
            ],
            [
                "8e2787794beda906"
            ]
        ]
    },
    {
        "id": "f9a070a97acc8384",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ingredient.ingredientID",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 778.0000305175781,
        "y": 3080.0000257492065,
        "wires": [
            [
                "517d0e052dad8e32"
            ]
        ]
    },
    {
        "id": "8e48b7771d267517",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "debug 55",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1670,
        "y": 660,
        "wires": []
    },
    {
        "id": "af61ba3e233f40ea",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "function 70",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 847.9999237060547,
        "y": 3364.0000162124634,
        "wires": [
            [
                "9cf1d9a0e602b641"
            ]
        ]
    },
    {
        "id": "ad78668e308ad88c",
        "type": "json",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1103.0000305175781,
        "y": 2050.0000400543213,
        "wires": [
            [
                "7e1df1209f180ab1"
            ]
        ]
    },
    {
        "id": "70abee312bb7d917",
        "type": "json",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1428.0000305175781,
        "y": 2560.0000257492065,
        "wires": [
            [
                "2f391c14460b0afe",
                "86f31cb13eb40d6a"
            ]
        ]
    },
    {
        "id": "5f65162b36d2795d",
        "type": "json",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1228.0000305175781,
        "y": 2960.0000257492065,
        "wires": [
            [
                "da3beafa824a2247"
            ]
        ]
    },
    {
        "id": "898a11f5ba07f29e",
        "type": "json",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1278.0000305175781,
        "y": 3160.0000257492065,
        "wires": [
            [
                "8a22e7dcd749f9b4"
            ]
        ]
    },
    {
        "id": "86f31cb13eb40d6a",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "debug 57",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1618.0000305175781,
        "y": 2600.0000257492065,
        "wires": []
    },
    {
        "id": "1091aa43031c2bb8",
        "type": "switch",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "All types",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 372.0000305175781,
        "y": 2410.0000400543213,
        "wires": [
            [
                "887629624bce7f8d",
                "4c756ae26d2cf740"
            ],
            [
                "6258b42327705184",
                "870739926ebb1e03"
            ]
        ]
    },
    {
        "id": "484918cb40e02563",
        "type": "comment",
        "z": "fe7a71b98f4f9781",
        "name": "ONDO EPINIIIIII TABBB",
        "info": "",
        "x": 1873.7999801635742,
        "y": 3184.9999380111694,
        "wires": []
    },
    {
        "id": "887629624bce7f8d",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "type.typeID",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1232.0000305175781,
        "y": 2290.0000400543213,
        "wires": [
            []
        ]
    },
    {
        "id": "4c756ae26d2cf740",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "function 71",
        "func": "let sensors = [];\nsensors[0] = \"All groups\";\nmsg.options = sensors;\n\nreturn msg; ",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1448.0000305175781,
        "y": 2320.0000257492065,
        "wires": [
            [
                "47d881c374243e17"
            ]
        ]
    },
    {
        "id": "e62bdc350b4e270d",
        "type": "switch",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "All groups",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 528.0000305175781,
        "y": 2700.0000257492065,
        "wires": [
            [
                "ba6ce9285b426598",
                "9f7dcd5ad604f1da"
            ],
            [
                "aa4b979bf29ed4a0",
                "9de2df7a95350dc2"
            ]
        ]
    },
    {
        "id": "9f7dcd5ad604f1da",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "group.groupID",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 878.0000305175781,
        "y": 2700.0000257492065,
        "wires": [
            [
                "19ab4b139c6a089c"
            ]
        ]
    },
    {
        "id": "ba6ce9285b426598",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "function 72",
        "func": "let sensors = [];\nsensors[0] = \"All ingredients\";\nmsg.options = sensors;\n\nreturn msg; ",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 828.0000305175781,
        "y": 2640.0000257492065,
        "wires": [
            [
                "3e7a462ed4350b7f",
                "95bb3f738fd74859"
            ]
        ]
    },
    {
        "id": "e97f41ced20a6753",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "debug 59",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1338.0000305175781,
        "y": 2720.0000257492065,
        "wires": []
    },
    {
        "id": "19ab4b139c6a089c",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "groupID",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1118.0000305175781,
        "y": 2700.0000257492065,
        "wires": [
            [
                "e97f41ced20a6753"
            ]
        ]
    },
    {
        "id": "5982659e3efb9c3b",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "debug 60",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1380,
        "y": 3080,
        "wires": []
    },
    {
        "id": "517d0e052dad8e32",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ingredientID",
                "pt": "msg",
                "to": "ingredientID",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1120,
        "y": 3080,
        "wires": [
            [
                "5982659e3efb9c3b"
            ]
        ]
    },
    {
        "id": "81f837e05dbe2dfb",
        "type": "http request",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/user/usersByUsername?username={{username}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 670,
        "y": 1800,
        "wires": [
            [
                "b73d91758b1cf18d",
                "66967d021ff03c9a"
            ]
        ]
    },
    {
        "id": "b73d91758b1cf18d",
        "type": "json",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 830,
        "y": 1800,
        "wires": [
            [
                "ed598dc09139901e"
            ]
        ]
    },
    {
        "id": "098330dbf23fa595",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "function 73",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 1800,
        "wires": [
            [
                "81f837e05dbe2dfb"
            ]
        ]
    },
    {
        "id": "ea9e7725e9893c90",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "debug 61",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 1900,
        "wires": []
    },
    {
        "id": "66967d021ff03c9a",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "debug 62",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 1840,
        "wires": []
    },
    {
        "id": "21f8c1427367f973",
        "type": "ui_button",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "group": "a183720441c2ef16",
        "order": 3,
        "width": 13,
        "height": 1,
        "passthru": false,
        "label": "See all users",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 290,
        "y": 5700,
        "wires": [
            [
                "7548a1ce70141db9"
            ]
        ]
    },
    {
        "id": "725219d15a60d0af",
        "type": "ui_button",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "group": "a183720441c2ef16",
        "order": 7,
        "width": 13,
        "height": 1,
        "passthru": false,
        "label": "Delete user",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 270,
        "y": 5860,
        "wires": [
            [
                "2fc9bea3c6b8ca3e"
            ]
        ]
    },
    {
        "id": "77be6189c3541495",
        "type": "ui_button",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "group": "c6cd645fd4877ad7",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Create user",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Create user",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 170,
        "y": 260,
        "wires": [
            [
                "70bcd4337b711255"
            ]
        ]
    },
    {
        "id": "7ad372ff953e449c",
        "type": "ui_button",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "group": "bbfc23942af32973",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "One more glass of water",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 190,
        "y": 4940,
        "wires": [
            [
                "2caeb82075e582e2"
            ]
        ]
    },
    {
        "id": "a5ad4415f69571d8",
        "type": "ui_button",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "",
        "group": "ca1b2d444b8e2c72",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Weight button",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 4320,
        "wires": [
            [
                "61a3487157a84aed"
            ]
        ]
    },
    {
        "id": "dfc7130998a9ca3d",
        "type": "ui_button",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "group": "0efaaecc7e2e0e44",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Create account",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 180,
        "y": 1180,
        "wires": [
            [
                "1de3295faaf57d91"
            ]
        ]
    },
    {
        "id": "6e976dcd1fb501a2",
        "type": "ui_button",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "",
        "group": "c05c0b31021a06c7",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "button",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Restriction information",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 648.0000305175781,
        "y": 1720.0000257492065,
        "wires": [
            [
                "a18d80d0d7c5d2eb"
            ]
        ]
    },
    {
        "id": "77262c498e8205f3",
        "type": "ui_button",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "group": "334fa051fcd432a6",
        "order": 5,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Add Restriction",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Restriction name",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 298.0000305175781,
        "y": 3360.0000257492065,
        "wires": [
            [
                "138314ec89f10b4b",
                "42f093807b654e90"
            ]
        ]
    },
    {
        "id": "70166ad7eb0d7d8e",
        "type": "ui_button",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "group": "334fa051fcd432a6",
        "order": 7,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Finish",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "Login",
        "icon": "",
        "payload": "Main page",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 428.0000305175781,
        "y": 1640.0000257492065,
        "wires": [
            [
                "af6018dc2604d0c5"
            ]
        ]
    },
    {
        "id": "b07fd4b233da645f",
        "type": "ui_dropdown",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "label": "Gender",
        "tooltip": "",
        "place": "Select option",
        "group": "c6cd645fd4877ad7",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Male",
                "value": "M",
                "type": "str"
            },
            {
                "label": "Female",
                "value": "F",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 180,
        "y": 100,
        "wires": [
            [
                "57f843c5bb777c0a"
            ]
        ]
    },
    {
        "id": "542f0ab3b57b8ea7",
        "type": "ui_dropdown",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "label": "How active are you?",
        "tooltip": "",
        "place": "Select option",
        "group": "c6cd645fd4877ad7",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Sedentary",
                "value": "Sedentary",
                "type": "str"
            },
            {
                "label": "Light",
                "value": "Light",
                "type": "str"
            },
            {
                "label": "Moderate",
                "value": "Moderate",
                "type": "str"
            },
            {
                "label": "Active",
                "value": "Active",
                "type": "str"
            },
            {
                "label": "Very active",
                "value": "Very active",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 140,
        "y": 140,
        "wires": [
            [
                "a14b7702963a5216"
            ]
        ]
    },
    {
        "id": "bed63619f372a10a",
        "type": "ui_dropdown",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "label": "Premium",
        "tooltip": "",
        "place": "Select option",
        "group": "c6cd645fd4877ad7",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Yes",
                "value": "true",
                "type": "str"
            },
            {
                "label": "No",
                "value": "false",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 180,
        "y": 180,
        "wires": [
            [
                "2dbd40741bd2d404"
            ]
        ]
    },
    {
        "id": "3007474796f019b6",
        "type": "ui_dropdown",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "label": "Objective",
        "tooltip": "",
        "place": "Select option",
        "group": "c6cd645fd4877ad7",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Keep fit",
                "value": "Keep fit",
                "type": "str"
            },
            {
                "label": "Lose weight",
                "value": "Lose weight",
                "type": "str"
            },
            {
                "label": "Gain weight",
                "value": "Gain weight",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 180,
        "y": 220,
        "wires": [
            [
                "4267a3f410204199"
            ]
        ]
    },
    {
        "id": "32339de872de4a56",
        "type": "ui_dropdown",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "label": "Food group",
        "tooltip": "",
        "place": "Select option",
        "group": "334fa051fcd432a6",
        "order": 3,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 348.0000305175781,
        "y": 2700.0000257492065,
        "wires": [
            [
                "a3f66c2e223cca93",
                "e62bdc350b4e270d"
            ]
        ]
    },
    {
        "id": "2938e1fc5da8c69e",
        "type": "ui_dropdown",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "label": "Group Class",
        "tooltip": "",
        "place": "Select option",
        "group": "334fa051fcd432a6",
        "order": 1,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 243.00003051757812,
        "y": 2130.0000400543213,
        "wires": [
            [
                "f4d8701fd89bafda",
                "248a9536fad74f5d"
            ]
        ]
    },
    {
        "id": "460b26e23bfa62c9",
        "type": "ui_dropdown",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "label": "Food type",
        "tooltip": "",
        "place": "Select option",
        "group": "334fa051fcd432a6",
        "order": 2,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 182.00003051757812,
        "y": 2410.0000400543213,
        "wires": [
            [
                "1091aa43031c2bb8"
            ]
        ]
    },
    {
        "id": "033de42df0bacda2",
        "type": "ui_dropdown",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "label": "Ingredients",
        "tooltip": "",
        "place": "Select option",
        "group": "334fa051fcd432a6",
        "order": 4,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 278.0000305175781,
        "y": 3080.0000257492065,
        "wires": [
            [
                "0fc1094b3a74b8de",
                "ab9e6c1b31561ac5"
            ]
        ]
    },
    {
        "id": "7a283ad8297b7d5e",
        "type": "ui_text_input",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "",
        "label": "Restricted food name",
        "tooltip": "",
        "group": "c05c0b31021a06c7",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 158.00003051757812,
        "y": 1660.0000257492065,
        "wires": [
            [
                "5ecd4d8cdcaa7cb0"
            ]
        ]
    },
    {
        "id": "a293f71f16d8d2e6",
        "type": "ui_form",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "label": "",
        "group": "ab4e89ea65e8afe2",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Name",
                "value": "uname",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Second Name",
                "value": "secondName",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Age",
                "value": "age",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Height",
                "value": "height",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Username",
                "value": "username",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "email",
                "value": "email",
                "type": "email",
                "required": true,
                "rows": null
            },
            {
                "label": "user Password",
                "value": "userPass",
                "type": "password",
                "required": true,
                "rows": null
            },
            {
                "label": "neck",
                "value": "neck",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "waist",
                "value": "waist",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "hips",
                "value": "hips",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "uname": "",
            "secondName": "",
            "age": "",
            "height": "",
            "username": "",
            "email": "",
            "userPass": "",
            "neck": "",
            "waist": "",
            "hips": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 90,
        "y": 400,
        "wires": [
            [
                "f43a8a83b761ff0d"
            ]
        ]
    },
    {
        "id": "cd769f113de2892c",
        "type": "ui_form",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "label": "",
        "group": "da9f3525a03c70c2",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Uname",
                "value": "uname",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Second Name",
                "value": "secondName",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "UserPass",
                "value": "userPass",
                "type": "password",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "uname": "",
            "secondName": "",
            "userPass": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 490,
        "y": 6080,
        "wires": [
            [
                "4cdc39b73a7c7fc8"
            ]
        ]
    },
    {
        "id": "85255dac74cf3e0b",
        "type": "ui_form",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "label": "",
        "group": "d40f0e8b58a25673",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Name",
                "value": "foodName",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Proteins",
                "value": "proteins",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Carbs",
                "value": "carbs",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Fats",
                "value": "fats",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Fiber",
                "value": "fiber",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "foodName": "",
            "proteins": "",
            "carbs": "",
            "fats": "",
            "fiber": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 210,
        "y": 5220,
        "wires": [
            [
                "99bd75727f141542"
            ]
        ]
    },
    {
        "id": "0467bc61edd604a5",
        "type": "ui_form",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "label": "",
        "group": "0efaaecc7e2e0e44",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Username",
                "value": "username",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "user Password",
                "value": "userPass",
                "type": "password",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "username": "",
            "userPass": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 150,
        "y": 1260,
        "wires": [
            [
                "041c0c46300dc733",
                "f77cbafe33a4d7c6"
            ]
        ]
    },
    {
        "id": "a947e123163a5856",
        "type": "ui_form",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "",
        "label": "",
        "group": "2632bbeed950eceb",
        "order": 3,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Weigth",
                "value": "weigth",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Goal Weigth",
                "value": "goalWeight",
                "type": "number",
                "required": false,
                "rows": null
            },
            {
                "label": "Weeks To Achieve Goal Weight",
                "value": "durationToAchieveGoalWeight",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Register Date",
                "value": "registerDate",
                "type": "date",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "weigth": "",
            "goalWeight": "",
            "durationToAchieveGoalWeight": "",
            "registerDate": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 290,
        "y": 3800,
        "wires": [
            [
                "48b310b44be9c861",
                "0987fb86f3de8445",
                "83d994751d0b1db3"
            ]
        ]
    },
    {
        "id": "e4d14a3e66d16542",
        "type": "ui_form",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "label": "",
        "group": "97c37c0a574d34dc",
        "order": 0,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Code",
                "value": "writtenCode",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "writtenCode": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 110,
        "y": 720,
        "wires": [
            [
                "7c0c67fa47c45c30"
            ]
        ]
    },
    {
        "id": "3d4ffbedf4526625",
        "type": "ui_text",
        "z": "fe7a71b98f4f9781",
        "group": "a183720441c2ef16",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Current users",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 940,
        "y": 5760,
        "wires": []
    },
    {
        "id": "c790fe8c8219d386",
        "type": "ui_text",
        "z": "fe7a71b98f4f9781",
        "group": "bbfc23942af32973",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Glasses of water today:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1090,
        "y": 4720,
        "wires": []
    },
    {
        "id": "be79f7ef6b26e424",
        "type": "ui_gauge",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "group": "a183720441c2ef16",
        "order": 8,
        "width": 13,
        "height": 8,
        "gtype": "donut",
        "title": "",
        "label": "users",
        "format": "{{value}}",
        "min": 0,
        "max": "50",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 2170,
        "y": 600,
        "wires": []
    },
    {
        "id": "b82a5aa21f5b3915",
        "type": "ui_gauge",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "group": "66cdd876847509e4",
        "order": 2,
        "width": 6,
        "height": 4,
        "gtype": "gage",
        "title": "Protein",
        "label": "g",
        "format": "{{payload.totalProteins}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1580,
        "y": 4540,
        "wires": []
    },
    {
        "id": "dbc37d43e4dd5ef1",
        "type": "ui_gauge",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "group": "66cdd876847509e4",
        "order": 6,
        "width": 6,
        "height": 4,
        "gtype": "gage",
        "title": "Carbs",
        "label": "g",
        "format": "{{payload.totalCarbs}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1570,
        "y": 4580,
        "wires": []
    },
    {
        "id": "60e2301f33728d7d",
        "type": "ui_gauge",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "group": "66cdd876847509e4",
        "order": 3,
        "width": 6,
        "height": 4,
        "gtype": "gage",
        "title": "Fats",
        "label": "g",
        "format": "{{payload.totalFats}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1570,
        "y": 4620,
        "wires": []
    },
    {
        "id": "9914d2965459b49b",
        "type": "ui_gauge",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "group": "66cdd876847509e4",
        "order": 7,
        "width": 6,
        "height": 4,
        "gtype": "gage",
        "title": "Fiber",
        "label": "g",
        "format": "{{payload.totalFiber}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1570,
        "y": 4660,
        "wires": []
    },
    {
        "id": "adc844b753673713",
        "type": "ui_gauge",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "group": "bbfc23942af32973",
        "order": 3,
        "width": 0,
        "height": 0,
        "gtype": "wave",
        "title": "gauge",
        "label": "Glasses",
        "format": "{{value}}",
        "min": 0,
        "max": "10",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1190,
        "y": 4840,
        "wires": []
    },
    {
        "id": "a6bff90619422a96",
        "type": "ui_chart",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "",
        "group": "ca1b2d444b8e2c72",
        "order": 6,
        "width": 0,
        "height": 0,
        "label": "Weight chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "D/M",
        "interpolate": "linear",
        "nodata": "No data available",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2510,
        "y": 3759,
        "wires": [
            []
        ]
    },
    {
        "id": "3db54f2f7548e76d",
        "type": "ui_chart",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "",
        "group": "ca1b2d444b8e2c72",
        "order": 6,
        "width": 0,
        "height": 0,
        "label": "Goal weight chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "D/M",
        "interpolate": "linear",
        "nodata": "No Data Available",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 2390,
        "y": 4119,
        "wires": [
            []
        ]
    },
    {
        "id": "15209e2f088c9815",
        "type": "ui_toast",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 7310,
        "y": 40,
        "wires": []
    },
    {
        "id": "dcee8eb5f9718b87",
        "type": "ui_toast",
        "z": "fe7a71b98f4f9781",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 2570,
        "y": 720,
        "wires": []
    },
    {
        "id": "bd3166e10b0c7e09",
        "type": "ui_toast",
        "z": "fe7a71b98f4f9781",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 2310,
        "y": 780,
        "wires": []
    },
    {
        "id": "03757ccfe5a8a128",
        "type": "ui_toast",
        "z": "fe7a71b98f4f9781",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1460,
        "y": 5920,
        "wires": []
    },
    {
        "id": "30a2e1c62391e5d0",
        "type": "ui_toast",
        "z": "fe7a71b98f4f9781",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 2320,
        "y": 6080,
        "wires": []
    },
    {
        "id": "19cb28cc75573358",
        "type": "ui_toast",
        "z": "fe7a71b98f4f9781",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1700,
        "y": 5120,
        "wires": []
    },
    {
        "id": "e7929e0d35b8087a",
        "type": "ui_toast",
        "z": "fe7a71b98f4f9781",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1660,
        "y": 5340,
        "wires": []
    },
    {
        "id": "a728e3d04d0be64e",
        "type": "ui_toast",
        "z": "fe7a71b98f4f9781",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1470,
        "y": 5400,
        "wires": []
    },
    {
        "id": "5bc73fa9db1dc5be",
        "type": "ui_toast",
        "z": "fe7a71b98f4f9781",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 2650,
        "y": 1139,
        "wires": []
    },
    {
        "id": "78996277153ed857",
        "type": "ui_toast",
        "z": "fe7a71b98f4f9781",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1960,
        "y": 1340,
        "wires": []
    },
    {
        "id": "3ea7623b11a27ee4",
        "type": "ui_toast",
        "z": "fe7a71b98f4f9781",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1730,
        "y": 1400,
        "wires": []
    },
    {
        "id": "e488c5a21f92d925",
        "type": "ui_toast",
        "z": "fe7a71b98f4f9781",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1590,
        "y": 460,
        "wires": []
    },
    {
        "id": "fe4fd0a6cd1f858a",
        "type": "ui_toast",
        "z": "fe7a71b98f4f9781",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1420,
        "y": 540,
        "wires": []
    },
    {
        "id": "f6d60ee213e7057b",
        "type": "ui_toast",
        "z": "fe7a71b98f4f9781",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 2630,
        "y": 440,
        "wires": []
    },
    {
        "id": "123074bb5a404042",
        "type": "ui_toast",
        "z": "fe7a71b98f4f9781",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 830,
        "y": 5380,
        "wires": []
    },
    {
        "id": "0d06d2711d99fbcf",
        "type": "ui_toast",
        "z": "fe7a71b98f4f9781",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 6010,
        "y": 720,
        "wires": []
    },
    {
        "id": "57c7d7f63a285a78",
        "type": "ui_toast",
        "z": "fe7a71b98f4f9781",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 2536,
        "y": 3378,
        "wires": []
    },
    {
        "id": "fad2e217bf395db3",
        "type": "ui_toast",
        "z": "fe7a71b98f4f9781",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 2072.000030517578,
        "y": 3442.0000257492065,
        "wires": []
    },
    {
        "id": "f3412a49b2ac266b",
        "type": "ui_toast",
        "z": "fe7a71b98f4f9781",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1987.9999237060547,
        "y": 3164.0000162124634,
        "wires": []
    },
    {
        "id": "70bcd4337b711255",
        "type": "ui_ui_control",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "events": "all",
        "x": 340,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "05145a9c3b1648d5",
        "type": "ui_ui_control",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "events": "all",
        "x": 1640,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "09c68b5f74345729",
        "type": "ui_ui_control",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "events": "all",
        "x": 2060,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "56214413efb298a9",
        "type": "ui_ui_control",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "events": "all",
        "x": 540,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "ecfc435943642862",
        "type": "ui_ui_control",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "x": 2760,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "4b58396c615bbe07",
        "type": "ui_ui_control",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "events": "all",
        "x": 1330,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "9577f47a1af083b3",
        "type": "ui_ui_control",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "events": "all",
        "x": 2173,
        "y": 655,
        "wires": [
            []
        ]
    },
    {
        "id": "a18d80d0d7c5d2eb",
        "type": "ui_ui_control",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "",
        "events": "all",
        "x": 798.0000305175781,
        "y": 1720.0000257492065,
        "wires": [
            []
        ]
    },
    {
        "id": "91cd1ea17ad34764",
        "type": "ui_ui_control",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "",
        "events": "all",
        "x": 1633.0000305175781,
        "y": 2190.0000400543213,
        "wires": [
            []
        ]
    },
    {
        "id": "6329a575221d7cfe",
        "type": "ui_ui_control",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "",
        "events": "all",
        "x": 5804,
        "y": 510.00001430511475,
        "wires": [
            []
        ]
    },
    {
        "id": "5b7f07ffb6dacedf",
        "type": "ui_ui_control",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "",
        "events": "all",
        "x": 6340,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "5498ba8f228febe4",
        "type": "ui_ui_control",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "",
        "events": "all",
        "x": 7540,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "138314ec89f10b4b",
        "type": "ui_ui_control",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "",
        "events": "all",
        "x": 617.9999237060547,
        "y": 3444.0000162124634,
        "wires": [
            []
        ]
    },
    {
        "id": "55be65cae4bf632c",
        "type": "ui_ui_control",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "",
        "events": "all",
        "x": 2118.000030517578,
        "y": 3300.0000257492065,
        "wires": [
            []
        ]
    },
    {
        "id": "af6018dc2604d0c5",
        "type": "ui_ui_control",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "events": "all",
        "x": 600,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "b6da88796dddfd20",
        "type": "ui_gauge",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "group": "66cdd876847509e4",
        "order": 5,
        "width": 6,
        "height": 4,
        "gtype": "gage",
        "title": "Calories",
        "label": "cal",
        "format": "{{payload.totalCalories}}",
        "min": 0,
        "max": 10,
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1580,
        "y": 4700,
        "wires": []
    },
    {
        "id": "e22b0cd1824a43ae",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "dynamic max and min",
        "func": "var max = msg.finalDailyCalorieIntake;\nvar min = 0;\nvar curPayload = Math.round(msg.payload.totalCalories);\nmsg = {\n    ui_control:{min:min,max:max},\n    payload: curPayload\n    };\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 4700,
        "wires": [
            [
                "b6da88796dddfd20"
            ]
        ]
    },
    {
        "id": "01861f119e2676c5",
        "type": "http request",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://127.0.0.1:5000/intake_prediction",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 2150,
        "y": 4240,
        "wires": [
            [
                "5f0272c731940e83"
            ]
        ]
    },
    {
        "id": "5f0272c731940e83",
        "type": "json",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2330,
        "y": 4239,
        "wires": [
            [
                "f41d1cb5464df2a9"
            ]
        ]
    },
    {
        "id": "a9c0c0618c6ab0a2",
        "type": "ui_template",
        "z": "fe7a71b98f4f9781",
        "group": "bbfc23942af32973",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<a href=\"https://t.me/Janai_chatBot\" target=\"_blank\">\n    <button style=\"padding: 10px; font-size: 16px; background-color: #0088cc; color: white; border: none; border-radius: 5px; width: 100%;\">\n        NUTRITIONAL CHAT\n    </button>\n</a>\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 140,
        "y": 4800,
        "wires": [
            []
        ]
    },
    {
        "id": "61d87b8ef88b65b9",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "function 80",
        "func": "var userId = flow.get(\"user.userID\");\nvar username = flow.get(\"user.username\");\nmsg.topic = \"SELECT SUM(f.carbs) as sumCarbs, SUM(f.proteins) as sumProteins, SUM(f.fats) as sumFats, SUM(f.fiber) as sumFibers, SUM(f.calories) as sumCalories FROM foodlist fl JOIN food f ON fl.foodID=f.foodID WHERE fl.userID='\"+userId+\"' GROUP BY f.foodId; SELECT finalDailyCalorieIntake FROM userData WHERE username='\"+username+\"'\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 4680,
        "wires": [
            []
        ]
    },
    {
        "id": "6bdf71964696524f",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "function 79",
        "func": "msg.max = msg.payload;\nmsg.carbs = Math.round((msg.max * 0.45) / 4);\nmsg.fats = Math.round((msg.max * 0.25) / 9);\nmsg.proteins = Math.round((msg.max * 0.30) / 4); \nmsg.finalDailyCalorieIntake = Math.round(msg.max);\nif (flow.get(\"user.gender\")==\"M\"){\n    msg.fibers = 30;\n}\nelse {\n    msg.fibers = 25;\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 4560,
        "wires": [
            [
                "e22b0cd1824a43ae",
                "8c14f8420ae74062",
                "a347e169ae8d606b",
                "2657bbd04f198dbb",
                "5abfee585a61a81d",
                "66f573979be8f7e4"
            ]
        ]
    },
    {
        "id": "2eee616ed0b10755",
        "type": "switch",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "property": "options",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1950,
        "y": 1800,
        "wires": [
            [
                "0b0ebbfc82614ef1",
                "986befd7d3c6dfaa"
            ],
            [
                "11d312f56ff19f71"
            ]
        ]
    },
    {
        "id": "0b0ebbfc82614ef1",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "There is not more restrictions",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2180,
        "y": 1780,
        "wires": [
            [
                "d6f276e03d5a7a7f"
            ]
        ]
    },
    {
        "id": "986befd7d3c6dfaa",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Main page",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2180,
        "y": 1840,
        "wires": [
            [
                "7fe48870885e44c5"
            ]
        ]
    },
    {
        "id": "7fe48870885e44c5",
        "type": "ui_ui_control",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "events": "all",
        "x": 2380,
        "y": 1840,
        "wires": [
            []
        ]
    },
    {
        "id": "d6f276e03d5a7a7f",
        "type": "ui_toast",
        "z": "fe7a71b98f4f9781",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 2420,
        "y": 1780,
        "wires": []
    },
    {
        "id": "5b8130cfdc3cf506",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "newGoal",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 3760,
        "wires": [
            [
                "f446fd95bb57b126"
            ]
        ]
    },
    {
        "id": "facfe05c60948f45",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "function 81",
        "func": "var userId = flow.get(\"user.userID\");\nmsg.topic = \"SELECT waterIntake FROM userData WHERE userID='\"+userId+\"'\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 4740,
        "wires": [
            []
        ]
    },
    {
        "id": "ea325f4a42d108dc",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "function 82",
        "func": "msg.payload = Math.round((msg.payload)/0.25);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 4660,
        "wires": [
            [
                "c790fe8c8219d386"
            ]
        ]
    },
    {
        "id": "a1b82c1aa2f23e21",
        "type": "http request",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/user/finalDailyCalorieIntakeByUsername?username={{username}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 890,
        "y": 4460,
        "wires": [
            [
                "6bdf71964696524f",
                "61cf01ec8f036ffd"
            ]
        ]
    },
    {
        "id": "ce4d7d118456244d",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "username",
                "pt": "msg",
                "to": "user.username",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "userID",
                "pt": "msg",
                "to": "user.userID",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 4580,
        "wires": [
            [
                "7ee07de05b646ced"
            ]
        ]
    },
    {
        "id": "61cf01ec8f036ffd",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "debug 77",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 4440,
        "wires": []
    },
    {
        "id": "515afac01e586853",
        "type": "link in",
        "z": "fe7a71b98f4f9781",
        "name": "link in 1",
        "links": [
            "6975fc6d6563f5ec",
            "82469c128e95aa99",
            "70278709e5c659b0",
            "d965487eeebf3608"
        ],
        "x": 145,
        "y": 4580,
        "wires": [
            [
                "ce4d7d118456244d",
                "61d87b8ef88b65b9",
                "facfe05c60948f45"
            ]
        ]
    },
    {
        "id": "6975fc6d6563f5ec",
        "type": "link out",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "link out 1",
        "mode": "link",
        "links": [
            "515afac01e586853"
        ],
        "x": 3035,
        "y": 4240,
        "wires": []
    },
    {
        "id": "7ee07de05b646ced",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\n\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 4580,
        "wires": [
            [
                "a1b82c1aa2f23e21",
                "d73ce1d52777f347",
                "442bd9672a0fe857",
                "f3d654689ddb18d7"
            ]
        ]
    },
    {
        "id": "d73ce1d52777f347",
        "type": "http request",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/foodList/macrosByUser?userID={{userID}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 890,
        "y": 4540,
        "wires": [
            [
                "dc92ec047a54aeb1"
            ]
        ]
    },
    {
        "id": "93a297f78076e8eb",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "debug 78",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1380,
        "y": 4800,
        "wires": []
    },
    {
        "id": "442bd9672a0fe857",
        "type": "http request",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/user/waterIntakeByUserID?userID={{userID}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 830,
        "y": 4660,
        "wires": [
            [
                "ea325f4a42d108dc"
            ]
        ]
    },
    {
        "id": "dc92ec047a54aeb1",
        "type": "json",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1130,
        "y": 4620,
        "wires": [
            [
                "93a297f78076e8eb",
                "b82a5aa21f5b3915",
                "dbc37d43e4dd5ef1",
                "60e2301f33728d7d",
                "9914d2965459b49b",
                "b6da88796dddfd20"
            ]
        ]
    },
    {
        "id": "66f573979be8f7e4",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "debug 79",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 4420,
        "wires": []
    },
    {
        "id": "e228691b7d53f051",
        "type": "http request",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/user/modifyCalorieIntake?userID={{userID}}&finalDailyCalorieIntake={{finalDailyCalorieIntake}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 2910,
        "y": 4240,
        "wires": [
            [
                "6975fc6d6563f5ec"
            ]
        ]
    },
    {
        "id": "02a8ec89ef843887",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload.userID",
                "pt": "msg",
                "to": "user.userID",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1940,
        "y": 4240,
        "wires": [
            [
                "01861f119e2676c5"
            ]
        ]
    },
    {
        "id": "f41d1cb5464df2a9",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "finalDailyCalorieIntake",
                "pt": "msg",
                "to": "payload.calorie_prediction",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "userID",
                "pt": "msg",
                "to": "user.userID",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2520,
        "y": 4240,
        "wires": [
            [
                "31219fd475c3521e"
            ]
        ]
    },
    {
        "id": "31219fd475c3521e",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\n\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2730,
        "y": 4240,
        "wires": [
            [
                "e228691b7d53f051"
            ]
        ]
    },
    {
        "id": "4d9eee1b479274bd",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "waterCounter",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "userID",
                "pt": "msg",
                "to": "user.userID",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 4940,
        "wires": [
            [
                "4d831ba7923fbb6d"
            ]
        ]
    },
    {
        "id": "4d831ba7923fbb6d",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\n\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 4940,
        "wires": [
            [
                "32692cd38777076a"
            ]
        ]
    },
    {
        "id": "32692cd38777076a",
        "type": "http request",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/user/modifyWaterCounter?userID={{userID}}&waterCounter={{waterCounter}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1490,
        "y": 4940,
        "wires": [
            [
                "adc844b753673713"
            ]
        ]
    },
    {
        "id": "2caeb82075e582e2",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "username",
                "pt": "msg",
                "to": "user.username",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 4940,
        "wires": [
            [
                "2a2e5046f19bf897"
            ]
        ]
    },
    {
        "id": "2a2e5046f19bf897",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\n\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 4940,
        "wires": [
            [
                "d3bf52705a7b7b00"
            ]
        ]
    },
    {
        "id": "d3bf52705a7b7b00",
        "type": "http request",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/user/waterCounterByUsername?username={{username}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 890,
        "y": 4940,
        "wires": [
            [
                "4d9eee1b479274bd"
            ]
        ]
    },
    {
        "id": "f3d654689ddb18d7",
        "type": "http request",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/user/waterCounterByUsername?username={{username}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 730,
        "y": 4820,
        "wires": [
            [
                "adc844b753673713"
            ]
        ]
    },
    {
        "id": "998c1649ca65454d",
        "type": "comment",
        "z": "fe7a71b98f4f9781",
        "name": "Hau ez ikutu",
        "info": "",
        "x": 478.0000305175781,
        "y": 3140.0000257492065,
        "wires": []
    },
    {
        "id": "8e4b8933ad035960",
        "type": "ui_form",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "label": "",
        "group": "a55d8688f1fda0f7",
        "order": 0,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Name",
                "value": "campName",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Town",
                "value": "town",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Company",
                "value": "company",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "campName": "",
            "town": "",
            "company": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 190,
        "y": 6420,
        "wires": [
            [
                "767f84a1a3406599",
                "5c4c87d7cc01b0cc"
            ]
        ]
    },
    {
        "id": "767f84a1a3406599",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "function 74",
        "func": "var admin = flow.get('admin' || 0);\n\nvar campaign = {\n    campName: msg.payload.campName,\n    administrator: admin,\n    town : msg.payload.town,\n    company: msg.payload.company\n}\nmsg.payload = campaign;\nmsg.campaign = campaign;\nmsg.adminID = admin.adminID;\n\nflow.set('campaign', campaign);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 6420,
        "wires": [
            [
                "d6b1e78da194d1d6",
                "a9cf4d953ad26b62",
                "9f040fa8be233f56"
            ]
        ]
    },
    {
        "id": "d6b1e78da194d1d6",
        "type": "json-schema-validator",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "",
        "func": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"title\": \"Campaign\",\n    \"description\": \"Schema for creating a Campaign object\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"campName\": {\n            \"description\": \"Name of the campaign\",\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"maxLength\": 255\n        },\n        \"adminID\": {\n            \"description\": \"ID of the administrator responsible for the campaign\",\n            \"type\": \"integer\",\n            \"minimum\": 1\n        },\n        \"town\": {\n            \"description\": \"Location of the campaign\",\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"maxLength\": 255\n        },\n        \"company\": {\n            \"description\": \"Company involved in the campaign\",\n            \"type\": \"string\",\n            \"minLength\": 1,\n            \"maxLength\": 255\n        }\n    },\n    \"required\": [\n        \"campName\",\n        \"adminID\",\n        \"town\",\n        \"company\"\n    ]\n}",
        "x": 590,
        "y": 6360,
        "wires": [
            [
                "9f040fa8be233f56"
            ]
        ]
    },
    {
        "id": "f6b8d8085b32eb06",
        "type": "http request",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/campaign/add?adminID={{adminID}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1220,
        "y": 6420,
        "wires": [
            [
                "99fdefbe7a6cad47",
                "38c64f6e8490fce2"
            ]
        ]
    },
    {
        "id": "86dd082d5618a53c",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Campaign created",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1720,
        "y": 6320,
        "wires": [
            [
                "73c4bfe6a239e601"
            ]
        ]
    },
    {
        "id": "73c4bfe6a239e601",
        "type": "ui_toast",
        "z": "fe7a71b98f4f9781",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1990,
        "y": 6320,
        "wires": []
    },
    {
        "id": "5c4c87d7cc01b0cc",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "debug 63",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 6500,
        "wires": []
    },
    {
        "id": "99fdefbe7a6cad47",
        "type": "switch",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "201",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1430,
        "y": 6420,
        "wires": [
            [
                "86dd082d5618a53c",
                "01f0f9768da3646b"
            ],
            [
                "7fbd6f23c0918131"
            ],
            [
                "dbadc2b7d2811bc7"
            ]
        ]
    },
    {
        "id": "6df822700099043a",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2090,
        "y": 6440,
        "wires": []
    },
    {
        "id": "7fbd6f23c0918131",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "Username exists error",
        "func": "msg.payload = 'The username does exist: ' + msg.user;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1720,
        "y": 6480,
        "wires": [
            [
                "6df822700099043a",
                "49ca5488082cc343"
            ]
        ]
    },
    {
        "id": "43431010f9dcaace",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "username",
                "pt": "flow",
                "to": "user.username",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "campaign",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "campaignIngredient",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1840,
        "y": 6380,
        "wires": [
            [
                "edb58bee5a1cf7ac"
            ]
        ]
    },
    {
        "id": "70d1af914522cf91",
        "type": "ui_toast",
        "z": "fe7a71b98f4f9781",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 2310,
        "y": 6500,
        "wires": []
    },
    {
        "id": "49ca5488082cc343",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Cannot create user",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2060,
        "y": 6500,
        "wires": [
            [
                "70d1af914522cf91"
            ]
        ]
    },
    {
        "id": "dbadc2b7d2811bc7",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Error",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "It has been an error",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1720,
        "y": 6580,
        "wires": [
            [
                "6cdd508571ec9a0e"
            ]
        ]
    },
    {
        "id": "6cdd508571ec9a0e",
        "type": "ui_toast",
        "z": "fe7a71b98f4f9781",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1970,
        "y": 6580,
        "wires": []
    },
    {
        "id": "edb58bee5a1cf7ac",
        "type": "ui_ui_control",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "events": "all",
        "x": 2040,
        "y": 6380,
        "wires": [
            []
        ]
    },
    {
        "id": "35b47608d4b1bd99",
        "type": "comment",
        "z": "fe7a71b98f4f9781",
        "name": "Campaign",
        "info": "",
        "x": 220,
        "y": 6360,
        "wires": []
    },
    {
        "id": "a9cf4d953ad26b62",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "debug 66",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 6500,
        "wires": []
    },
    {
        "id": "38c64f6e8490fce2",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "debug 67",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1370,
        "y": 6500,
        "wires": []
    },
    {
        "id": "01a55967d8bff781",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "campaign",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 6420,
        "wires": [
            [
                "f6b8d8085b32eb06"
            ]
        ]
    },
    {
        "id": "9f040fa8be233f56",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 6420,
        "wires": [
            [
                "01a55967d8bff781"
            ]
        ]
    },
    {
        "id": "c626af3c1ee1fb7f",
        "type": "ui_form",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "label": "",
        "group": "adfd3dc496b19cb2",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Ingredient Name",
                "value": "ingredientName",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "initDate",
                "value": "initDate",
                "type": "date",
                "required": true,
                "rows": null
            },
            {
                "label": "endDate",
                "value": "endDate",
                "type": "date",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "ingredientName": "",
            "initDate": "",
            "endDate": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 190,
        "y": 6840,
        "wires": [
            [
                "42968ca141ae86d3",
                "8dc4f4d0f28eb3fd"
            ]
        ]
    },
    {
        "id": "92db3deb1f0a9852",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "function 75",
        "func": "var admin = flow.get('admin' || 0);\n\nvar ingredient = msg.payload;\nvar ingredientInCampaign = {\n    campaignID: msg.campaign.campaignID,\n    ingredientID: msg.payload.ingredientID,\n    initDate: msg.initDate.split(\"T\")[0],\n    endDate: msg.endDate.split(\"T\")[0],\n}\nmsg.payload = ingredientInCampaign;\nmsg.ingredient = ingredient;\nmsg.ingredientInCampaign=ingredientInCampaign;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 6840,
        "wires": [
            [
                "3461ccb6faadbefb",
                "dc17e7ee96522e9b",
                "cd0db7b225956bd9"
            ]
        ]
    },
    {
        "id": "3461ccb6faadbefb",
        "type": "json-schema-validator",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "",
        "func": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n    \"title\": \"IngredientsInCampaign\",\n    \"description\": \"Schema for the IngredientsInCampaign table\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"campaignID\": {\n            \"description\": \"ID of the campaign\",\n                \"type\": \"integer\",\n                    \"minimum\": 1\n        },\n        \"ingredientID\": {\n            \"description\": \"ID of the ingredient\",\n            \"type\": \"integer\",\n            \"minimum\": 1\n        },\n        \"init_date\": {\n            \"description\": \"Start date of the ingredient's participation in the campaign\",\n            \"type\": \"string\",\n            \"format\": \"date\"\n        },\n        \"end_date\": {\n            \"description\": \"End date of the ingredient's participation in the campaign\",\n            \"type\": \"string\",\n            \"format\": \"date\"\n        }\n    },\n    \"required\": [\n        \"campaignID\",\n        \"ingredientID\",\n        \"init_date\",\n        \"end_date\"\n    ]\n}",
        "x": 1330,
        "y": 6780,
        "wires": [
            [
                "cd0db7b225956bd9",
                "e65c25383a3a81a0"
            ]
        ]
    },
    {
        "id": "fb89cb45de6eedd6",
        "type": "http request",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/ingredientCampaign/add?campaignID={{campaignID}}&ingredientID={{ingredientID}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 2050,
        "y": 6840,
        "wires": [
            [
                "6d82cd64fa50d53f",
                "b917e460dfb89a57"
            ]
        ]
    },
    {
        "id": "ddef416c203c53ca",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Campaign created",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2580,
        "y": 6740,
        "wires": [
            [
                "76d562a5f65211e8"
            ]
        ]
    },
    {
        "id": "76d562a5f65211e8",
        "type": "ui_toast",
        "z": "fe7a71b98f4f9781",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 2840,
        "y": 6740,
        "wires": []
    },
    {
        "id": "42968ca141ae86d3",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "debug 69",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 6900,
        "wires": []
    },
    {
        "id": "6d82cd64fa50d53f",
        "type": "switch",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "201",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 2260,
        "y": 6840,
        "wires": [
            [
                "ddef416c203c53ca"
            ],
            [
                "eecbd1692933c560"
            ],
            [
                "15e686c4234d8312"
            ]
        ]
    },
    {
        "id": "eca45b63ae0615a8",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2900,
        "y": 6860,
        "wires": []
    },
    {
        "id": "eecbd1692933c560",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "Username exists error",
        "func": "msg.payload = 'The username does exist: ' + msg.user;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2580,
        "y": 6900,
        "wires": [
            [
                "eca45b63ae0615a8",
                "51346309fa66b673"
            ]
        ]
    },
    {
        "id": "bfd294b9ff1ff734",
        "type": "ui_toast",
        "z": "fe7a71b98f4f9781",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 3160,
        "y": 6920,
        "wires": []
    },
    {
        "id": "51346309fa66b673",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Cannot create user",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2920,
        "y": 6920,
        "wires": [
            [
                "bfd294b9ff1ff734"
            ]
        ]
    },
    {
        "id": "15e686c4234d8312",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Error",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "It has been an error",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2560,
        "y": 7000,
        "wires": [
            [
                "db6e3738fab8776c"
            ]
        ]
    },
    {
        "id": "db6e3738fab8776c",
        "type": "ui_toast",
        "z": "fe7a71b98f4f9781",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 2820,
        "y": 7000,
        "wires": []
    },
    {
        "id": "b14cfab3d9f01a92",
        "type": "ui_ui_control",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "events": "all",
        "x": 360,
        "y": 7040,
        "wires": [
            []
        ]
    },
    {
        "id": "b093453ba8ec81f9",
        "type": "comment",
        "z": "fe7a71b98f4f9781",
        "name": "Ingredient in Campaign",
        "info": "",
        "x": 270,
        "y": 6779,
        "wires": []
    },
    {
        "id": "dc17e7ee96522e9b",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "debug 70",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1300,
        "y": 6900,
        "wires": []
    },
    {
        "id": "b917e460dfb89a57",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "debug 71",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2230,
        "y": 6901,
        "wires": []
    },
    {
        "id": "fbc7b9535b27667e",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "campaignID",
                "pt": "msg",
                "to": "campaign.campaignID",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ingredientID",
                "pt": "msg",
                "to": "ingredient.ingredientID",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ingredientInCampaign",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1820,
        "y": 6840,
        "wires": [
            [
                "fb89cb45de6eedd6",
                "869d64d46c26e9f6"
            ]
        ]
    },
    {
        "id": "cd0db7b225956bd9",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1610,
        "y": 6840,
        "wires": [
            [
                "fbc7b9535b27667e"
            ]
        ]
    },
    {
        "id": "d8176cea799a6c29",
        "type": "http request",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/ingredient/searchIngredientByName?ingName={{ingredientName}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 790,
        "y": 6840,
        "wires": [
            [
                "87623f4fbe58593a",
                "7c9eec5fee46cb95"
            ]
        ]
    },
    {
        "id": "3b41ba1a81820cec",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ingredientName",
                "pt": "msg",
                "to": "payload.ingredientName",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "initDate",
                "pt": "msg",
                "to": "payload.initDate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "endDate",
                "pt": "msg",
                "to": "payload.endDate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "campaign",
                "pt": "msg",
                "to": "campaign",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 6840,
        "wires": [
            [
                "d8176cea799a6c29",
                "e49956261c28cf4b"
            ]
        ]
    },
    {
        "id": "8dc4f4d0f28eb3fd",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 6840,
        "wires": [
            [
                "3b41ba1a81820cec"
            ]
        ]
    },
    {
        "id": "87623f4fbe58593a",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "debug 72",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 6900,
        "wires": []
    },
    {
        "id": "e49956261c28cf4b",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "debug 73",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 6900,
        "wires": []
    },
    {
        "id": "01f0f9768da3646b",
        "type": "json",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1650,
        "y": 6380,
        "wires": [
            [
                "43431010f9dcaace",
                "244703549061ac85"
            ]
        ]
    },
    {
        "id": "7c9eec5fee46cb95",
        "type": "json",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 970,
        "y": 6840,
        "wires": [
            [
                "92db3deb1f0a9852",
                "2649320474926174"
            ]
        ]
    },
    {
        "id": "2649320474926174",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "debug 74",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 6900,
        "wires": []
    },
    {
        "id": "244703549061ac85",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "debug 75",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1800,
        "y": 6420,
        "wires": []
    },
    {
        "id": "e65c25383a3a81a0",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "debug 76",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1540,
        "y": 6780,
        "wires": []
    },
    {
        "id": "869d64d46c26e9f6",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "debug 77",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1980,
        "y": 6900,
        "wires": []
    },
    {
        "id": "c156e882bfc922d3",
        "type": "ui_button",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "group": "adfd3dc496b19cb2",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Finish",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Main page",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 190,
        "y": 7040,
        "wires": [
            [
                "b14cfab3d9f01a92"
            ]
        ]
    },
    {
        "id": "11d312f56ff19f71",
        "type": "link out",
        "z": "fe7a71b98f4f9781",
        "name": "Group link out",
        "mode": "link",
        "links": [
            "eaccf5440be0253f"
        ],
        "x": 2095,
        "y": 1900,
        "wires": []
    },
    {
        "id": "eaccf5440be0253f",
        "type": "link in",
        "z": "fe7a71b98f4f9781",
        "name": "Group link in",
        "links": [
            "11d312f56ff19f71"
        ],
        "x": 118.00003051757812,
        "y": 2110.0000400543213,
        "wires": [
            [
                "2938e1fc5da8c69e"
            ]
        ]
    },
    {
        "id": "47d881c374243e17",
        "type": "link out",
        "z": "fe7a71b98f4f9781",
        "name": "Group link out ",
        "mode": "link",
        "links": [
            "ae10aa1e2790f21a"
        ],
        "x": 1763.0000305175781,
        "y": 2380.0000257492065,
        "wires": []
    },
    {
        "id": "ae10aa1e2790f21a",
        "type": "link in",
        "z": "fe7a71b98f4f9781",
        "name": "Group link in",
        "links": [
            "47d881c374243e17"
        ],
        "x": 143.00003051757812,
        "y": 2640.0000257492065,
        "wires": [
            [
                "32339de872de4a56"
            ]
        ]
    },
    {
        "id": "cff2cbb9f37c012e",
        "type": "link out",
        "z": "fe7a71b98f4f9781",
        "name": "Class link out",
        "mode": "link",
        "links": [
            "9b68858292d83eb2",
            "8654d329eb07ca88"
        ],
        "x": 2405,
        "y": 979,
        "wires": []
    },
    {
        "id": "8654d329eb07ca88",
        "type": "link in",
        "z": "fe7a71b98f4f9781",
        "name": "Class link in",
        "links": [
            "cff2cbb9f37c012e",
            "6fe13475004ddab6"
        ],
        "x": 115,
        "y": 1800,
        "wires": [
            [
                "5ecd4d8cdcaa7cb0"
            ]
        ]
    },
    {
        "id": "28b8c88f74fe428b",
        "type": "link in",
        "z": "fe7a71b98f4f9781",
        "name": "Ingredient link in",
        "links": [
            "95bb3f738fd74859"
        ],
        "x": 123.00003051757812,
        "y": 3040.0000257492065,
        "wires": [
            [
                "033de42df0bacda2"
            ]
        ]
    },
    {
        "id": "95bb3f738fd74859",
        "type": "link out",
        "z": "fe7a71b98f4f9781",
        "name": "Ingredient link out",
        "mode": "link",
        "links": [
            "28b8c88f74fe428b"
        ],
        "x": 1473.0000305175781,
        "y": 2640.0000257492065,
        "wires": []
    },
    {
        "id": "a0eee96dad1bb0ec",
        "type": "link in",
        "z": "fe7a71b98f4f9781",
        "name": "Type link in",
        "links": [
            "723b4a8dfbfcfc66"
        ],
        "x": 153.00003051757812,
        "y": 2300.0000257492065,
        "wires": [
            [
                "460b26e23bfa62c9"
            ]
        ]
    },
    {
        "id": "723b4a8dfbfcfc66",
        "type": "link out",
        "z": "fe7a71b98f4f9781",
        "name": "Type link out",
        "mode": "link",
        "links": [
            "a0eee96dad1bb0ec"
        ],
        "x": 1633.0000305175781,
        "y": 2080.0000257492065,
        "wires": []
    },
    {
        "id": "de571de443a14f66",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "debug 80",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 1299,
        "wires": []
    },
    {
        "id": "631c7809eb829fdc",
        "type": "json",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1170,
        "y": 1159,
        "wires": [
            [
                "7e93aff0a76c1774"
            ]
        ]
    },
    {
        "id": "6fe13475004ddab6",
        "type": "link out",
        "z": "fe7a71b98f4f9781",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "8654d329eb07ca88"
        ],
        "x": 2027.1999740600586,
        "y": 3239.0001039505005,
        "wires": []
    },
    {
        "id": "98859c61f1f0ee50",
        "type": "comment",
        "z": "fe7a71b98f4f9781",
        "name": "KENDU AL DA EIN USTE DOT SET BAT",
        "info": "",
        "x": 758.0000305175781,
        "y": 3000.0000257492065,
        "wires": []
    },
    {
        "id": "562eda0ef3674c35",
        "type": "link out",
        "z": "fe7a71b98f4f9781",
        "name": "Weight link out",
        "mode": "link",
        "links": [
            "6482b77aaa1b9d72",
            "85c6899785398dcc"
        ],
        "x": 3115,
        "y": 1399,
        "wires": []
    },
    {
        "id": "6482b77aaa1b9d72",
        "type": "link in",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "Weight link in",
        "links": [
            "562eda0ef3674c35"
        ],
        "x": 165,
        "y": 4220,
        "wires": [
            [
                "61a3487157a84aed",
                "b821c07fcdfca8a0"
            ]
        ]
    },
    {
        "id": "905f5ebe5da1d27a",
        "type": "json",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "property": "headers.validation-error",
        "action": "",
        "pretty": false,
        "x": 1630,
        "y": 3580,
        "wires": [
            [
                "676b31e7d4562505"
            ]
        ]
    },
    {
        "id": "676b31e7d4562505",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "debug 81",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1780,
        "y": 3580,
        "wires": []
    },
    {
        "id": "a8341128a56dc7c1",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "headers.validation-error",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Cannot create the restriction",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 3340,
        "wires": [
            [
                "57c7d7f63a285a78",
                "47bb98d3220c3ff5"
            ]
        ]
    },
    {
        "id": "47bb98d3220c3ff5",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "debug 82",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2350,
        "y": 3280,
        "wires": []
    },
    {
        "id": "ad42b18b55384283",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "debug 83",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 820,
        "wires": []
    },
    {
        "id": "4755324c728f6ecc",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Admin logged",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "admin",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2240,
        "y": 1320,
        "wires": [
            [
                "cc1d1a446f1dedbd"
            ]
        ]
    },
    {
        "id": "cc1d1a446f1dedbd",
        "type": "ui_toast",
        "z": "fe7a71b98f4f9781",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 2440,
        "y": 1320,
        "wires": []
    },
    {
        "id": "c51db45157a21266",
        "type": "ui_text",
        "z": "fe7a71b98f4f9781",
        "group": "f7f580fe6273a259",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "text",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 690,
        "y": 6220,
        "wires": []
    },
    {
        "id": "9b68858292d83eb2",
        "type": "link in",
        "z": "fe7a71b98f4f9781",
        "name": "Modify link in",
        "links": [
            "cff2cbb9f37c012e"
        ],
        "x": 105,
        "y": 6120,
        "wires": [
            [
                "cd769f113de2892c",
                "46d816a2a869dcd5"
            ]
        ]
    },
    {
        "id": "e08c71570d415e16",
        "type": "http request",
        "z": "fe7a71b98f4f9781",
        "name": "Get all ",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "body",
        "url": "http://localhost:8080/user/usersByUsername?username={{username}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 390,
        "y": 6220,
        "wires": [
            [
                "a9c55b33b176e8fd"
            ]
        ]
    },
    {
        "id": "46d816a2a869dcd5",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 6220,
        "wires": [
            [
                "e08c71570d415e16"
            ]
        ]
    },
    {
        "id": "a9c55b33b176e8fd",
        "type": "json",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 530,
        "y": 6220,
        "wires": [
            [
                "c51db45157a21266"
            ]
        ]
    },
    {
        "id": "b821c07fcdfca8a0",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "user",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 4220,
        "wires": [
            [
                "c7b6301a67df06ce"
            ]
        ]
    },
    {
        "id": "0ca2c21297c306e2",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "debug 84",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1410,
        "y": 3740,
        "wires": []
    },
    {
        "id": "587640b697b5c1dc",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "user selection",
        "func": "var user = {uname: msg.payload.uname,\n            secondName: msg.payload.secondName,\n            userPass: msg.payload.userPass\n            };\n\nmsg.payload = user;\nmsg.user=user;\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 6220,
        "wires": [
            []
        ]
    },
    {
        "id": "5e78600b16cb36ce",
        "type": "ui_form",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "",
        "label": "",
        "group": "da9f3525a03c70c2",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Username",
                "value": "uname",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Second Name",
                "value": "secondName",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "UserPass",
                "value": "userPass",
                "type": "password",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "uname": "",
            "secondName": "",
            "userPass": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 870,
        "y": 6220,
        "wires": [
            [
                "587640b697b5c1dc"
            ]
        ]
    },
    {
        "id": "2afe387d7f31d64e",
        "type": "switch",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "201",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "400",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 3910,
        "y": 3960,
        "wires": [
            [
                "d0f2fcdd94e515da",
                "c74a2f9c790322e6"
            ],
            [
                "8ba7fc4d28b0b1d0"
            ],
            [
                "5e556cf76c051666"
            ]
        ]
    },
    {
        "id": "c9abe377deedc542",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "Username exists error",
        "func": "msg.payload = 'The is some error in the restriction information';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4451.999969482422,
        "y": 3999.9999742507935,
        "wires": [
            [
                "5045cdac7f760a17"
            ]
        ]
    },
    {
        "id": "5045cdac7f760a17",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Cannot create the restriction",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4711.999969482422,
        "y": 3999.9999742507935,
        "wires": [
            []
        ]
    },
    {
        "id": "5e556cf76c051666",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Error",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "It has been an error",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4264,
        "y": 4042,
        "wires": [
            [
                "a6e9bf53d1055d05"
            ]
        ]
    },
    {
        "id": "d0f2fcdd94e515da",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Goal created",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Weight goal created",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4189.999893188477,
        "y": 3763.999990463257,
        "wires": [
            [
                "d0f2e10b3853b752"
            ]
        ]
    },
    {
        "id": "ebca46c7fa278647",
        "type": "comment",
        "z": "fe7a71b98f4f9781",
        "name": "ONDO EPINIIIIII TABBB",
        "info": "",
        "x": 4320,
        "y": 3820,
        "wires": []
    },
    {
        "id": "01f300ef50b0b2fb",
        "type": "ui_toast",
        "z": "fe7a71b98f4f9781",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 4987.999969482422,
        "y": 3977.9999742507935,
        "wires": []
    },
    {
        "id": "a6e9bf53d1055d05",
        "type": "ui_toast",
        "z": "fe7a71b98f4f9781",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 4524,
        "y": 4042,
        "wires": []
    },
    {
        "id": "d0f2e10b3853b752",
        "type": "ui_toast",
        "z": "fe7a71b98f4f9781",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 4439.999893188477,
        "y": 3763.999990463257,
        "wires": []
    },
    {
        "id": "839631870d308ae3",
        "type": "ui_ui_control",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "",
        "events": "all",
        "x": 4570,
        "y": 3900,
        "wires": [
            []
        ]
    },
    {
        "id": "8ba7fc4d28b0b1d0",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "headers.validation-error",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Cannot create the restriction",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4280,
        "y": 3940,
        "wires": [
            [
                "01f300ef50b0b2fb",
                "c7b8c70459a46b62"
            ]
        ]
    },
    {
        "id": "c7b8c70459a46b62",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "debug 85",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4801.999969482422,
        "y": 3879.9999742507935,
        "wires": []
    },
    {
        "id": "d94b2e5ed55d9da5",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "user selection",
        "func": "\nvar user = flow.get('user')||0;\nmsg.user = user;\n\n\nmsg.payload.registerDate = msg.payload.registerDate.split('T')[0];\n\nvar newGoal = {userData: user,\n            weight: msg.payload.weigth,\n            goalWeight: msg.payload.goalWeight,\n            durationToAchieveGoalWeight: msg.payload.durationToAchieveGoalWeight,\n            registerDate: msg.payload.registerDate,\n            };\nmsg.username = msg.user.username;\n\nmsg.payload = newGoal;\nmsg.newGoal = newGoal;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3160,
        "y": 3960,
        "wires": [
            [
                "a588d61643c156b3",
                "d2cd8c5b44f727e8",
                "bbaf859bad81081b"
            ]
        ]
    },
    {
        "id": "3f17794951c256c5",
        "type": "http request",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/weight/addWeight?username={{{username}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 3710,
        "y": 3960,
        "wires": [
            [
                "2afe387d7f31d64e"
            ]
        ]
    },
    {
        "id": "bbaf859bad81081b",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\n\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3450,
        "y": 3960,
        "wires": [
            [
                "f9dc2e66470b75e8",
                "3f17794951c256c5"
            ]
        ]
    },
    {
        "id": "a588d61643c156b3",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "goal form",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3340,
        "y": 3900,
        "wires": []
    },
    {
        "id": "4d98331e38fbee59",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "goal form",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2940,
        "y": 3920,
        "wires": []
    },
    {
        "id": "89ad4ce0e4b23a57",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "goal form",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3140,
        "y": 4020,
        "wires": []
    },
    {
        "id": "d2cd8c5b44f727e8",
        "type": "json-schema-validator",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "",
        "func": "{\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n        \"title\": \"Weight Goals\",\n            \"description\": \"Weight goals information\",\n                \"type\": \"object\",\n                    \"properties\": {\n        \"userID\": {\n            \"description\": \"the weight of the user\",\n                \"type\": \"integer\"\n        },\n        \"weight\": {\n            \"description\": \"the weight of the user\",\n                \"type\": \"number\"\n        },\n        \"goalWeight\": {\n            \"description\": \"the goal weight of the user\",\n                \"type\": \"number\"\n        },\n        \"durationToAchieveGoalWeight\": {\n            \"description\": \"the duration to achieve goal weight\",\n                \"type\": \"integer\"\n        },\n        \"registerDate\" : {\n            \"description\": \"when the user registers the weight\",\n                \"type\": \"string\"\n        }\n\n    },\n    \"required\": [\n        \"userID\",\n        \"weight\",\n        \"goalWeight\",\n        \"durationToAchieveGoalWeight\",\n        \"registerDate\"\n    ]\n}",
        "x": 3390,
        "y": 4020,
        "wires": [
            [
                "bbaf859bad81081b"
            ]
        ]
    },
    {
        "id": "42bd2156a49c2971",
        "type": "ui_form",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "label": "",
        "group": "2632bbeed950eceb",
        "order": 3,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Weigth",
                "value": "weigth",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Goal Weigth",
                "value": "goalWeight",
                "type": "number",
                "required": false,
                "rows": null
            },
            {
                "label": "Weeks To Achieve Goal Weight",
                "value": "durationToAchieveGoalWeight",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Register Date",
                "value": "registerDate",
                "type": "date",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "weigth": "",
            "goalWeight": "",
            "durationToAchieveGoalWeight": "",
            "registerDate": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 2770,
        "y": 3960,
        "wires": [
            [
                "4d98331e38fbee59",
                "d94b2e5ed55d9da5",
                "89ad4ce0e4b23a57"
            ]
        ]
    },
    {
        "id": "f9dc2e66470b75e8",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "d": true,
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "newGoal",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3580,
        "y": 3920,
        "wires": [
            [
                "3f17794951c256c5"
            ]
        ]
    },
    {
        "id": "7bdd2680f6b59f0d",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "Append to weight",
        "func": "const inp = msg.payload;\n\nvar outObj = [{\n    series: [\"Current Weight\"],\n    data: [[]],\n    labels: [\"\"]\n}]\n\nfor (let item of inp) {\n    outObj[0].data[0].push({\n        x: item.registerDate,\n        y: item.weight\n    })\n}\n\nmsg.payload = outObj;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4070,
        "y": 4340,
        "wires": [
            [
                "c33d4da4ccaa5f55",
                "830be19a4a7d1662"
            ]
        ]
    },
    {
        "id": "eaa1d19e1a239f35",
        "type": "http request",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/weight/weightList?username={{{username}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 3610,
        "y": 4360,
        "wires": [
            [
                "ae2bfa9dc0461bea",
                "3caa629d39e7d06d"
            ]
        ]
    },
    {
        "id": "ae2bfa9dc0461bea",
        "type": "json",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 3790,
        "y": 4360,
        "wires": [
            [
                "7bdd2680f6b59f0d",
                "ccbc3d9a3985581e",
                "ded5d5559db4cc0b",
                "896d78f4f73e09e3"
            ]
        ]
    },
    {
        "id": "3caa629d39e7d06d",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "get goals",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3800,
        "y": 4300,
        "wires": []
    },
    {
        "id": "ccbc3d9a3985581e",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "get goals",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4040,
        "y": 4300,
        "wires": []
    },
    {
        "id": "c33d4da4ccaa5f55",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "get goals",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 4260,
        "y": 4280,
        "wires": []
    },
    {
        "id": "4c6877932510aa01",
        "type": "json",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 3110,
        "y": 4360,
        "wires": [
            [
                "906cdc9a80259638"
            ]
        ]
    },
    {
        "id": "906cdc9a80259638",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "Set username",
        "func": "msg.username = msg.payload.username;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3260,
        "y": 4360,
        "wires": [
            [
                "549855c84cbcd8a9"
            ]
        ]
    },
    {
        "id": "ded5d5559db4cc0b",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "Append to goalWeight",
        "func": "const inp = msg.payload;\n\nvar outObj = [{\n    series: [\"Goal Weight\"],\n    data: [[]],\n    labels: [\"\"]\n}]\n\nlet registerDate = 0;\nlet durationInMs = 0\n\nfor (let item of inp) {\n    registerDate = new Date(item.registerDate);\n    durationInMs = item.durationToAchieveGoalWeight * 24 * 60 * 60 * 1000;\n\n    let newDate = new Date(registerDate.getTime() + durationInMs);\n\n    outObj[0].data[0].push({\n        x: newDate.toISOString(),\n        y: item.goalWeight\n    });\n}\n\nmsg.payload = outObj;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4080,
        "y": 4400,
        "wires": [
            [
                "9e094245501682da"
            ]
        ]
    },
    {
        "id": "549855c84cbcd8a9",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\n\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3450,
        "y": 4360,
        "wires": [
            [
                "eaa1d19e1a239f35"
            ]
        ]
    },
    {
        "id": "85c6899785398dcc",
        "type": "link in",
        "z": "fe7a71b98f4f9781",
        "name": "Weight link in",
        "links": [
            "562eda0ef3674c35"
        ],
        "x": 2765,
        "y": 4360,
        "wires": [
            [
                "778dd4c125cbc3bd"
            ]
        ]
    },
    {
        "id": "778dd4c125cbc3bd",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "user",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2920,
        "y": 4360,
        "wires": [
            [
                "4c6877932510aa01"
            ]
        ]
    },
    {
        "id": "c50b1d94120141c8",
        "type": "http request",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://127.0.0.1:5000/intake_prediction",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 4690,
        "y": 4340,
        "wires": [
            [
                "d7620dbc3d84613a"
            ]
        ]
    },
    {
        "id": "d7620dbc3d84613a",
        "type": "json",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 4870,
        "y": 4339,
        "wires": [
            [
                "165e6b75f4220206"
            ]
        ]
    },
    {
        "id": "82469c128e95aa99",
        "type": "link out",
        "z": "fe7a71b98f4f9781",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "515afac01e586853"
        ],
        "x": 5575,
        "y": 4340,
        "wires": []
    },
    {
        "id": "06af2167501d81ea",
        "type": "http request",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/user/modifyCalorieIntake?userID={{userID}}&finalDailyCalorieIntake={{finalDailyCalorieIntake}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 5450,
        "y": 4340,
        "wires": [
            [
                "82469c128e95aa99"
            ]
        ]
    },
    {
        "id": "896d78f4f73e09e3",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload.userID",
                "pt": "msg",
                "to": "user.userID",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4480,
        "y": 4340,
        "wires": [
            [
                "c50b1d94120141c8"
            ]
        ]
    },
    {
        "id": "165e6b75f4220206",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "finalDailyCalorieIntake",
                "pt": "msg",
                "to": "payload.calorie_prediction",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "userID",
                "pt": "msg",
                "to": "user.userID",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 5060,
        "y": 4340,
        "wires": [
            [
                "786ccfcc9fd27350"
            ]
        ]
    },
    {
        "id": "786ccfcc9fd27350",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\n\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 5270,
        "y": 4340,
        "wires": [
            [
                "06af2167501d81ea"
            ]
        ]
    },
    {
        "id": "830be19a4a7d1662",
        "type": "ui_chart",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "group": "ca1b2d444b8e2c72",
        "order": 6,
        "width": 0,
        "height": 0,
        "label": "Weight chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "D/M",
        "interpolate": "linear",
        "nodata": "No data available",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 4350,
        "y": 4380,
        "wires": [
            []
        ]
    },
    {
        "id": "9e094245501682da",
        "type": "ui_chart",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "group": "ca1b2d444b8e2c72",
        "order": 6,
        "width": 0,
        "height": 0,
        "label": "Goal weight chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "D/M",
        "interpolate": "linear",
        "nodata": "No Data Available",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 4290,
        "y": 4440,
        "wires": [
            []
        ]
    },
    {
        "id": "c74a2f9c790322e6",
        "type": "link out",
        "z": "fe7a71b98f4f9781",
        "name": "Goals link out",
        "mode": "link",
        "links": [
            "ff99d89c813c0688"
        ],
        "x": 4165,
        "y": 3880,
        "wires": []
    },
    {
        "id": "ff99d89c813c0688",
        "type": "link in",
        "z": "fe7a71b98f4f9781",
        "name": "Goals link in",
        "links": [
            "c74a2f9c790322e6"
        ],
        "x": 3265,
        "y": 4260,
        "wires": [
            [
                "549855c84cbcd8a9"
            ]
        ]
    },
    {
        "id": "dea9c89029b04807",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "debug 86",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 6180,
        "wires": []
    },
    {
        "id": "2759bf1327bb7578",
        "type": "debug",
        "z": "fe7a71b98f4f9781",
        "name": "debug 87",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 6020,
        "wires": []
    },
    {
        "id": "55150432a733e12c",
        "type": "comment",
        "z": "fe7a71b98f4f9781",
        "name": "ALDATUTAAAA",
        "info": "",
        "x": 800,
        "y": 6720,
        "wires": []
    },
    {
        "id": "5e42492c913d041e",
        "type": "http request",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/food/search?foodName={{imageResult}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 4090,
        "y": 2540,
        "wires": [
            [
                "fc3bbcc496a7b3f4"
            ]
        ]
    },
    {
        "id": "8b87a38863a160ba",
        "type": "ui_upload",
        "z": "fe7a71b98f4f9781",
        "group": "90723e692323a8c9",
        "title": "Upload your image here:",
        "accept": "",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "chunk": 256,
        "transfer": "binary",
        "x": 3610,
        "y": 2180,
        "wires": [
            [
                "2a16402fc3b914c4"
            ]
        ]
    },
    {
        "id": "2a16402fc3b914c4",
        "type": "join",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "mode": "custom",
        "build": "buffer",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "",
        "joinerType": "str",
        "useparts": false,
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3730,
        "y": 2180,
        "wires": [
            [
                "67bb9a6258d00281"
            ]
        ]
    },
    {
        "id": "67bb9a6258d00281",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "toBase64",
        "func": "msg.payload = msg.payload.toString(\"base64\")\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3860,
        "y": 2180,
        "wires": [
            [
                "d77c7395ba77fe3c",
                "8598996b9821591f"
            ]
        ]
    },
    {
        "id": "f39761386990572c",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "file.save",
                "pt": "msg",
                "to": "C:\\Users\\Luken\\Desktop",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "imageResult",
                "pt": "msg",
                "to": "payload.predicted_class",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3740,
        "y": 2500,
        "wires": [
            [
                "63af88e547017c26",
                "9692d5688708b525"
            ]
        ]
    },
    {
        "id": "8598996b9821591f",
        "type": "jimp-image",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "ret": "b64",
        "parameter1": "256",
        "parameter1Type": "num",
        "parameter2": "256",
        "parameter2Type": "num",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "sendPropertyType": "msg",
        "parameterCount": 3,
        "jimpFunction": "resize",
        "selectedJimpFunction": {
            "name": "resize",
            "fn": "resize",
            "description": "resize the image. One of the w or h parameters can be set to automatic (\"Jimp.AUTO\" or -1).",
            "parameters": [
                {
                    "name": "w",
                    "type": "num|auto",
                    "required": true,
                    "hint": "the width to resize the image to (or \"Jimp.AUTO\" or -1)"
                },
                {
                    "name": "h",
                    "type": "num|auto",
                    "required": true,
                    "hint": "the height to resize the image to (or \"Jimp.AUTO\" or -1)"
                },
                {
                    "name": "mode",
                    "type": "resizeMode",
                    "required": false,
                    "hint": "a scaling method (e.g. Jimp.RESIZE_BEZIER)"
                }
            ]
        },
        "x": 4010,
        "y": 2140,
        "wires": [
            [
                "c5762306d14e1ba2"
            ]
        ]
    },
    {
        "id": "51a173606ed3f529",
        "type": "comment",
        "z": "fe7a71b98f4f9781",
        "name": "Image upload",
        "info": "",
        "x": 3630,
        "y": 2120,
        "wires": []
    },
    {
        "id": "c5762306d14e1ba2",
        "type": "ui_template",
        "z": "fe7a71b98f4f9781",
        "group": "9eab60fab22b209f",
        "name": "",
        "order": 1,
        "width": 10,
        "height": 5,
        "format": "<div>\n    <img src={{msg.payload}}>\n</div>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 4140,
        "y": 2140,
        "wires": [
            []
        ]
    },
    {
        "id": "d77c7395ba77fe3c",
        "type": "http request",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://127.0.0.1:5000/image_prediction",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 4030,
        "y": 2220,
        "wires": [
            [
                "a530a084b27f510a"
            ]
        ]
    },
    {
        "id": "a530a084b27f510a",
        "type": "json",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 4170,
        "y": 2220,
        "wires": [
            [
                "f39761386990572c",
                "c638e0e510e10042"
            ]
        ]
    },
    {
        "id": "a794c5a28e50fd1b",
        "type": "comment",
        "z": "fe7a71b98f4f9781",
        "name": "Image result",
        "info": "",
        "x": 3610,
        "y": 2420,
        "wires": []
    },
    {
        "id": "63af88e547017c26",
        "type": "ui_text",
        "z": "fe7a71b98f4f9781",
        "group": "9eab60fab22b209f",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "",
        "format": "{{msg.imageResult}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 3910,
        "y": 2460,
        "wires": []
    },
    {
        "id": "5fc91ff442393618",
        "type": "ui_ui_control",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "events": "all",
        "x": 4660,
        "y": 2220,
        "wires": [
            []
        ]
    },
    {
        "id": "c638e0e510e10042",
        "type": "delay",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 4340,
        "y": 2220,
        "wires": [
            [
                "97683e12645b5bae"
            ]
        ]
    },
    {
        "id": "97683e12645b5bae",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Image result",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4500,
        "y": 2220,
        "wires": [
            [
                "5fc91ff442393618"
            ]
        ]
    },
    {
        "id": "6bdf2075cf291cec",
        "type": "ui_dropdown",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "label": "Meal",
        "tooltip": "",
        "place": "Select option",
        "group": "9eab60fab22b209f",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Breakfast",
                "value": "Breakfast",
                "type": "str"
            },
            {
                "label": "Lunch",
                "value": "Lunch",
                "type": "str"
            },
            {
                "label": "Dinner",
                "value": "Dinner",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 3710,
        "y": 2720,
        "wires": [
            [
                "6601671ee097d298"
            ]
        ]
    },
    {
        "id": "12fdc04a08e60ae2",
        "type": "ui_form",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "label": "Grams",
        "group": "9eab60fab22b209f",
        "order": 9,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Grams",
                "value": "g",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "g": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 3710,
        "y": 2780,
        "wires": [
            [
                "111c0d9296a019f1"
            ]
        ]
    },
    {
        "id": "2ce435014922a6a3",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\n\nlet token = flow.get('token');\nmsg.headers['Authorization'] = `Bearer ${token}`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4350,
        "y": 2780,
        "wires": [
            [
                "cd67e2f58b25b791"
            ]
        ]
    },
    {
        "id": "cd67e2f58b25b791",
        "type": "http request",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:8080/foodList/add?foodID={{foodID}}&userID={{userID}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 4510,
        "y": 2780,
        "wires": [
            [
                "062fbc0896b7e9a2"
            ]
        ]
    },
    {
        "id": "eb8acb6d19b8e8c9",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "food selection",
        "func": "var foodList = {foodID: flow.get(\"foodID\"),\n            userID: flow.get(\"user.userID\"),\n            consumptionDate: new Date(),\n            meal: flow.get(\"meal\"),\n            grams: msg.g\n            };\n\nmsg.payload = foodList;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4000,
        "y": 2780,
        "wires": [
            [
                "ac57c9d7fde2c7e9"
            ]
        ]
    },
    {
        "id": "9692d5688708b525",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "set headers",
        "func": "msg.headers = {};\nmsg.headers['Accept'] = 'application/json';\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3930,
        "y": 2540,
        "wires": [
            [
                "5e42492c913d041e"
            ]
        ]
    },
    {
        "id": "111c0d9296a019f1",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "g",
                "pt": "msg",
                "to": "payload.g",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3840,
        "y": 2780,
        "wires": [
            [
                "eb8acb6d19b8e8c9"
            ]
        ]
    },
    {
        "id": "77bad492f808a23b",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "foodID",
                "pt": "flow",
                "to": "payload.foodID",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4400,
        "y": 2500,
        "wires": [
            []
        ]
    },
    {
        "id": "6601671ee097d298",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "meal",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3850,
        "y": 2720,
        "wires": [
            []
        ]
    },
    {
        "id": "fc3bbcc496a7b3f4",
        "type": "json",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 4230,
        "y": 2540,
        "wires": [
            [
                "77bad492f808a23b",
                "07539e0c9ea61e0e",
                "3173cec835499d51",
                "f61f95cd9ee24d52",
                "fd08a208354540aa",
                "89b957ec903c5978"
            ]
        ]
    },
    {
        "id": "ac57c9d7fde2c7e9",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "foodID",
                "pt": "msg",
                "to": "payload.foodID",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "userID",
                "pt": "msg",
                "to": "user.userID",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4180,
        "y": 2780,
        "wires": [
            [
                "2ce435014922a6a3"
            ]
        ]
    },
    {
        "id": "062fbc0896b7e9a2",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Main page",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4680,
        "y": 2780,
        "wires": [
            [
                "741dfd376e1cf042",
                "d965487eeebf3608"
            ]
        ]
    },
    {
        "id": "741dfd376e1cf042",
        "type": "ui_ui_control",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "events": "all",
        "x": 4860,
        "y": 2740,
        "wires": [
            []
        ]
    },
    {
        "id": "d965487eeebf3608",
        "type": "link out",
        "z": "fe7a71b98f4f9781",
        "name": "link out 4",
        "mode": "link",
        "links": [
            "515afac01e586853"
        ],
        "x": 4815,
        "y": 2820,
        "wires": []
    },
    {
        "id": "07539e0c9ea61e0e",
        "type": "ui_gauge",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "group": "9eab60fab22b209f",
        "order": 5,
        "width": 2,
        "height": 4,
        "gtype": "donut",
        "title": "Protein",
        "label": "g",
        "format": "{{payload.proteins}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 4400,
        "y": 2540,
        "wires": []
    },
    {
        "id": "89b957ec903c5978",
        "type": "ui_gauge",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "group": "9eab60fab22b209f",
        "order": 3,
        "width": 2,
        "height": 4,
        "gtype": "donut",
        "title": "Calories",
        "label": "cal",
        "format": "{{payload.calories}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 4400,
        "y": 2700,
        "wires": []
    },
    {
        "id": "fd08a208354540aa",
        "type": "ui_gauge",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "group": "9eab60fab22b209f",
        "order": 7,
        "width": 2,
        "height": 4,
        "gtype": "donut",
        "title": "Fiber",
        "label": "g",
        "format": "{{payload.fiber}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 4390,
        "y": 2660,
        "wires": []
    },
    {
        "id": "f61f95cd9ee24d52",
        "type": "ui_gauge",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "group": "9eab60fab22b209f",
        "order": 6,
        "width": 2,
        "height": 4,
        "gtype": "donut",
        "title": "Fats",
        "label": "g",
        "format": "{{payload.fats}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 4390,
        "y": 2620,
        "wires": []
    },
    {
        "id": "3173cec835499d51",
        "type": "ui_gauge",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "group": "9eab60fab22b209f",
        "order": 4,
        "width": 2,
        "height": 4,
        "gtype": "donut",
        "title": "Carbs",
        "label": "g",
        "format": "{{payload.calories}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 4390,
        "y": 2580,
        "wires": []
    },
    {
        "id": "70278709e5c659b0",
        "type": "link out",
        "z": "fe7a71b98f4f9781",
        "name": "link out 5",
        "mode": "link",
        "links": [
            "30c3494bc9891838",
            "515afac01e586853"
        ],
        "x": 2865,
        "y": 1240,
        "wires": []
    },
    {
        "id": "addac0428a321304",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "username",
                "pt": "msg",
                "to": "user.username",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3450,
        "y": 4260,
        "wires": [
            [
                "549855c84cbcd8a9"
            ]
        ]
    },
    {
        "id": "30c3494bc9891838",
        "type": "link in",
        "z": "fe7a71b98f4f9781",
        "name": "link in 3",
        "links": [
            "70278709e5c659b0"
        ],
        "x": 3435,
        "y": 4200,
        "wires": [
            [
                "addac0428a321304"
            ]
        ]
    },
    {
        "id": "2043ddcd1b4206c9",
        "type": "telegram receiver",
        "z": "fe7a71b98f4f9781",
        "name": "Janai_chatBot",
        "bot": "c3b51e7c0fb2d3e6",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 250,
        "y": 7180,
        "wires": [
            [
                "ecafbe22df5f43a5"
            ],
            [
                "ecafbe22df5f43a5"
            ]
        ]
    },
    {
        "id": "833cb1e68f0c35f9",
        "type": "telegram sender",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "bot": "c3b51e7c0fb2d3e6",
        "haserroroutput": false,
        "outputs": 1,
        "x": 930,
        "y": 7180,
        "wires": [
            []
        ]
    },
    {
        "id": "7afe17cc8538c1ec",
        "type": "function",
        "z": "fe7a71b98f4f9781",
        "name": "function 83",
        "func": "var content = msg.payload.response;\nvar chatId = flow.get('chatId')\n\nmsg.payload ={\n    \"chatId\": chatId,\n    \"type\": \"message\",\n    \"content\": content\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 7180,
        "wires": [
            [
                "833cb1e68f0c35f9"
            ]
        ]
    },
    {
        "id": "b03fd8ed5398b27c",
        "type": "http request",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://127.0.0.1:5000/chat",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 590,
        "y": 7180,
        "wires": [
            [
                "7afe17cc8538c1ec"
            ]
        ]
    },
    {
        "id": "ecafbe22df5f43a5",
        "type": "change",
        "z": "fe7a71b98f4f9781",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "chatId",
                "pt": "flow",
                "to": "payload.chatId",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.username",
                "pt": "msg",
                "to": "originalMessage.chat.first_name",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 7180,
        "wires": [
            [
                "b03fd8ed5398b27c"
            ]
        ]
    },
    {
        "id": "0d684f22c4a541bc",
        "type": "ui_spacer",
        "z": "fe7a71b98f4f9781",
        "name": "spacer",
        "group": "7127bbab4a3a89c1",
        "order": 3,
        "width": 6,
        "height": 1
    },
    {
        "id": "60773cf5f41092be",
        "type": "ui_spacer",
        "z": "fe7a71b98f4f9781",
        "name": "spacer",
        "group": "66cdd876847509e4",
        "order": 1,
        "width": 6,
        "height": 1
    },
    {
        "id": "e077015a2d33dcde",
        "type": "ui_spacer",
        "z": "fe7a71b98f4f9781",
        "name": "spacer",
        "group": "66cdd876847509e4",
        "order": 4,
        "width": 6,
        "height": 1
    },
    {
        "id": "3b75ae5856ab5c25",
        "type": "ui_spacer",
        "z": "fe7a71b98f4f9781",
        "name": "spacer",
        "group": "66cdd876847509e4",
        "order": 8,
        "width": 6,
        "height": 1
    },
    {
        "id": "c97ed154103285d5",
        "type": "ui_spacer",
        "z": "fe7a71b98f4f9781",
        "name": "spacer",
        "group": "66cdd876847509e4",
        "order": 9,
        "width": 6,
        "height": 1
    },
    {
        "id": "d3763d6e2fc8f18b",
        "type": "ui_spacer",
        "z": "fe7a71b98f4f9781",
        "name": "spacer",
        "group": "c9d552d2c48880b0",
        "order": 3,
        "width": 6,
        "height": 1
    },
    {
        "id": "38514f00c69d5fa1",
        "type": "ui_spacer",
        "z": "fe7a71b98f4f9781",
        "name": "spacer",
        "group": "c9d552d2c48880b0",
        "order": 9,
        "width": 6,
        "height": 1
    },
    {
        "id": "ee2e391ef69168b2",
        "type": "ui_spacer",
        "z": "fe7a71b98f4f9781",
        "name": "spacer",
        "group": "c05c0b31021a06c7",
        "order": 1,
        "width": 6,
        "height": 1
    },
    {
        "id": "3749ea1368ae6e0d",
        "type": "ui_spacer",
        "z": "fe7a71b98f4f9781",
        "name": "spacer",
        "group": "334fa051fcd432a6",
        "order": 6,
        "width": 6,
        "height": 1
    },
    {
        "id": "32025eb037fe4699",
        "type": "ui_spacer",
        "z": "fe7a71b98f4f9781",
        "name": "spacer",
        "group": "a183720441c2ef16",
        "order": 1,
        "width": 13,
        "height": 1
    },
    {
        "id": "a183720441c2ef16",
        "type": "ui_group",
        "name": "Current users",
        "tab": "29ca7a7793636547",
        "order": 1,
        "disp": true,
        "width": 13,
        "collapse": false,
        "className": ""
    },
    {
        "id": "c6cd645fd4877ad7",
        "type": "ui_group",
        "name": "General data",
        "tab": "ebbb177113d25472",
        "order": 1,
        "disp": true,
        "width": 7,
        "collapse": false,
        "className": ""
    },
    {
        "id": "bbfc23942af32973",
        "type": "ui_group",
        "name": "Water group",
        "tab": "953137ae19ed7cad",
        "order": 4,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ca1b2d444b8e2c72",
        "type": "ui_group",
        "name": "graphic",
        "tab": "aa4a9dbd83647764",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0efaaecc7e2e0e44",
        "type": "ui_group",
        "name": "Login",
        "tab": "7a5a7de9a0f118fa",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c05c0b31021a06c7",
        "type": "ui_group",
        "name": "Form",
        "tab": "ccf4af1b16ceb57c",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "334fa051fcd432a6",
        "type": "ui_group",
        "name": "information",
        "tab": "c5415bc5587df564",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ab4e89ea65e8afe2",
        "type": "ui_group",
        "name": "Function",
        "tab": "14ab3ba17e8a6109",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "da9f3525a03c70c2",
        "type": "ui_group",
        "name": "Modify form",
        "tab": "77e58d25fdd4f36a",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d40f0e8b58a25673",
        "type": "ui_group",
        "name": "Food form",
        "tab": "3ce5fb0fe297c4cf",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2632bbeed950eceb",
        "type": "ui_group",
        "name": "info",
        "tab": "aa4a9dbd83647764",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "97c37c0a574d34dc",
        "type": "ui_group",
        "name": "verification",
        "tab": "fb6480fccf8df15a",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "66cdd876847509e4",
        "type": "ui_group",
        "name": "Calorie and macros",
        "tab": "953137ae19ed7cad",
        "order": 1,
        "disp": false,
        "width": "18",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a55d8688f1fda0f7",
        "type": "ui_group",
        "name": "form",
        "tab": "85badbe0c87d579c",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "adfd3dc496b19cb2",
        "type": "ui_group",
        "name": "Ingredients",
        "tab": "e553b95abfc7328b",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f7f580fe6273a259",
        "type": "ui_group",
        "name": "Current users",
        "tab": "0e08879f995f2062",
        "order": 1,
        "disp": true,
        "width": 13,
        "collapse": false,
        "className": ""
    },
    {
        "id": "90723e692323a8c9",
        "type": "ui_group",
        "name": "Image",
        "tab": "5f2b2507734ce481",
        "order": 1,
        "disp": true,
        "width": 16,
        "collapse": false,
        "className": ""
    },
    {
        "id": "9eab60fab22b209f",
        "type": "ui_group",
        "name": "Result",
        "tab": "cdabd49132edb791",
        "order": 1,
        "disp": true,
        "width": 10,
        "collapse": false,
        "className": ""
    },
    {
        "id": "c3b51e7c0fb2d3e6",
        "type": "telegram bot",
        "botname": "Janai_chatBot",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "testenvironment": false,
        "updatemode": "polling",
        "addressfamily": "",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksprotocol": "socks5",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "7127bbab4a3a89c1",
        "type": "ui_group",
        "name": "restrictions",
        "tab": "8c7af81eb241ba3e",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c9d552d2c48880b0",
        "type": "ui_group",
        "name": "information",
        "tab": "1c31b141512779d7",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "29ca7a7793636547",
        "type": "ui_tab",
        "name": "Get users and delete user",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ebbb177113d25472",
        "type": "ui_tab",
        "name": "Initialize user",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "953137ae19ed7cad",
        "type": "ui_tab",
        "name": "Main page",
        "icon": "dashboard",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "aa4a9dbd83647764",
        "type": "ui_tab",
        "name": "Weigth",
        "icon": "dashboard",
        "order": 31,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7a5a7de9a0f118fa",
        "type": "ui_tab",
        "name": "Login",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ccf4af1b16ceb57c",
        "type": "ui_tab",
        "name": "Restriction name",
        "icon": "dashboard",
        "order": 12,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c5415bc5587df564",
        "type": "ui_tab",
        "name": "Restrictions",
        "icon": "dashboard",
        "order": 41,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "14ab3ba17e8a6109",
        "type": "ui_tab",
        "name": "Create user",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "77e58d25fdd4f36a",
        "type": "ui_tab",
        "name": "Modify user",
        "icon": "dashboard",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "3ce5fb0fe297c4cf",
        "type": "ui_tab",
        "name": "Food tab",
        "icon": "dashboard",
        "order": 9,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "fb6480fccf8df15a",
        "type": "ui_tab",
        "name": "Email verification",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "85badbe0c87d579c",
        "type": "ui_tab",
        "name": "Campaign",
        "icon": "dashboard",
        "order": 15,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e553b95abfc7328b",
        "type": "ui_tab",
        "name": "campaignIngredient",
        "icon": "dashboard",
        "order": 42,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "0e08879f995f2062",
        "type": "ui_tab",
        "name": "Get users and delete user",
        "icon": "dashboard",
        "order": 13,
        "disabled": true,
        "hidden": false
    },
    {
        "id": "5f2b2507734ce481",
        "type": "ui_tab",
        "name": "Image upload",
        "icon": "dashboard",
        "order": 10,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "cdabd49132edb791",
        "type": "ui_tab",
        "name": "Image result",
        "icon": "dashboard",
        "order": 16,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "8c7af81eb241ba3e",
        "type": "ui_tab",
        "name": "Restrictions",
        "icon": "dashboard",
        "order": 13,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1c31b141512779d7",
        "type": "ui_tab",
        "name": "Restriction information",
        "icon": "dashboard",
        "order": 14,
        "disabled": false,
        "hidden": false
    }
]